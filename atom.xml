<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jack Wang Blog</title>
  <subtitle>Goals determine what you are going to be</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.yfshare.vip/"/>
  <updated>2022-11-27T16:13:21.070Z</updated>
  <id>http://www.yfshare.vip/</id>
  
  <author>
    <name>Jack Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决Prometheus too many open files问题</title>
    <link href="http://www.yfshare.vip/2022/11/27/%E8%A7%A3%E5%86%B3Prometheus%20too%20many%20open%20files%E9%97%AE%E9%A2%98/"/>
    <id>http://www.yfshare.vip/2022/11/27/解决Prometheus too many open files问题/</id>
    <published>2022-11-27T06:06:35.000Z</published>
    <updated>2022-11-27T16:13:21.070Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>近期发现 prometheus 出现 <code>discovery=file msg=&quot;Error adding file watcher&quot; err=&quot;too many open files&quot;</code>的告警。且更新prometheus json 文件后，不能及时的刷新，需要等待很久。<br><a id="more"></a><br>报错信息如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ systemctl status prometheus.service  <span class="_">-l</span></div><div class="line">● prometheus.service - Prometheus Voice</div><div class="line">   Loaded: loaded (/etc/systemd/system/prometheus.service; enabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since Wed 2020-06-03 13:45:32 +08; 1 day 3h ago</div><div class="line">     Docs: https://github.com/prometheus/prometheus</div><div class="line"> Main PID: 281503 (prometheus)</div><div class="line">   CGroup: /system.slice/prometheus.service</div><div class="line">           └─281503 /data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus --config.file=/data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus.yml --web.listen-address=0.0.0.0:9090 --storage.tsdb.retention=60d --web.enable-lifecycle --web.external-url=http://143.92.123.121:9090 --query.max-samples=500000000 --query.timeout=20m --query.max-concurrency=200</div><div class="line"> </div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div></pre></td></tr></table></figure></p>
<p>通过观察报错，字面意思是 <code>open files</code> 打开的太多了，于是检查 <code>open files</code> 的设定。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">ulimit</span> <span class="_">-a</span></div><div class="line">core file size          (blocks, -c) unlimited</div><div class="line">data seg size           (kbytes, <span class="_">-d</span>) unlimited</div><div class="line">scheduling priority             (<span class="_">-e</span>) 0</div><div class="line">file size               (blocks, <span class="_">-f</span>) unlimited</div><div class="line">pending signals                 (-i) 2056770</div><div class="line">max locked memory       (kbytes, <span class="_">-l</span>) 64</div><div class="line">max memory size         (kbytes, -m) unlimited</div><div class="line">open files                      (-n) 1024000</div><div class="line">pipe size            (512 bytes, -p) 8</div><div class="line">POSIX message queues     (bytes, -q) 819200</div><div class="line">real-time priority              (-r) 0</div><div class="line">stack size              (kbytes, <span class="_">-s</span>) 8192</div><div class="line">cpu time               (seconds, -t) unlimited</div><div class="line">max user processes              (-u) 1024000</div><div class="line">virtual memory          (kbytes, -v) unlimited</div><div class="line">file locks                      (-x) unlimited</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/systemd/system/prometheus.service</div><div class="line">[Unit]</div><div class="line">Description=Prometheus Voice</div><div class="line">Documentation=https://github.com/prometheus/prometheus</div><div class="line">After=network.target</div><div class="line"> </div><div class="line">[Service]</div><div class="line">WorkingDirectory=/data1/prometheus/prometheus-2.16.0.linux-amd64</div><div class="line">ExecStart=/data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus --config.file=/data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus.yml --web.listen-address=0.0.0.0:9090 --storage.tsdb.retention=60d --web.enable-lifecycle --web.external-url=http://143.92.123.121:9090 --query.max-samples=500000000 --query.timeout=20m --query.max-concurrency=200</div><div class="line">ExecReload=/usr/bin/curl -X POST http://localhost:9090/-/reload</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line">Type=simple</div><div class="line">LimitNOFILE=65536</div><div class="line"> </div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<p>通过检查发现，<code>open files</code>设定正确，但仍未解决问题。<br>通过查找资料发现，是因为<code>fs.inotify.max_user_instances</code> 默认值设定太小导致的。表示每一个<code>real user ID</code>可创建的<code>inotify instatnces</code>的数量上限，默认<code>128</code>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cat /proc/sys/fs/inotify/max_user_instances</div><div class="line">128</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ tail -1 /etc/sysctl.conf</div><div class="line">fs.inotify.max_user_instances=65000</div><div class="line">$ sysctl -p</div></pre></td></tr></table></figure>
<p>问题解决<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ systemctl status prometheus.service <span class="_">-l</span></div><div class="line">● prometheus.service - Prometheus Voice</div><div class="line">   Loaded: loaded (/etc/systemd/system/prometheus.service; enabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since Wed 2020-06-03 13:45:32 +08; 1 day 3h ago</div><div class="line">     Docs: https://github.com/prometheus/prometheus</div><div class="line"> Main PID: 281503 (prometheus)</div><div class="line">   CGroup: /system.slice/prometheus.service</div><div class="line">           └─281503 /data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus --config.file=/data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus.yml --web.listen-address=0.0.0.0:9090 --storage.tsdb.retention=60d --web.enable-lifecycle --web.external-url=http://143.92.123.121:9090 --query.max-samples=500000000 --query.timeout=20m --query.max-concurrency=200</div><div class="line"> </div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 16:22:06 sg-prometheus-base01 prometheus[281503]: level=error ts=2020-06-04T08:22:06.523Z <span class="built_in">caller</span>=file.go:225 component=<span class="string">"discovery manager scrape"</span> discovery=file msg=<span class="string">"Error adding file watcher"</span> err=<span class="string">"too many open files"</span></div><div class="line">Jun 04 17:00:04 sg-prometheus-base01 prometheus[281503]: level=info ts=2020-06-04T09:00:04.829Z <span class="built_in">caller</span>=main.go:747 msg=<span class="string">"Loading configuration file"</span> filename=/data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus.yml</div><div class="line">Jun 04 17:00:04 sg-prometheus-base01 prometheus[281503]: level=info ts=2020-06-04T09:00:04.864Z <span class="built_in">caller</span>=main.go:775 msg=<span class="string">"Completed loading of configuration file"</span> filename=/data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus.yml</div><div class="line">Jun 04 17:00:29 sg-prometheus-base01 prometheus[281503]: level=info ts=2020-06-04T09:00:29.603Z <span class="built_in">caller</span>=main.go:747 msg=<span class="string">"Loading configuration file"</span> filename=/data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus.yml</div><div class="line">Jun 04 17:00:29 sg-prometheus-base01 prometheus[281503]: level=info ts=2020-06-04T09:00:29.634Z <span class="built_in">caller</span>=main.go:775 msg=<span class="string">"Completed loading of configuration file"</span> filename=/data1/prometheus/prometheus-2.16.0.linux-amd64/prometheus.yml</div><div class="line">Jun 04 17:03:07 sg-prometheus-base01 prometheus[281503]: level=info ts=2020-06-04T09:03:07.125Z <span class="built_in">caller</span>=compact.go:496 component=tsdb msg=<span class="string">"write block"</span> mint=1591250400000 maxt=1591257600000 ulid=01E9Z8XZN7M530V866W4WFC3Y6 duration=3m7.085617933s</div><div class="line">Jun 04 17:03:18 sg-prometheus-base01 prometheus[281503]: level=info ts=2020-06-04T09:03:18.535Z <span class="built_in">caller</span>=head.go:661 component=tsdb msg=<span class="string">"head GC completed"</span> duration=7.757127512s</div></pre></td></tr></table></figure></p>
<p>参考：<br><a href="https://blog.csdn.net/weiguang1017/article/details/54381439" target="_blank" rel="external">https://blog.csdn.net/weiguang1017/article/details/54381439</a><br><a href="https://groups.google.com/forum/#!topic/prometheus-users/OQzEYeggnpw" target="_blank" rel="external">https://groups.google.com/forum/#!topic/prometheus-users/OQzEYeggnpw</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2022/11/27/解决Prometheus">http://www.yfshare.vip/2022/11/27/解决Prometheus</a> too many open files问题/</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近期发现 prometheus 出现 &lt;code&gt;discovery=file msg=&amp;quot;Error adding file watcher&amp;quot; err=&amp;quot;too many open files&amp;quot;&lt;/code&gt;的告警。且更新prometheus json 文件后，不能及时的刷新，需要等待很久。&lt;br&gt;
    
    </summary>
    
      <category term="Monitor" scheme="http://www.yfshare.vip/categories/Monitor/"/>
    
    
      <category term="Grafana" scheme="http://www.yfshare.vip/tags/Grafana/"/>
    
      <category term="Prometheus" scheme="http://www.yfshare.vip/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>部署文件不切片的Minio-Server</title>
    <link href="http://www.yfshare.vip/2022/11/07/%E9%83%A8%E7%BD%B2%E6%96%87%E4%BB%B6%E4%B8%8D%E5%88%87%E7%89%87%E7%9A%84Minio-Server/"/>
    <id>http://www.yfshare.vip/2022/11/07/部署文件不切片的Minio-Server/</id>
    <published>2022-11-07T07:48:33.000Z</published>
    <updated>2022-11-27T15:49:32.008Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>MinIO 是一个高性能的对象存储，原生支持 Kubernetes 部署的解决方案。 MinIO也提供了一个 Amazon Web Services S3 兼容 API 并支持所有核心 S3 功能。<br><a id="more"></a></p>
<h3 id="文件不切片的MinIO"><a href="#文件不切片的MinIO" class="headerlink" title="文件不切片的MinIO"></a>文件不切片的MinIO</h3><p>部署Minio<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>mkdir -p /data1/release /data/minio /data2/minio-data</div><div class="line"><span class="variable">$ </span>cd /data1/release</div><div class="line"><span class="variable">$ </span>wget -c <span class="string">'https://dl.min.io/server/minio/release/linux-amd64/archive/minio.RELEASE.2021-02-14T04-01-33Z'</span></div><div class="line"><span class="variable">$ </span>wget -c <span class="string">"https://dl.min.io/client/mc/release/linux-amd64/mc"</span></div><div class="line"><span class="variable">$ </span>mv minio.RELEASE.<span class="number">2021</span>-<span class="number">02</span>-<span class="number">14</span>T04-<span class="number">01</span>-<span class="number">33</span>Z /data/minio/minio</div><div class="line"><span class="variable">$ </span>mv mc /data/minio/</div><div class="line"> </div><div class="line"><span class="variable">$ </span>cd /data/minio</div><div class="line"><span class="variable">$ </span>chmod +x minio mc</div></pre></td></tr></table></figure></p>
<p>授权<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ groupadd -r minio-<span class="keyword">user</span></div><div class="line"><span class="title">$</span> useradd -M -r -g minio-<span class="keyword">user</span> <span class="title">minio-user</span></div><div class="line">$ chown -R minio-user:minio-<span class="keyword">user</span> <span class="title">/data</span>/minio /data2/minio-data</div><div class="line">$ chmod u+rxw /data2/minio-data</div></pre></td></tr></table></figure></p>
<p>minio配置文件<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>cd /data/minio</div><div class="line"><span class="variable">$ </span>cat minio.env</div><div class="line"><span class="comment"># Root user for the server.</span></div><div class="line">MINIO_ROOT_USER=<span class="string">"minioroot"</span></div><div class="line"><span class="comment"># Root secret for the server.</span></div><div class="line">MINIO_ROOT_PASSWORD=<span class="string">"password"</span></div><div class="line">   </div><div class="line"><span class="comment"># Standard storage class</span></div><div class="line">MINIO_STORAGE_CLASS_STANDARD=<span class="string">"4"</span></div><div class="line"><span class="comment"># Reduced redundancy storage class(RSS)</span></div><div class="line">MINIO_STORAGE_CLASS_RRS=<span class="string">"2"</span></div><div class="line">   </div><div class="line"><span class="comment"># Following environment variables are used in systemd file.</span></div><div class="line">   </div><div class="line"><span class="comment"># Volume to be used for MinIO server.</span></div><div class="line"><span class="comment">#MINIO_VOLUMES="http://minio-test1/data4/minio"  #集群版本使用这个</span></div><div class="line">MINIO_VOLUMES=<span class="string">"/data4/minio-data"</span>  <span class="comment">#单节点使用这个</span></div><div class="line">   </div><div class="line"><span class="comment"># Use if you want to run MinIO on a custom port.</span></div><div class="line">MINIO_OPTS=<span class="string">"--address 10.73.9.3:9199"</span></div></pre></td></tr></table></figure></p>
<p>minio-server启动配置文件<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/systemd/system/minio-server.service</div><div class="line">[Unit]</div><div class="line"><span class="attr">Description=MinIO</span></div><div class="line"><span class="attr">Documentation=https://docs.min.io</span></div><div class="line"><span class="attr">Wants=network-online.target</span></div><div class="line"><span class="attr">After=network-online.target</span></div><div class="line"><span class="attr">AssertFileIsExecutable=/data/minio/minio</span></div><div class="line">   </div><div class="line">[Service]</div><div class="line"><span class="attr">WorkingDirectory=/data/minio/</span></div><div class="line">   </div><div class="line"><span class="attr">User=minio-user</span></div><div class="line"><span class="attr">Group=minio-user</span></div><div class="line">   </div><div class="line"><span class="attr">EnvironmentFile=/data/minio/minio.env</span></div><div class="line"><span class="attr">ExecStartPre=/bin/bash</span> -c <span class="string">"if [ -z \"</span>$&#123;MINIO_VOLUMES&#125;\<span class="string">" ]; then echo \"</span>Variable MINIO_VOLUMES not set <span class="keyword">in</span> /etc/default/minio\<span class="string">"; exit 1; fi"</span></div><div class="line"><span class="attr">ExecStart=/data/minio/minio</span> server $MINIO_OPTS $MINIO_VOLUMES</div><div class="line">   </div><div class="line"><span class="comment"># Let systemd restart this service always</span></div><div class="line"><span class="attr">Restart=always</span></div><div class="line">   </div><div class="line"><span class="comment"># Specifies the maximum file descriptor number that can be opened by this process</span></div><div class="line"><span class="attr">LimitNOFILE=1048576</span></div><div class="line">   </div><div class="line"><span class="comment"># Specifies the maximum number of threads this process can create</span></div><div class="line"><span class="attr">TasksMax=infinity</span></div><div class="line">   </div><div class="line"><span class="comment"># Disable timeout logic and wait until process is stopped</span></div><div class="line"><span class="attr">TimeoutStopSec=infinity</span></div><div class="line"><span class="attr">SendSIGKILL=no</span></div><div class="line">   </div><div class="line">[Install]</div><div class="line"><span class="attr">WantedBy=multi-user.target</span></div></pre></td></tr></table></figure></p>
<p>启动minio-server<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ systemctl daemon-reload</div><div class="line">$ systemctl <span class="keyword">start</span> minio-<span class="keyword">server</span></div><div class="line">$ systemctl <span class="keyword">status</span> minio-<span class="keyword">server</span> -l</div></pre></td></tr></table></figure></p>
<p>配置haproxy<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">frontend</span> <span class="selector-tag">http-sgim-minio-data</span></div><div class="line">    <span class="selector-tag">bind</span> *<span class="selector-pseudo">:9800</span></div><div class="line">    <span class="selector-tag">option</span> <span class="selector-tag">forwardfor</span> <span class="selector-tag">except</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span></div><div class="line">    <span class="selector-tag">option</span> <span class="selector-tag">http-server-close</span></div><div class="line">    <span class="selector-tag">option</span> <span class="selector-tag">httplog</span></div><div class="line">    <span class="selector-tag">option</span> <span class="selector-tag">dontlognull</span></div><div class="line">    <span class="selector-tag">default_backend</span> <span class="selector-tag">sgim-minio-data</span></div><div class="line">    <span class="selector-tag">maxconn</span> 5000000</div><div class="line"> </div><div class="line"><span class="selector-tag">backend</span> <span class="selector-tag">sgim-minio-data</span></div><div class="line">    <span class="selector-tag">balance</span> <span class="selector-tag">leastconn</span></div><div class="line">    <span class="selector-tag">server</span> <span class="selector-tag">minio-test1</span> 10<span class="selector-class">.73</span><span class="selector-class">.9</span><span class="selector-class">.3</span><span class="selector-pseudo">:9199</span> <span class="selector-tag">maxconn</span> 1000000</div></pre></td></tr></table></figure></p>
<p>设置MinIO Client(mc)<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span> cd /data/minio</div><div class="line"><span class="symbol">$</span> ./mc ls  #初始化mc</div><div class="line"><span class="symbol">$</span> ./mc <span class="keyword">alias</span> <span class="keyword">set</span> minioTest <span class="comment">http:</span>//<span class="comment">10.73.9.3:9800 minioroot password --api s3v4</span></div><div class="line">Added `<span class="comment">minioTest</span>`<span class="comment"> successfully.</span></div><div class="line"> </div><div class="line">$ ./mc mb minioTest/test   <span class="comment">#</span>创建<span class="comment">minio bucket</span></div><div class="line">$ ./mc cp <span class="keyword">file</span> minioTest/test  <span class="comment">#</span>上传文件到<span class="comment">minio</span></div><div class="line">$ ./mc ls minioTest/test  <span class="comment">#</span>查看<span class="comment">minio</span>/test文件列表</div></pre></td></tr></table></figure></p>
<h4 id="验证文件是否被切片"><a href="#验证文件是否被切片" class="headerlink" title="验证文件是否被切片"></a>验证文件是否被切片</h4><p>登陆Minio Server的服务器<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cd /data4/minio-data</div><div class="line">$ tree test/</div><div class="line">test/</div><div class="line">└── telegraf<span class="number">-1.22</span><span class="number">.4</span><span class="number">-1.</span>x86_64.rpm</div><div class="line"> </div><div class="line"><span class="number">0</span> directories, <span class="number">1</span> file</div></pre></td></tr></table></figure></p>
<p><img src="https://note.youdao.com/yws/api/personal/file/WEBc11c0193cd6a7cb0b2e67c099aa3fdb2?method=download&amp;shareKey=59bb5aa11c229bf33755bbbdf5aedbb6" alt="minio_tree">  </p>
<p>访问minio-Server Web<br><a href="http://ip:9800/minio/login" target="_blank" rel="external">http://ip:9800/minio/login</a><br>账号密码为，在minio.env配置文件里设置的<code>MINIO_ROOT_USER</code>和<code>MINIO_ROOT_PASSWORD</code>的值<br><img src="https://note.youdao.com/yws/api/personal/file/WEBa8cd814f5824cec72bea81a7fee280e1?method=download&amp;shareKey=cddbf89a422aab5ebd84f7c3f5408ea7" alt="minio_dashboard">  </p>
<h3 id="MinIO权限管理"><a href="#MinIO权限管理" class="headerlink" title="MinIO权限管理"></a>MinIO权限管理</h3><p><code>MinIO Console</code> → <code>Access</code> → <code>Create Policy</code> → <code>Write Policy</code><br>意思是，只能控制test bucket<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"Version"</span>: <span class="string">"2012-10-17"</span>,</div><div class="line">    <span class="attr">"Statement"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="attr">"Effect"</span>: <span class="string">"Allow"</span>,</div><div class="line">            <span class="attr">"Action"</span>: [</div><div class="line">                <span class="string">"s3:GetObject"</span>,</div><div class="line">                <span class="string">"s3:ListAllMyBuckets"</span>,</div><div class="line">                <span class="string">"s3:ListBucket"</span>,</div><div class="line">                <span class="string">"s3:PutObject"</span>,</div><div class="line">                <span class="string">"s3:DeleteObject"</span>,</div><div class="line">                <span class="string">"s3:GetBucketLocation"</span></div><div class="line">            ],</div><div class="line">            <span class="attr">"Resource"</span>: [</div><div class="line">                <span class="string">"arn:aws:s3:::test/*"</span></div><div class="line">            ]</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Minio旧版本Binary下载地址：<a href="https://dl.min.io/server/minio/release/linux-amd64/archive/" target="_blank" rel="external">https://dl.min.io/server/minio/release/linux-amd64/archive/</a><br>官网：<a href="http://www.minio.org.cn/download.shtml#/linux" target="_blank" rel="external">http://www.minio.org.cn/download.shtml#/linux</a></p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2022/11/07/部署文件不切片的Minio-Server/">http://www.yfshare.vip/2022/11/07/部署文件不切片的Minio-Server/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MinIO 是一个高性能的对象存储，原生支持 Kubernetes 部署的解决方案。 MinIO也提供了一个 Amazon Web Services S3 兼容 API 并支持所有核心 S3 功能。&lt;br&gt;
    
    </summary>
    
      <category term="Database" scheme="http://www.yfshare.vip/categories/Database/"/>
    
    
      <category term="minio" scheme="http://www.yfshare.vip/tags/minio/"/>
    
  </entry>
  
  <entry>
    <title>解决Grafana query processing would load too many samples into memory in query exec</title>
    <link href="http://www.yfshare.vip/2022/10/27/%E8%A7%A3%E5%86%B3Grafana%20query%20processing%20would%20load%20too%20many%20samples%20into%20memory%20in%20query%20exec/"/>
    <id>http://www.yfshare.vip/2022/10/27/解决Grafana query processing would load too many samples into memory in query exec/</id>
    <published>2022-10-27T04:00:30.000Z</published>
    <updated>2022-11-27T16:05:42.685Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h5 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h5><p>版更后, Grafana 无法正常展示 Prometheus 资料。<br><a id="more"></a></p>
<h5 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h5><p>稍微拉长 Grafana 时间轴，Grafana 会显示 <code>query processing would load too many samples into memory in query execution.</code> 报错信息。  </p>
<h5 id="报错截图"><a href="#报错截图" class="headerlink" title="报错截图"></a>报错截图</h5><p><img src="https://note.youdao.com/yws/api/personal/file/WEB4c2234d98d71e4f57441a18b714519d2?method=download&amp;shareKey=9b9e98283d93a25728b0593ebca3e247" alt="grafana报错截图">  </p>
<h5 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h5><p>因版更后， 可能因业务改变而导致<code>prometheus metric</code>突增。但 Grafana 拉取的数据超过了 Prometheus 限制。 通过查找资源和翻阅 Prometheus GitHub 发现。由于PromQL语句可能会载入大量的 metrics 数据，导致 Prometheus 内存以及 CPU 消耗超标，为了保护 Prometheus 不会被复杂的 PromQL 查询吃掉过多的资源，Prometheus 作者在代码层面设置了限制。在 Prometheus 2.5.0 版本后，Prometheus 新增可以通过–query.max-samples参数来调整限制，满足更多的业务需求。<br>Prometheus 2.5.0 GitHub 特性说明：<br>地址：<a href="https://github.com/prometheus/prometheus/releases/tag/v2.5.0" target="_blank" rel="external">https://github.com/prometheus/prometheus/releases/tag/v2.5.0</a><br>Issue 地址：<a href="https://github.com/prometheus/prometheus/pull/4513" target="_blank" rel="external">https://github.com/prometheus/prometheus/pull/4513</a><br><img src="https://note.youdao.com/yws/api/personal/file/WEBa5ebcf49af5e95d1b93aec2a2e14ecce?method=download&amp;shareKey=5153dc40844ab3bc9d6c6d460592e807" alt="github">  </p>
<h5 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h5><p>因 <code>GS prometheus</code>在迁移时升级过 <code>Prometheus</code> 版本，故需要查阅对应版本的 <code>Prometheus</code> 源码来了解 Prometheus 默认限制大小。<br>Prometheus 源码地址：<a href="https://github.com/prometheus/prometheus/blob/v2.15.2/cmd/prometheus/main.go" target="_blank" rel="external">https://github.com/prometheus/prometheus/blob/v2.15.2/cmd/prometheus/main.go</a><br><img src="https://note.youdao.com/yws/api/personal/file/WEBdcb07da8e52608bdac5fee302b586a67?method=download&amp;shareKey=6b766d55d101b0db2f5a068a5312eada" alt="github">  </p>
<p>通过 Prometheus 源码可知，Prometheus 默认的最大查询上限为：<code>50000000</code>。因 GS Grafana 图查询次数超过 Prometheus 限制，所以，我们需要通过参数来调整上线大小。<br>参数说明：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">--query.timeout=2m</div><div class="line">Maximum time a query may take before being aborted.</div><div class="line"></div><div class="line">--query.max-concurrency=20</div><div class="line">Maximum number of queries executed concurrently.</div><div class="line"></div><div class="line">--query.max-samples=50000000</div><div class="line">Maximum number of samples a single query can load into memory. Note that queries will fail <span class="keyword">if</span> they try to load more samples than this into memory, so this also limits the number of samples a query can return.</div></pre></td></tr></table></figure></p>
<p>经过沟通，目前使用的 Gs prometheus 启动参数为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/data1/prometheus_gs_all/prometheus-2.15.2.linux-amd64/prometheus --config.file=/data1/prometheus_gs_all/prometheus-2.15.2.linux-amd64/prometheus.yml --web.listen-address=0.0.0.0:9090 --storage.tsdb.retention=90d --web.enable-lifecycle --web.external-url=http://143.92.123.123:9090 --query.max-samples=500000000 --query.timeout=20m --query.max-concurrency=200</div></pre></td></tr></table></figure></p>
<p>参考文档：<br><a href="http://blog.kankanan.com/article/query-processing-would-load-too-many-samples-into-memory-in-query-execution.html" target="_blank" rel="external">http://blog.kankanan.com/article/query-processing-would-load-too-many-samples-into-memory-in-query-execution.html</a><br><a href="https://github.com/prometheus/prometheus/blob/v2.15.2/cmd/prometheus/main.go" target="_blank" rel="external">https://github.com/prometheus/prometheus/blob/v2.15.2/cmd/prometheus/main.go</a><br><a href="https://github.com/prometheus/prometheus/releases/tag/v2.5.0" target="_blank" rel="external">https://github.com/prometheus/prometheus/releases/tag/v2.5.0</a><br><a href="https://github.com/prometheus/prometheus/pull/4513" target="_blank" rel="external">https://github.com/prometheus/prometheus/pull/4513</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2022/10/27/解决Grafana">http://www.yfshare.vip/2022/10/27/解决Grafana</a> query processing would load too many samples into memory in query exec/</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;现象&quot;&gt;&lt;a href=&quot;#现象&quot; class=&quot;headerlink&quot; title=&quot;现象&quot;&gt;&lt;/a&gt;现象&lt;/h5&gt;&lt;p&gt;版更后, Grafana 无法正常展示 Prometheus 资料。&lt;br&gt;
    
    </summary>
    
      <category term="Monitor" scheme="http://www.yfshare.vip/categories/Monitor/"/>
    
    
      <category term="Grafana" scheme="http://www.yfshare.vip/tags/Grafana/"/>
    
      <category term="Prometheus" scheme="http://www.yfshare.vip/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Redis-Sentinel</title>
    <link href="http://www.yfshare.vip/2022/08/27/Redis-Sentinel/"/>
    <id>http://www.yfshare.vip/2022/08/27/Redis-Sentinel/</id>
    <published>2022-08-27T15:40:54.000Z</published>
    <updated>2022-11-27T15:46:03.889Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>sentinel是一个管理redis实例的工具，它可以实现对redis的监控、通知、自动故障转移。sentinel不断的检测redis实例是否可以正常工作，通过API向其他程序报告redis的状态，如果redis master不能工作，则会自动启动故障转移进程，将其中的一个slave提升为master，其他的slave重新设置新的master服务器。<br><a id="more"></a></p>
<h4 id="Sentinel介绍"><a href="#Sentinel介绍" class="headerlink" title="Sentinel介绍"></a>Sentinel介绍</h4><p>Redis Sentinel是一个分布式架构，包含若干个Sentinel节点和Redis数据节点，每个Sentinel节点会对数据节点和其余Sentinel节点进行监控，当发现节点不可达时，会对节点做下线标识.<br>如果被标识的是主节点，他还会选择和其他Sentinel节点进行“协商”，当大多数的Sentinel节点都认为主节点不可达时，他们会选举出一个Sentinel节点来完成自动故障转移工作，同时将这个变化通知给Redis应用方.<br>整个过程完全自动，不需要人工介入，所以可以很好解决Redis的高可用问题.  </p>
<p>redis主从复制<br>Redis主从复制可将主节点数据同步给从节点，从节点此时有两个作用:  </p>
<ul>
<li>一旦主节点宕机，从节点作为主节点的备份可以随时顶上来</li>
<li>扩展主节点的读能力，分担主节点读压力</li>
</ul>
<p>Redis Sentinel有以下几个功能:  </p>
<ul>
<li>监控：Sentinel节点会定期检测Redis数据节点和其余Sentinel节点是否可达</li>
<li>通知：Sentinel节点会将故障转移通知给应用方</li>
<li>主节点故障转移：实现从节点晋升为主节点并维护后续正确的主从关系</li>
<li>配置提供者：在Redis Sentinel结构中，客户端在初始化的时候连接的是Sentinel节点集合，从中获取主节点信息</li>
</ul>
<p>环境：<br>　　　Centos 7.9.2009<br>　　　Redis version：5.0.13  </p>
<p>分别有3个Sentinel节点，1个主节点，2个从节点组成一个Redis Sentinel<br>| hostname | ip | redis port | sentinel port |<br>| — | — | — | — |<br>| node1 | 10.21.248.7 | 16379 | 26379 |<br>| node2 | 10.21.248.179 | 16379 | 26379 |<br>| node3 | 10.21.108.47 | 16379 | 26379 |</p>
<h3 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>mkdir -p /data/release</div><div class="line"><span class="variable">$ </span>cd /data/release</div><div class="line"><span class="variable">$ </span>wget -c <span class="string">'https://download.redis.io/releases/redis-5.0.13.tar.gz'</span></div><div class="line"><span class="variable">$ </span>tar -xf redis-<span class="number">5.0</span>.<span class="number">13</span>.tar.gz</div><div class="line"><span class="variable">$ </span>cd /data/release/redis-<span class="number">5.0</span>.<span class="number">13</span>/</div><div class="line"><span class="variable">$ </span>make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h3 id="部署Redis-Sentinel"><a href="#部署Redis-Sentinel" class="headerlink" title="部署Redis Sentinel"></a>部署Redis Sentinel</h3><h4 id="Node1-Redis配置"><a href="#Node1-Redis配置" class="headerlink" title="Node1 Redis配置"></a>Node1 Redis配置</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">$ mkdir -p /data/redis/&#123;conf,data/<span class="number">16379</span>,logs,sentinel&#125;</div><div class="line">$ cd /data/redis/conf</div><div class="line">$ cat redis<span class="number">-16379.</span>conf </div><div class="line">daemonize yes</div><div class="line">bind <span class="number">10.21</span><span class="number">.248</span><span class="number">.7</span></div><div class="line">masterauth <span class="string">"YWY0MGIx@201"</span></div><div class="line">requirepass <span class="string">"YWY0MGIx@201"</span></div><div class="line">replica-read-only yes</div><div class="line">maxclients <span class="number">10000</span></div><div class="line">maxmemory <span class="number">1</span>gb</div><div class="line">pidfile <span class="string">"/data/redis/redis_16379.pid"</span></div><div class="line">port <span class="number">16379</span></div><div class="line">tcp-backlog <span class="number">511</span></div><div class="line">timeout <span class="number">600</span></div><div class="line">tcp-keepalive <span class="number">0</span></div><div class="line">loglevel verbose</div><div class="line">logfile <span class="string">"/data/redis/logs/redis-16379.log"</span></div><div class="line">databases <span class="number">16</span></div><div class="line">save <span class="number">900</span> <span class="number">1</span></div><div class="line">save <span class="number">300</span> <span class="number">10</span></div><div class="line">save <span class="number">60</span> <span class="number">10000</span></div><div class="line">stop-writes-on-bgsave-error yes</div><div class="line">rdbcompression yes</div><div class="line">rdbchecksum yes</div><div class="line">dbfilename <span class="string">"dump.rdb"</span></div><div class="line">dir <span class="string">"/data/redis/data/16379"</span></div><div class="line">replica-serve-stale-data yes</div><div class="line">repl-diskless-sync no</div><div class="line">repl-diskless-sync-delay <span class="number">5</span></div><div class="line">repl-disable-tcp-nodelay no</div><div class="line">replica-priority <span class="number">100</span></div><div class="line">appendonly no</div><div class="line">appendfilename <span class="string">"appendonly.aof"</span></div><div class="line">appendfsync everysec</div><div class="line">no-appendfsync-on-rewrite no</div><div class="line">auto-aof-rewrite-percentage <span class="number">100</span></div><div class="line">auto-aof-rewrite-min-size <span class="number">64</span>mb</div><div class="line">aof-load-truncated yes</div><div class="line">lua-time-limit <span class="number">5000</span></div><div class="line">slowlog-log-slower-than <span class="number">10000</span></div><div class="line">slowlog-max-len <span class="number">128</span></div><div class="line">latency-monitor-threshold <span class="number">0</span></div><div class="line">notify-keyspace-events <span class="string">""</span></div><div class="line">hash-max-ziplist-entries <span class="number">512</span></div><div class="line">hash-max-ziplist-value <span class="number">64</span></div><div class="line"><span class="type">list</span>-max-ziplist-entries <span class="number">512</span></div><div class="line"><span class="type">list</span>-max-ziplist-value <span class="number">64</span></div><div class="line">set-max-intset-entries <span class="number">512</span></div><div class="line">zset-max-ziplist-entries <span class="number">128</span></div><div class="line">zset-max-ziplist-value <span class="number">64</span></div><div class="line">hll-sparse-max-bytes <span class="number">3000</span></div><div class="line">activerehashing yes</div><div class="line">client-output-buffer-limit normal <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">client-output-buffer-limit replica <span class="number">256</span>mb <span class="number">64</span>mb <span class="number">60</span></div><div class="line">client-output-buffer-limit pubsub <span class="number">32</span>mb <span class="number">8</span>mb <span class="number">60</span></div><div class="line">hz <span class="number">10</span></div><div class="line">aof-rewrite-incremental-fsync yes</div></pre></td></tr></table></figure>
<p>Node1 Sentinel配置<br>注意：sentinel myid每个节点都要唯一<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ cd /data/redis/conf</div><div class="line">$ cat sentinel<span class="number">-26379.</span>conf </div><div class="line">port <span class="number">26379</span></div><div class="line">bind <span class="number">10.21</span><span class="number">.248</span><span class="number">.7</span></div><div class="line">daemonize yes</div><div class="line">dir <span class="string">"/data/redis/sentinel"</span></div><div class="line">logfile <span class="string">"/data/redis/logs/sentinel-26379.log"</span></div><div class="line">sentinel myid <span class="number">525e0</span>e47f39d28d46b707401054b0680057c800a</div><div class="line">sentinel deny-scripts-reconfig yes</div><div class="line">sentinel monitor mymaster <span class="number">10.21</span><span class="number">.248</span><span class="number">.7</span> <span class="number">16379</span> <span class="number">2</span></div><div class="line">sentinel down-after-milliseconds mymaster <span class="number">5000</span></div><div class="line">sentinel auth-pass mymaster YWY0MGIx@<span class="number">201</span></div><div class="line">sentinel config-epoch mymaster <span class="number">59</span></div><div class="line">sentinel leader-epoch mymaster <span class="number">59</span></div></pre></td></tr></table></figure></p>
<p>Node1 启动脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /data/redis</div><div class="line">$ cat redis_sentinel.sh</div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">num=<span class="string">"<span class="variable">$1</span>"</span></div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">start</span></span>() &#123;</div><div class="line">  <span class="comment">#redis</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-server /data/redis/conf/redis-16379.conf </div><div class="line">  </div><div class="line">  <span class="comment">#sentinel</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-sentinel /data/redis/conf/sentinel-26379.conf</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">stop</span></span>() &#123;</div><div class="line">  <span class="comment">#redis</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-cli -h 10.21.248.7 -p 16379 <span class="_">-a</span> YWY0MGIx@201 shutdown</div><div class="line"></div><div class="line">  <span class="comment">#sentinel</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-cli -h 10.21.248.7 -p 26379 <span class="_">-a</span> YWY0MGIx@201 shutdown</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">status</span></span>() &#123;</div><div class="line">  ps -ef |grep -i <span class="string">'redis-'</span> | grep -iv <span class="string">'grep'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">case</span> <span class="variable">$num</span> <span class="keyword">in</span></div><div class="line">  start)</div><div class="line">     start;;</div><div class="line">  stop)</div><div class="line">     stop;;</div><div class="line">  restart)</div><div class="line">     stop</div><div class="line">     start;;</div><div class="line">  status)</div><div class="line">     status;;</div><div class="line">  *)</div><div class="line">     <span class="built_in">echo</span> <span class="string">"Usage: start|stop|restart|status"</span>;;</div><div class="line"><span class="keyword">esac</span></div></pre></td></tr></table></figure></p>
<h4 id="Node2-Redis配置"><a href="#Node2-Redis配置" class="headerlink" title="Node2 Redis配置"></a>Node2 Redis配置</h4><p>从节点需新增replicaof masterip 配置<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">$ mkdir -p /data/redis/&#123;conf,data/<span class="number">16379</span>,logs,sentinel&#125;</div><div class="line">$ cd /data/redis/conf</div><div class="line">$ cat redis<span class="number">-16379.</span>conf</div><div class="line">daemonize yes</div><div class="line">bind <span class="number">10.21</span><span class="number">.248</span><span class="number">.179</span></div><div class="line">masterauth <span class="string">"YWY0MGIx@201"</span></div><div class="line">requirepass <span class="string">"YWY0MGIx@201"</span></div><div class="line">replica-read-only yes</div><div class="line">maxclients <span class="number">10000</span></div><div class="line">maxmemory <span class="number">1</span>gb</div><div class="line">pidfile <span class="string">"/data/redis/redis_16379.pid"</span></div><div class="line">port <span class="number">16379</span></div><div class="line">tcp-backlog <span class="number">511</span></div><div class="line">timeout <span class="number">600</span></div><div class="line">tcp-keepalive <span class="number">0</span></div><div class="line">loglevel verbose</div><div class="line">logfile <span class="string">"/data/redis/logs/redis-16379.log"</span></div><div class="line">databases <span class="number">16</span></div><div class="line">save <span class="number">900</span> <span class="number">1</span></div><div class="line">save <span class="number">300</span> <span class="number">10</span></div><div class="line">save <span class="number">60</span> <span class="number">10000</span></div><div class="line">stop-writes-on-bgsave-error yes</div><div class="line">rdbcompression yes</div><div class="line">rdbchecksum yes</div><div class="line">dbfilename <span class="string">"dump.rdb"</span></div><div class="line">dir <span class="string">"/data/redis/data/16379"</span></div><div class="line">replica-serve-stale-data yes</div><div class="line">repl-diskless-sync no</div><div class="line">repl-diskless-sync-delay <span class="number">5</span></div><div class="line">repl-disable-tcp-nodelay no</div><div class="line">replica-priority <span class="number">100</span></div><div class="line">appendonly no</div><div class="line">appendfilename <span class="string">"appendonly.aof"</span></div><div class="line">appendfsync everysec</div><div class="line">no-appendfsync-on-rewrite no</div><div class="line">auto-aof-rewrite-percentage <span class="number">100</span></div><div class="line">auto-aof-rewrite-min-size <span class="number">64</span>mb</div><div class="line">aof-load-truncated yes</div><div class="line">lua-time-limit <span class="number">5000</span></div><div class="line">slowlog-log-slower-than <span class="number">10000</span></div><div class="line">slowlog-max-len <span class="number">128</span></div><div class="line">latency-monitor-threshold <span class="number">0</span></div><div class="line">notify-keyspace-events <span class="string">""</span></div><div class="line">hash-max-ziplist-entries <span class="number">512</span></div><div class="line">hash-max-ziplist-value <span class="number">64</span></div><div class="line"><span class="type">list</span>-max-ziplist-entries <span class="number">512</span></div><div class="line"><span class="type">list</span>-max-ziplist-value <span class="number">64</span></div><div class="line">set-max-intset-entries <span class="number">512</span></div><div class="line">zset-max-ziplist-entries <span class="number">128</span></div><div class="line">zset-max-ziplist-value <span class="number">64</span></div><div class="line">hll-sparse-max-bytes <span class="number">3000</span></div><div class="line">activerehashing yes</div><div class="line">client-output-buffer-limit normal <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">client-output-buffer-limit replica <span class="number">256</span>mb <span class="number">64</span>mb <span class="number">60</span></div><div class="line">client-output-buffer-limit pubsub <span class="number">32</span>mb <span class="number">8</span>mb <span class="number">60</span></div><div class="line">hz <span class="number">10</span></div><div class="line">aof-rewrite-incremental-fsync yes</div><div class="line"></div><div class="line"># Generated by CONFIG REWRITE</div><div class="line">replicaof <span class="number">10.21</span><span class="number">.248</span><span class="number">.7</span> <span class="number">16379</span></div></pre></td></tr></table></figure></p>
<p>Node2 Sentinel配置<br>注意：sentinel myid每个节点都要唯一<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ cd /data/redis/conf</div><div class="line">$ cat sentinel<span class="number">-26379.</span>conf  </div><div class="line">port <span class="number">26379</span></div><div class="line">bind <span class="number">10.21</span><span class="number">.248</span><span class="number">.179</span></div><div class="line">daemonize yes</div><div class="line">dir <span class="string">"/data/redis/sentinel"</span></div><div class="line">logfile <span class="string">"/data/redis/logs/sentinel-26379.log"</span></div><div class="line">sentinel myid <span class="number">525e0</span>e47f39d28d46b707401054b0680057c800b</div><div class="line">sentinel deny-scripts-reconfig yes</div><div class="line">sentinel monitor mymaster <span class="number">10.21</span><span class="number">.248</span><span class="number">.7</span> <span class="number">16379</span> <span class="number">2</span></div><div class="line">sentinel down-after-milliseconds mymaster <span class="number">5000</span></div><div class="line">sentinel auth-pass mymaster YWY0MGIx@<span class="number">201</span></div><div class="line">sentinel config-epoch mymaster <span class="number">59</span></div><div class="line">sentinel leader-epoch mymaster <span class="number">59</span></div></pre></td></tr></table></figure></p>
<p>Node2 启动脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /data/redis</div><div class="line">$ cat redis_sentinel.sh </div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">num=<span class="string">"<span class="variable">$1</span>"</span></div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">start</span></span>() &#123;</div><div class="line">  <span class="comment">#redis</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-server /data/redis/conf/redis-16379.conf </div><div class="line">  </div><div class="line">  <span class="comment">#sentinel</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-sentinel /data/redis/conf/sentinel-26379.conf</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">stop</span></span>() &#123;</div><div class="line">  <span class="comment">#redis</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-cli -h 10.21.248.179 -p 16379 <span class="_">-a</span> YWY0MGIx@201 shutdown</div><div class="line"></div><div class="line">  <span class="comment">#sentinel</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-cli -h 10.21.248.179 -p 26379 <span class="_">-a</span> YWY0MGIx@201 shutdown</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">status</span></span>() &#123;</div><div class="line">  ps -ef |grep -i <span class="string">'redis-'</span> | grep -iv <span class="string">'grep'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">case</span> <span class="variable">$num</span> <span class="keyword">in</span></div><div class="line">  start)</div><div class="line">     start;;</div><div class="line">  stop)</div><div class="line">     stop;;</div><div class="line">  restart)</div><div class="line">     stop</div><div class="line">     start;;</div><div class="line">  status)</div><div class="line">     status;;</div><div class="line">  *)</div><div class="line">     <span class="built_in">echo</span> <span class="string">"Usage: start|stop|restart|status"</span>;;</div><div class="line"><span class="keyword">esac</span></div></pre></td></tr></table></figure></p>
<h4 id="Node3-Redis配置"><a href="#Node3-Redis配置" class="headerlink" title="Node3 Redis配置"></a>Node3 Redis配置</h4><p>从节点需新增replicaof masterip 配置<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">$ mkdir -p /data/redis/&#123;conf,data/<span class="number">16379</span>,logs,sentinel&#125;</div><div class="line">$ cd /data/redis/conf</div><div class="line">$ cat redis<span class="number">-16379.</span>conf</div><div class="line">daemonize yes</div><div class="line">bind <span class="number">10.21</span><span class="number">.108</span><span class="number">.47</span></div><div class="line">masterauth <span class="string">"YWY0MGIx@201"</span></div><div class="line">requirepass <span class="string">"YWY0MGIx@201"</span></div><div class="line">replica-read-only yes</div><div class="line">maxclients <span class="number">10000</span></div><div class="line">maxmemory <span class="number">1</span>gb</div><div class="line">pidfile <span class="string">"/data/redis/redis_16379.pid"</span></div><div class="line">port <span class="number">16379</span></div><div class="line">tcp-backlog <span class="number">511</span></div><div class="line">timeout <span class="number">600</span></div><div class="line">tcp-keepalive <span class="number">0</span></div><div class="line">loglevel verbose</div><div class="line">logfile <span class="string">"/data/redis/logs/redis-16379.log"</span></div><div class="line">databases <span class="number">16</span></div><div class="line">save <span class="number">900</span> <span class="number">1</span></div><div class="line">save <span class="number">300</span> <span class="number">10</span></div><div class="line">save <span class="number">60</span> <span class="number">10000</span></div><div class="line">stop-writes-on-bgsave-error yes</div><div class="line">rdbcompression yes</div><div class="line">rdbchecksum yes</div><div class="line">dbfilename <span class="string">"dump.rdb"</span></div><div class="line">dir <span class="string">"/data/redis/data/16379"</span></div><div class="line">replica-serve-stale-data yes</div><div class="line">repl-diskless-sync no</div><div class="line">repl-diskless-sync-delay <span class="number">5</span></div><div class="line">repl-disable-tcp-nodelay no</div><div class="line">replica-priority <span class="number">100</span></div><div class="line">appendonly no</div><div class="line">appendfilename <span class="string">"appendonly.aof"</span></div><div class="line">appendfsync everysec</div><div class="line">no-appendfsync-on-rewrite no</div><div class="line">auto-aof-rewrite-percentage <span class="number">100</span></div><div class="line">auto-aof-rewrite-min-size <span class="number">64</span>mb</div><div class="line">aof-load-truncated yes</div><div class="line">lua-time-limit <span class="number">5000</span></div><div class="line">slowlog-log-slower-than <span class="number">10000</span></div><div class="line">slowlog-max-len <span class="number">128</span></div><div class="line">latency-monitor-threshold <span class="number">0</span></div><div class="line">notify-keyspace-events <span class="string">""</span></div><div class="line">hash-max-ziplist-entries <span class="number">512</span></div><div class="line">hash-max-ziplist-value <span class="number">64</span></div><div class="line"><span class="type">list</span>-max-ziplist-entries <span class="number">512</span></div><div class="line"><span class="type">list</span>-max-ziplist-value <span class="number">64</span></div><div class="line">set-max-intset-entries <span class="number">512</span></div><div class="line">zset-max-ziplist-entries <span class="number">128</span></div><div class="line">zset-max-ziplist-value <span class="number">64</span></div><div class="line">hll-sparse-max-bytes <span class="number">3000</span></div><div class="line">activerehashing yes</div><div class="line">client-output-buffer-limit normal <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></div><div class="line">client-output-buffer-limit replica <span class="number">256</span>mb <span class="number">64</span>mb <span class="number">60</span></div><div class="line">client-output-buffer-limit pubsub <span class="number">32</span>mb <span class="number">8</span>mb <span class="number">60</span></div><div class="line">hz <span class="number">10</span></div><div class="line">aof-rewrite-incremental-fsync yes</div><div class="line">replicaof <span class="number">10.21</span><span class="number">.248</span><span class="number">.7</span> <span class="number">16379</span></div></pre></td></tr></table></figure></p>
<p>Node3 Sentinel配置<br>注意：sentinel myid每个节点都要唯一<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ cat sentinel<span class="number">-26379.</span>conf </div><div class="line">port <span class="number">26379</span></div><div class="line">bind <span class="number">10.21</span><span class="number">.108</span><span class="number">.47</span></div><div class="line">daemonize yes</div><div class="line">dir <span class="string">"/data/redis/sentinel"</span></div><div class="line">logfile <span class="string">"/data/redis/logs/sentinel-26379.log"</span></div><div class="line">sentinel myid <span class="number">525e0</span>e47f39d28d46b707401054b0680057c800c</div><div class="line">sentinel deny-scripts-reconfig yes</div><div class="line">sentinel monitor mymaster <span class="number">10.21</span><span class="number">.248</span><span class="number">.7</span> <span class="number">16379</span> <span class="number">2</span></div><div class="line">sentinel down-after-milliseconds mymaster <span class="number">5000</span></div><div class="line">sentinel auth-pass mymaster YWY0MGIx@<span class="number">201</span></div><div class="line">sentinel config-epoch mymaster <span class="number">59</span></div><div class="line">sentinel leader-epoch mymaster <span class="number">59</span></div></pre></td></tr></table></figure></p>
<p>Node3 启动脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /data/redis</div><div class="line">$ cat redis_sentinel.sh</div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">num=<span class="string">"<span class="variable">$1</span>"</span></div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">start</span></span>() &#123;</div><div class="line">  <span class="comment">#redis</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-server /data/redis/conf/redis-16379.conf </div><div class="line">  </div><div class="line">  <span class="comment">#sentinel</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-sentinel /data/redis/conf/sentinel-26379.conf</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">stop</span></span>() &#123;</div><div class="line">  <span class="comment">#redis</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-cli -h 10.21.108.47 -p 16379 <span class="_">-a</span> YWY0MGIx@201 shutdown</div><div class="line"></div><div class="line">  <span class="comment">#sentinel</span></div><div class="line">  /usr/<span class="built_in">local</span>/bin/redis-cli -h 10.21.108.47 -p 26379 <span class="_">-a</span> YWY0MGIx@201 shutdown</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">status</span></span>() &#123;</div><div class="line">  ps -ef |grep -i <span class="string">'redis-'</span> | grep -iv <span class="string">'grep'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">case</span> <span class="variable">$num</span> <span class="keyword">in</span></div><div class="line">  start)</div><div class="line">     start;;</div><div class="line">  stop)</div><div class="line">     stop;;</div><div class="line">  restart)</div><div class="line">     stop</div><div class="line">     start;;</div><div class="line">  status)</div><div class="line">     status;;</div><div class="line">  *)</div><div class="line">     <span class="built_in">echo</span> <span class="string">"Usage: start|stop|restart|status"</span>;;</div><div class="line"><span class="keyword">esac</span></div></pre></td></tr></table></figure></p>
<h3 id="启动各个节点的Redis-Sentinel"><a href="#启动各个节点的Redis-Sentinel" class="headerlink" title="启动各个节点的Redis Sentinel"></a>启动各个节点的Redis Sentinel</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">cd</span> /data/redis</div><div class="line">$ <span class="keyword">sh</span> redis_sentinel.<span class="keyword">sh</span> start</div></pre></td></tr></table></figure>
<p>查看Redis Sentinel日志<br><figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ cd /data/redis/logs</div><div class="line">$ cat sentinel-26379.log</div><div class="line">9897:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:41:04.503 <span class="comment"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span></div><div class="line">9897:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:41:04.504 <span class="comment"># Redis version=5.0.13, bits=64, commit=00000000, modified=0, pid=9897, just started</span></div><div class="line">9897:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:41:04.504 <span class="comment"># Configuration loaded</span></div><div class="line">9901:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:41:04.505 * Running mode=sentinel, port=26379.</div><div class="line">9901:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:41:04.506 <span class="comment"># Sentinel ID is 525e0e47f39d28d46b707401054b0680057c800a</span></div><div class="line">9901:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:41:04.506 <span class="comment"># +monitor master mymaster 10.21.248.7 16379 quorum 2</span></div><div class="line">9901:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:41:09.032 * +sentinel sentinel 525e0e47f39d28d46b707401054b0680057c800b 10.21.248.179<span class="number"> 26379 </span>@ mymaster 10.21.248.7 16379</div><div class="line">9901:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:42:34.765 * +slave slave 10.21.248.179:16379 10.21.248.179<span class="number"> 16379 </span>@ mymaster 10.21.248.7 16379</div><div class="line">9901:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:42:34.766 * +slave slave 10.21.108.47:16379 10.21.108.47<span class="number"> 16379 </span>@ mymaster 10.21.248.7 16379</div><div class="line">9901:X<span class="number"> 14 </span>Aug<span class="number"> 2022 </span>21:42:35.889 * +sentinel sentinel 525e0e47f39d28d46b707401054b0680057c800c 10.21.108.47<span class="number"> 26379 </span>@ mymaster 10.21.248.7 16379</div></pre></td></tr></table></figure></p>
<p>任意登陆一个节点的Redis Sentinel，可查看Redis Sentinel状态<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ redis-cli -h <span class="number">10.21</span>.<span class="number">248.7</span> -p <span class="number">26379</span></div><div class="line"><span class="meta">10.21.248.7:26379&gt;</span> info sentinel  <span class="comment">#查看redis sentinel状态</span></div><div class="line"><span class="meta">10.21.248.7:26379&gt;</span> sentinel masters  <span class="comment">#查看sentinel masters信息</span></div><div class="line"><span class="meta">10.21.248.7:26379&gt;</span> sentinel slaves mymaster <span class="comment">#查看sentinel slave信息</span></div></pre></td></tr></table></figure></p>
<h3 id="模拟stop-master-Sentinel"><a href="#模拟stop-master-Sentinel" class="headerlink" title="模拟stop master Sentinel"></a>模拟stop master Sentinel</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">cd</span> /data/redis</div><div class="line">$ <span class="keyword">sh</span> redis_sentinel.<span class="keyword">sh</span> <span class="keyword">stop</span></div></pre></td></tr></table></figure>
<p>node2的sentinel日志<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ cd /data/redis/logs</div><div class="line">$ cat sentinel-<span class="number">26379.</span>log</div><div class="line"><span class="number">15383</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">45</span>:<span class="number">57.635</span> # +sdown master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span></div><div class="line"><span class="number">15383</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">45</span>:<span class="number">57.635</span> # +sdown sentinel 525e0e47f39d28d46b707401054b0680057c800a <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">26379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span></div><div class="line"><span class="number">15383</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">45</span>:<span class="number">57.745</span> # +new-epoch <span class="number">58</span></div><div class="line"><span class="number">15383</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">45</span>:<span class="number">57.756</span> # +vote-for-leader 525e0e47f39d28d46b707401054b0680057c800c <span class="number">58</span></div><div class="line"><span class="number">15383</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">45</span>:<span class="number">58.142</span> # +config-update-from sentinel 525e0e47f39d28d46b707401054b0680057c800c <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span> <span class="number">26379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span></div><div class="line"><span class="number">15383</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">45</span>:<span class="number">58.142</span> # +switch-master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">15383</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">45</span>:<span class="number">58.142</span> * +slave slave <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">15383</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">45</span>:<span class="number">58.142</span> * +slave slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">15383</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">46</span>:<span class="number">03.189</span> # +sdown slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div></pre></td></tr></table></figure></p>
<p>启动旧redis master，则自动以从节点的身份加入到redis sentinel<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ cd /data/redis/logs</div><div class="line">$ cat sentinel-<span class="number">26379.</span>log</div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">47</span>:<span class="number">09.917</span> # -sdown slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">47</span>:<span class="number">10.684</span> # -sdown sentinel 525e0e47f39d28d46b707401054b0680057c800a <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">26379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">47</span>:<span class="number">19.833</span> * +convert-to-slave slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div></pre></td></tr></table></figure></p>
<h3 id="模拟master-redis-sentinel服务器宕机"><a href="#模拟master-redis-sentinel服务器宕机" class="headerlink" title="模拟master redis sentinel服务器宕机"></a>模拟master redis sentinel服务器宕机</h3><p>关机/重启命令略<br>node3 sentinel日志<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">$ cd /data/redis/logs</div><div class="line">$ cat sentinel-<span class="number">26379.</span>log</div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.033</span> # +sdown sentinel 525e0e47f39d28d46b707401054b0680057c800b <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">26379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.641</span> # +sdown master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.693</span> # +odown master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span> #quorum <span class="number">2</span>/<span class="number">2</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.693</span> # +new-epoch <span class="number">59</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.693</span> # +try-failover master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.694</span> # +vote-for-leader 525e0e47f39d28d46b707401054b0680057c800c <span class="number">59</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.696</span> # 525e0e47f39d28d46b707401054b0680057c800a voted for 525e0e47f39d28d46b707401054b0680057c800c <span class="number">59</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.795</span> # +elected-leader master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.795</span> # +failover-state-select-slave master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.848</span> # +selected-slave slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.848</span> * +failover-state-send-slaveof-noone slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">45.907</span> * +failover-state-wait-promotion slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">46.708</span> # +promoted-slave slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">46.709</span> # +failover-state-reconf-slaves master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">46.807</span> * +slave-reconf-sent slave <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">47.737</span> * +slave-reconf-inprog slave <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">47.737</span> * +slave-reconf-done slave <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">47.837</span> # -odown master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">47.837</span> # +failover-end master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">47.838</span> # +switch-master mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">47.838</span> * +slave slave <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.108</span><span class="meta">.47</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">47.838</span> * +slave slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">52.858</span> # +sdown slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span></div></pre></td></tr></table></figure></p>
<p>启动旧redis master，则自动以从节点的身份加入到redis sentinel<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cd /data/redis/logs</div><div class="line">$ cat sentinel-<span class="number">26379.</span>log</div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">50</span>:<span class="number">40.487</span> # -sdown sentinel 525e0e47f39d28d46b707401054b0680057c800b <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">26379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span></div><div class="line"><span class="number">323096</span>:X <span class="number">14</span> Aug <span class="number">2022</span> <span class="number">21</span>:<span class="number">50</span>:<span class="number">40.965</span> # -sdown slave <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span>:<span class="number">16379</span> <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.179</span> <span class="number">16379</span> @ mymaster <span class="number">10.21</span><span class="meta">.248</span><span class="meta">.7</span> <span class="number">16379</span></div></pre></td></tr></table></figure></p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2022/08/27/Redis-Sentinel/">http://www.yfshare.vip/2022/08/27/Redis-Sentinel/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sentinel是一个管理redis实例的工具，它可以实现对redis的监控、通知、自动故障转移。sentinel不断的检测redis实例是否可以正常工作，通过API向其他程序报告redis的状态，如果redis master不能工作，则会自动启动故障转移进程，将其中的一个slave提升为master，其他的slave重新设置新的master服务器。&lt;br&gt;
    
    </summary>
    
      <category term="Database" scheme="http://www.yfshare.vip/categories/Database/"/>
    
    
      <category term="redis" scheme="http://www.yfshare.vip/tags/redis/"/>
    
      <category term="redis-sentinel" scheme="http://www.yfshare.vip/tags/redis-sentinel/"/>
    
  </entry>
  
  <entry>
    <title>部署NSQ</title>
    <link href="http://www.yfshare.vip/2022/05/07/%E9%83%A8%E7%BD%B2nsq/"/>
    <id>http://www.yfshare.vip/2022/05/07/部署nsq/</id>
    <published>2022-05-07T03:31:47.000Z</published>
    <updated>2022-11-27T15:42:36.940Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>NSQ是一个基于Go语言的分布式实时消息队列中间件，它基于MIT开源协议发布，由bitly公司开源出来的一款简单易用的消息中间件，它有以下特点：</p>
<ul>
<li>分布式，去中心化的拓扑结构，具有无单点故障、故障容错、高可用性以及能够保证消息的可靠传递的特征</li>
<li>可扩展，自带服务发现和负载均衡策略，可在线扩容缩容</li>
<li>运维友好，部署binary即可，无外部依赖，自带admin管理集群</li>
<li>高度集成，官方支持Go和Python的Client，社区也为大多数语言提供了Client<a id="more"></a>
</li>
</ul>
<p>NSQ由以下3种守护进程组成：</p>
<ul>
<li>Nsqd<ul>
<li>负责接收，排队和传送消息到clients的守护进程，nsqd在内存中维护topic和channel的队列，队列大小通过参数mem-queue-size配置，超过大小的消息会记录在磁盘中。另外，nsqd也可以独立运行，不过通常它是配合nsqlookupd一起使用，这样是为了在集群中可以让clients动态发现注册的nsqd。</li>
</ul>
</li>
<li>Nsqlookupd<ul>
<li>管理集群拓扑信息的作为服务发现的守护进程，它可以部署多个实例，实例之间不互相通信且做到数据最终一致；它接受nsqd节点广播的topic和channel信息，clients通过查询nsqlookupd来发现指定topic的producer。它有两个接口：<ul>
<li>tcp接口，nsqd用它来广播</li>
<li>http接口，clients用它来发现和管理</li>
</ul>
</li>
</ul>
</li>
<li>Nsqadmin<ul>
<li>一个Web UI来实时监控NSQ集群，并执行各种管理任务，比如暂停/清空/删除某个Topic/Channel，Metrics的意义可以参考<a href="https://nsq.io/components/nsqadmin.html" target="_blank" rel="external">nsqadmin</a></li>
</ul>
</li>
</ul>
<h3 id="部署NSQ"><a href="#部署NSQ" class="headerlink" title="部署NSQ"></a>部署NSQ</h3><p>下载解压NSQ<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$ cd /data/</div><div class="line">$ wget -c <span class="string">'https://github.com/nsqio/nsq/releases/download/v1.2.1/nsq-1.2.1.linux-amd64.go1.16.6.tar.gz'</span></div><div class="line">$ tar xf nsq-<span class="number">1.2</span>.<span class="number">1</span><span class="selector-class">.linux-amd64</span><span class="selector-class">.go1</span>.<span class="number">16.6</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></div><div class="line">$ tree nsq-<span class="number">1.2</span>.<span class="number">1</span><span class="selector-class">.linux-amd64</span><span class="selector-class">.go1</span>.<span class="number">16.6</span></div><div class="line">nsq-<span class="number">1.2</span>.<span class="number">1</span><span class="selector-class">.linux-amd64</span><span class="selector-class">.go1</span>.<span class="number">16.6</span></div><div class="line">└── bin</div><div class="line">    ├── nsqadmin</div><div class="line">    ├── nsqd</div><div class="line">    ├── nsqlookupd</div><div class="line">    ├── nsq_stat</div><div class="line">    ├── nsq_tail</div><div class="line">    ├── nsq_to_file</div><div class="line">    ├── nsq_to_http</div><div class="line">    ├── nsq_to_nsq</div><div class="line">    └── to_nsq</div><div class="line"> </div><div class="line"><span class="number">1</span> directory, <span class="number">9</span> files</div><div class="line">$ mv nsq-<span class="number">1.2</span>.<span class="number">1</span><span class="selector-class">.linux-amd64</span><span class="selector-class">.go1</span>.<span class="number">16.6</span> nsq</div><div class="line">$ mkdir -<span class="selector-tag">p</span> /data/nsq/data/&#123;node1,node2&#125;</div><div class="line">$ mkdir -<span class="selector-tag">p</span> /data/nsq/logs</div></pre></td></tr></table></figure></p>
<p>supervisor部署<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="function"><span class="title">install_supervisor</span></span> ()</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> [ ! <span class="_">-f</span> <span class="string">"/etc/supervisord.conf"</span> ]; <span class="keyword">then</span></div><div class="line">        yum install -y python-setuptools </div><div class="line">        easy_install <span class="string">"supervisor==3.3.5"</span></div><div class="line">        <span class="keyword">if</span> [ $? <span class="_">-ne</span> 0 ]; <span class="keyword">then</span></div><div class="line">            <span class="built_in">echo</span> <span class="string">"supervisor安装失败"</span></div><div class="line">            <span class="built_in">exit</span> 1</div><div class="line">        <span class="keyword">fi</span></div><div class="line">        echo_supervisord_conf &gt; /etc/supervisord.conf</div><div class="line">        <span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"[include]\nfiles = /etc/supervisor/*.conf"</span> &gt;&gt; /etc/supervisord.conf</div><div class="line">        <span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="string">"/etc/supervisord.conf"</span> ]; <span class="keyword">then</span></div><div class="line">            mkdir /etc/supervisor</div><div class="line">        <span class="keyword">fi</span></div><div class="line">        supervisord -c /etc/supervisord.conf</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"supervisord.conf配置文件已经存在,请确认supervisord是否已经安装"</span>                 </div><div class="line">    <span class="keyword">fi</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">install_supervisor</div></pre></td></tr></table></figure></p>
<p>nsq1<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/supervisor</div><div class="line">$ nsqd1.conf</div><div class="line">[program:nsqd1]</div><div class="line"><span class="attr">command=/data/nsq/bin/nsqd</span> <span class="attr">-broadcast-address=10.71.5.67</span> <span class="attr">-http-address=10.71.5.67:4152</span> <span class="attr">-node-id=1</span> <span class="attr">-tcp-address=10.71.5.67:4153</span> <span class="attr">-lookupd-tcp-address=10.71.5.67:4160</span> <span class="attr">-lookupd-tcp-address=10.71.5.67:4163</span> <span class="attr">-data-path=/data/nsq/data/node1</span> -mem-queue-size <span class="number">100000</span></div><div class="line">;<span class="attr">process_name=%(program_name)s</span></div><div class="line"><span class="attr">numprocs=1</span></div><div class="line"><span class="attr">directory=/data/nsq/</span></div><div class="line"><span class="attr">umask=022</span></div><div class="line">;<span class="attr">priority=999</span></div><div class="line"><span class="attr">autostart=false</span></div><div class="line"><span class="attr">autorestart=true</span></div><div class="line"><span class="attr">startsecs=5</span></div><div class="line"><span class="attr">startretries=3</span></div><div class="line"><span class="attr">exitcodes=0,2</span></div><div class="line"><span class="attr">stopsignal=TERM</span></div><div class="line"><span class="attr">stopwaitsecs=10</span></div><div class="line"><span class="attr">stopasgroup=false</span></div><div class="line"><span class="attr">killasgroup=false</span></div><div class="line"><span class="attr">user=root</span></div><div class="line"><span class="attr">redirect_stderr=true</span></div><div class="line"><span class="attr">stdout_logfile=/data/nsq/logs/nsqd1.log</span></div><div class="line"><span class="attr">stdout_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_logfile_backups=10</span></div><div class="line"><span class="attr">stdout_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_events_enabled=false</span></div><div class="line"><span class="attr">stderr_logfile=/data/nsq/logs/nsqd1_stderr.log</span></div><div class="line"><span class="attr">stderr_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_logfile_backups=10</span></div><div class="line"><span class="attr">stderr_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_events_enabled=false</span></div><div class="line">;<span class="attr">environment=A="1",B="2"</span></div><div class="line"><span class="attr">serverurl=AUTO</span></div></pre></td></tr></table></figure></p>
<p>nsq2<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ cat nsqd2.conf</div><div class="line">[program:nsqd2]</div><div class="line"><span class="attr">command=/data/nsq/bin/nsqd</span> <span class="attr">-broadcast-address=10.71.5.67</span> <span class="attr">-http-address=10.71.5.67:4154</span> <span class="attr">-node-id=2</span> <span class="attr">-tcp-address=10.71.5.67:4155</span> <span class="attr">-lookupd-tcp-address=10.71.5.67:4160</span> <span class="attr">-lookupd-tcp-address=10.71.5.67:4163</span> <span class="attr">-data-path=/data/nsq/data/node2</span> -mem-queue-size <span class="number">100000</span></div><div class="line">;<span class="attr">process_name=%(program_name)s</span></div><div class="line"><span class="attr">numprocs=1</span></div><div class="line"><span class="attr">directory=/data/nsq/</span></div><div class="line"><span class="attr">umask=022</span></div><div class="line">;<span class="attr">priority=999</span></div><div class="line"><span class="attr">autostart=false</span></div><div class="line"><span class="attr">autorestart=true</span></div><div class="line"><span class="attr">startsecs=5</span></div><div class="line"><span class="attr">startretries=3</span></div><div class="line"><span class="attr">exitcodes=0,2</span></div><div class="line"><span class="attr">stopsignal=TERM</span></div><div class="line"><span class="attr">stopwaitsecs=10</span></div><div class="line"><span class="attr">stopasgroup=false</span></div><div class="line"><span class="attr">killasgroup=false</span></div><div class="line"><span class="attr">user=root</span></div><div class="line"><span class="attr">redirect_stderr=true</span></div><div class="line"><span class="attr">stdout_logfile=/data/nsq/logs/nsqd2.log</span></div><div class="line"><span class="attr">stdout_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_logfile_backups=10</span></div><div class="line"><span class="attr">stdout_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_events_enabled=false</span></div><div class="line"><span class="attr">stderr_logfile=/data/nsq/logs/nsqd2_stderr.log</span></div><div class="line"><span class="attr">stderr_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_logfile_backups=10</span></div><div class="line"><span class="attr">stderr_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_events_enabled=false</span></div><div class="line">;<span class="attr">environment=A="1",B="2"</span></div><div class="line"><span class="attr">serverurl=AUTO</span></div></pre></td></tr></table></figure></p>
<h3 id="部署Nsqlookupd"><a href="#部署Nsqlookupd" class="headerlink" title="部署Nsqlookupd"></a>部署Nsqlookupd</h3><p>nsqlookup1<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ cat nsqlookupd1.conf</div><div class="line">[program:nsqlookupd1]</div><div class="line"><span class="attr">command=/data/nsq/bin/nsqlookupd</span> <span class="attr">-tcp-address=10.21.248.7:4160</span> <span class="attr">-http-address=10.21.248.7:4161</span> <span class="attr">-broadcast-address=10.21.248.7</span></div><div class="line">;<span class="attr">process_name=%(program_name)s</span></div><div class="line"><span class="attr">numprocs=1</span></div><div class="line"><span class="attr">directory=/data/nsq/</span></div><div class="line"><span class="attr">umask=022</span></div><div class="line">;<span class="attr">priority=999</span></div><div class="line"><span class="attr">autostart=false</span></div><div class="line"><span class="attr">autorestart=true</span></div><div class="line"><span class="attr">startsecs=5</span></div><div class="line"><span class="attr">startretries=3</span></div><div class="line"><span class="attr">exitcodes=0,2</span></div><div class="line"><span class="attr">stopsignal=TERM</span></div><div class="line"><span class="attr">stopwaitsecs=10</span></div><div class="line"><span class="attr">stopasgroup=false</span></div><div class="line"><span class="attr">killasgroup=false</span></div><div class="line"><span class="attr">user=root</span></div><div class="line"><span class="attr">redirect_stderr=true</span></div><div class="line"><span class="attr">stdout_logfile=/data/nsq/logs/nsqlookupd1.log</span></div><div class="line"><span class="attr">stdout_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_logfile_backups=10</span></div><div class="line"><span class="attr">stdout_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_events_enabled=false</span></div><div class="line"><span class="attr">stderr_logfile=/data/nsq/logs/nsqlookupd1_stderr.log</span></div><div class="line"><span class="attr">stderr_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_logfile_backups=10</span></div><div class="line"><span class="attr">stderr_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_events_enabled=false</span></div><div class="line">;<span class="attr">environment=A="1",B="2"</span></div><div class="line"><span class="attr">serverurl=AUTO</span></div></pre></td></tr></table></figure></p>
<p>nsqlookup2<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ cat nsqlookupd2.conf</div><div class="line">[program:nsqlookupd2]</div><div class="line"><span class="attr">command=/data/nsq/bin/nsqlookupd</span> <span class="attr">-tcp-address=10.21.248.7:4163</span> <span class="attr">-http-address=10.21.248.7:4162</span> <span class="attr">-broadcast-address=10.21.248.7</span></div><div class="line">;<span class="attr">process_name=%(program_name)s</span></div><div class="line"><span class="attr">numprocs=1</span></div><div class="line"><span class="attr">directory=/data/nsq/</span></div><div class="line"><span class="attr">umask=022</span></div><div class="line">;<span class="attr">priority=999</span></div><div class="line"><span class="attr">autostart=false</span></div><div class="line"><span class="attr">autorestart=true</span></div><div class="line"><span class="attr">startsecs=5</span></div><div class="line"><span class="attr">startretries=3</span></div><div class="line"><span class="attr">exitcodes=0,2</span></div><div class="line"><span class="attr">stopsignal=TERM</span></div><div class="line"><span class="attr">stopwaitsecs=10</span></div><div class="line"><span class="attr">stopasgroup=false</span></div><div class="line"><span class="attr">killasgroup=false</span></div><div class="line"><span class="attr">user=root</span></div><div class="line"><span class="attr">redirect_stderr=true</span></div><div class="line"><span class="attr">stdout_logfile=/data/nsq/logs/nsqlookupd2.log</span></div><div class="line"><span class="attr">stdout_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_logfile_backups=10</span></div><div class="line"><span class="attr">stdout_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_events_enabled=false</span></div><div class="line"><span class="attr">stderr_logfile=/data/nsq/logs/nsqlookupd2_stderr.log</span></div><div class="line"><span class="attr">stderr_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_logfile_backups=10</span></div><div class="line"><span class="attr">stderr_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_events_enabled=false</span></div><div class="line">;<span class="attr">environment=A="1",B="2"</span></div><div class="line"><span class="attr">serverurl=AUTO</span></div></pre></td></tr></table></figure></p>
<h3 id="部署Nsqadmin"><a href="#部署Nsqadmin" class="headerlink" title="部署Nsqadmin"></a>部署Nsqadmin</h3><p>nsqadmin<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ cat nsqadmin.conf</div><div class="line">[program:nsqadmin]</div><div class="line"><span class="attr">command=/data/nsq/bin/nsqadmin</span> <span class="attr">--lookupd-http-address=10.21.248.7:4161</span> <span class="attr">--lookupd-http-address=10.21.248.7:4162</span></div><div class="line">;<span class="attr">process_name=%(program_name)s</span></div><div class="line"><span class="attr">numprocs=1</span></div><div class="line"><span class="attr">directory=/data/nsq/</span></div><div class="line"><span class="attr">umask=022</span></div><div class="line">;<span class="attr">priority=999</span></div><div class="line"><span class="attr">autostart=true</span></div><div class="line"><span class="attr">autorestart=false</span></div><div class="line"><span class="attr">startsecs=10</span></div><div class="line"><span class="attr">startretries=3</span></div><div class="line"><span class="attr">exitcodes=0,2</span></div><div class="line"><span class="attr">stopsignal=TERM</span></div><div class="line"><span class="attr">stopwaitsecs=10</span></div><div class="line"><span class="attr">stopasgroup=false</span></div><div class="line"><span class="attr">killasgroup=false</span></div><div class="line"><span class="attr">user=root</span></div><div class="line"><span class="attr">redirect_stderr=true</span></div><div class="line"><span class="attr">stdout_logfile=/data/nsq/logs/nsqadmin.log</span></div><div class="line"><span class="attr">stdout_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_logfile_backups=10</span></div><div class="line"><span class="attr">stdout_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stdout_events_enabled=false</span></div><div class="line"><span class="attr">stderr_logfile=/data/nsq/logs/nsqadmin_stderr.log</span></div><div class="line"><span class="attr">stderr_logfile_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_logfile_backups=10</span></div><div class="line"><span class="attr">stderr_capture_maxbytes=10MB</span></div><div class="line"><span class="attr">stderr_events_enabled=false</span></div><div class="line">;<span class="attr">environment=A="1",B="2"</span></div><div class="line"><span class="attr">serverurl=AUTO</span></div></pre></td></tr></table></figure></p>
<p>启动服务<br><figure class="highlight tcl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ supervisorctl reread</div><div class="line">$ supervisorctl <span class="keyword">update</span></div><div class="line">$ supervisorctl start nsq1 nsq2 nsqlookupd1 nsqlookupd2 nsqadmin</div><div class="line">$ supervisorctl status |grep -i <span class="string">'runn'</span></div><div class="line">nsqadmin                         RUNNING   <span class="keyword">pid</span> <span class="number">210281</span>, uptime <span class="number">0</span>:<span class="number">00</span>:<span class="number">40</span></div><div class="line">nsqd1                            RUNNING   <span class="keyword">pid</span> <span class="number">208306</span>, uptime <span class="number">0</span>:<span class="number">13</span>:<span class="number">09</span></div><div class="line">nsqd2                            RUNNING   <span class="keyword">pid</span> <span class="number">208344</span>, uptime <span class="number">0</span>:<span class="number">13</span>:<span class="number">04</span></div><div class="line">nsqlookupd1                      RUNNING   <span class="keyword">pid</span> <span class="number">208255</span>, uptime <span class="number">0</span>:<span class="number">13</span>:<span class="number">24</span></div><div class="line">nsqlookupd2                      RUNNING   <span class="keyword">pid</span> <span class="number">208282</span>, uptime <span class="number">0</span>:<span class="number">13</span>:<span class="number">19</span></div></pre></td></tr></table></figure></p>
<p>访问Nsqadmin<br><a href="http://ip:port:4171" target="_blank" rel="external">http://ip:port:4171</a></p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2022/05/07/部署nsq/">http://www.yfshare.vip/2022/05/07/部署nsq/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;NSQ是一个基于Go语言的分布式实时消息队列中间件，它基于MIT开源协议发布，由bitly公司开源出来的一款简单易用的消息中间件，它有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分布式，去中心化的拓扑结构，具有无单点故障、故障容错、高可用性以及能够保证消息的可靠传递的特征&lt;/li&gt;
&lt;li&gt;可扩展，自带服务发现和负载均衡策略，可在线扩容缩容&lt;/li&gt;
&lt;li&gt;运维友好，部署binary即可，无外部依赖，自带admin管理集群&lt;/li&gt;
&lt;li&gt;高度集成，官方支持Go和Python的Client，社区也为大多数语言提供了Client
    
    </summary>
    
      <category term="Database" scheme="http://www.yfshare.vip/categories/Database/"/>
    
    
      <category term="nsq" scheme="http://www.yfshare.vip/tags/nsq/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus监控docker</title>
    <link href="http://www.yfshare.vip/2022/04/22/Prometheus%E7%9B%91%E6%8E%A7docker/"/>
    <id>http://www.yfshare.vip/2022/04/22/Prometheus监控docker/</id>
    <published>2022-04-22T05:18:22.000Z</published>
    <updated>2022-11-27T16:02:50.869Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Prometheus监控非K8S环境的docker<br><a id="more"></a></p>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><p>Centos 7.4<br>Docker version 18.09.0  </p>
<h4 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@1-206 ~]<span class="comment"># yum install -y yum-utils device-mapper-persistent-data lvm2</span></div><div class="line">[root@1-206 ~]<span class="comment"># yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></div><div class="line">[root@1-206 ~]<span class="comment"># yum install -y docker-ce</span></div><div class="line">[root@1-206 ~]<span class="comment"># systemctl start docker &amp;&amp; systemctl enable docker</span></div></pre></td></tr></table></figure>
<p>拉取容器镜像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@1-206 ~]<span class="comment"># docker pull nginx</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker pull google/cadvisor</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker pull yfshare/node-exporter:0.17.0</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker pull yfshare/prometheus:2.5.0</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker pull prom/alertmanager</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker pull prom/blackbox-exporter:v0.13.0</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker pull prom/snmp-exporter</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker pull grafana/grafana</span></div></pre></td></tr></table></figure></p>
<p>启动容器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@1-206 ~]<span class="comment"># docker run -it -d -p 80:80 -v /data1/tmp:/tmp/:rw --name nginx nginx</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker run -d -p 8080:8080 -v /data1/tmp:/tmp:rw --name cadvisor google/cadvisor</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker run -d -p 9100:9100 -v /data1/tmp:/tmp:rw --name node-exporter yfshare/node-exporter:0.17.0</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker run -d -p 9090:9090 -v /data1/tmp:/tmp:rw --name prometheus yfshare/prometheus:2.5.0</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker run -d -p 9093:9093 -v /data1/tmp:/tmp:rw --name alertmanager prom/alertmanager</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker run -d -p 9115:9115 -v /data1/tmp:/tmp:rw --name blackbox-exporter prom/blackbox-exporter:v0.13.0</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker run -d -p 9116:9116 -v /data1/tmp:/tmp:rw --name snmp-exporter prom/snmp-exporter</span></div><div class="line">[root@1-206 ~]<span class="comment"># docker run -d -p 3000:3000 -v /data1/tmp:/tmp:rw --name grafana grafana/grafana</span></div></pre></td></tr></table></figure></p>
<p>查看容器状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@1-206 ~]<span class="comment"># docker ps </span></div><div class="line">CONTAINER ID    IMAGE                      COMMAND                  CREATED         STATUS          PORTS                            NAMES</div><div class="line">c66f56e6f287    yfshare/grafana:5.4.2      <span class="string">"/docker-entrypoint.…"</span>   6 days ago      Up 8 seconds    22/tcp, 0.0.0.0:3000-&gt;3000/tcp   grafana</div><div class="line">ba97caebb358    prom/snmp-exporter         <span class="string">"/bin/snmp_exporter …"</span>   6 days ago      Up 7 seconds    0.0.0.0:9116-&gt;9116/tcp           snmp-exporter</div><div class="line">7dc28a01a329    nginx                      <span class="string">"nginx -g 'daemon of…"</span>   6 days ago      Up 6 seconds    0.0.0.0:80-&gt;80/tcp               nginx</div><div class="line">3e8ff1dc1d23    prom/blackbox-exporter:v0.13.0   <span class="string">"/bin/blackbox_expor…"</span>   6 days ago      Up 6 seconds    0.0.0.0:9115-&gt;9115/tcp     blackbox-exporter</div><div class="line">4af8de4eb4ef    prom/alertmanager          <span class="string">"/bin/alertmanager -…"</span>   6 days ago      Up 5 seconds    0.0.0.0:9093-&gt;9093/tcp           alertmanager</div><div class="line">3ad0edf76f32    yfshare/prometheus:2.5.0   <span class="string">"./prometheus --conf…"</span>   6 days ago      Up 5 seconds    22/tcp, 0.0.0.0:9090-&gt;9090/tcp   prometheus</div><div class="line">c7f8365c3c05    yfshare/node-exporter:0.17.0   <span class="string">"./node_exporter --w…"</span>   18 minutes ago  Up 18 minutes 22/tcp, 0.0.0.0:9100-&gt;9100/tcp node-exporter</div><div class="line">b7ea0dc8ade6    google/cadvisor            <span class="string">"/usr/bin/cadvisor -…"</span>   6 days ago      Up 2 seconds    0.0.0.0:8080-&gt;8080/tcp           cadvisor</div><div class="line">[root@1-206 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>好干净哇…！<br><img src="https://note.youdao.com/yws/api/personal/file/32E0D15585404FA792DAA0753BEC9C55?method=download&amp;shareKey=d70f529828d7c207fd390ee471f288ca" alt="nginx_docker"><br>我们先准备一个测试页面<br><img src="https://note.youdao.com/yws/api/personal/file/F8F29E877C6F4B798EB9266351B07E3A?method=download&amp;shareKey=187e1c6760091e6fcd2227bded698787" alt="nginx_page"><br>当我们遇到这个问题时，是Prometheus所在的宿主机时间不对，我们需要先同步时间<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@1-206 ~]<span class="comment"># ntpdate -u time.windows.com</span></div><div class="line">[root@1-206 ~]<span class="comment"># /sbin/hwclock --systohc</span></div></pre></td></tr></table></figure></p>
<p><img src="https://note.youdao.com/yws/api/personal/file/99459A20CCE24EF5A49C200BCF5E2E93?method=download&amp;shareKey=a2d9c7134cede265c00489b766a5e2b9" alt="prometheus_dashboard"><br>prometheus默认监控了自己的9100端口<br><img src="https://note.youdao.com/yws/api/personal/file/B8DE000DF1CD45D48C558C4884F2D6A9?method=download&amp;shareKey=448ab774c2dd73103e825fefe0320bb5" alt="prometheus_targets"><br>编写prometheus.yml配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># my global config</span></div><div class="line">global:</div><div class="line">  scrape_interval:     15s <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.  </span></div><div class="line">  evaluation_interval: 15s <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.  # scrape_timeout is set to the global default (10s).</span></div><div class="line"></div><div class="line"><span class="comment"># Alertmanager configuration</span></div><div class="line">alerting:</div><div class="line">  alertmanagers:</div><div class="line">  - static_configs:</div><div class="line">    - targets: [<span class="string">"192.168.1.206:9093"</span>]</div><div class="line">      <span class="comment"># - alertmanager:9093</span></div><div class="line"></div><div class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.rule_files:</span></div><div class="line">  <span class="comment"># - "first_rules.yml"</span></div><div class="line">  <span class="comment"># - "second_rules.yml"</span></div><div class="line"></div><div class="line"><span class="comment"># A scrape configuration containing exactly one endpoint to scrape:</span></div><div class="line"><span class="comment"># Here it's Prometheus itself.</span></div><div class="line">scrape_configs:</div><div class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.  </span></div><div class="line">  - job_name: <span class="string">'prometheus'</span></div><div class="line">    static_configs:</div><div class="line">    - targets: [<span class="string">'192.168.1.206:9090'</span>,<span class="string">'192.168.1.206:9100'</span>,<span class="string">'192.168.1.206:8080'</span>]</div><div class="line"></div><div class="line">  - job_name: <span class="string">'snmp'</span></div><div class="line">    static_configs:</div><div class="line">      - targets:</div><div class="line">        - 192.168.1.206</div><div class="line">    metrics_path: /snmp</div><div class="line">    params:</div><div class="line">      module: [if_mib]</div><div class="line">    relabel_configs:</div><div class="line">      - source_labels: [__address__]</div><div class="line">        target_label: __param_target</div><div class="line">      - source_labels: [__param_target]</div><div class="line">        target_label: instance</div><div class="line">      - target_label: __address__</div><div class="line">        replacement: 192.168.1.206:9116</div><div class="line"></div><div class="line"><span class="comment">#网站监控</span></div><div class="line">  - job_name: <span class="string">'instance-web-monitor'</span></div><div class="line">    metrics_path: /probe</div><div class="line">    params:</div><div class="line">      module: [http_2xx]</div><div class="line">    static_configs:</div><div class="line">      - targets:</div><div class="line">        - http://192.168.1.206:9090/metrics</div><div class="line">        - http://192.168.1.206/yfshare</div><div class="line">        labels:</div><div class="line">            city: <span class="string">'上海'</span></div><div class="line">            env: <span class="string">'test'</span></div><div class="line">            inhibit: <span class="string">'on'</span></div><div class="line">    relabel_configs:</div><div class="line">      - source_labels: [__address__]</div><div class="line">        target_label: __param_target</div><div class="line">      - source_labels: [__param_target]</div><div class="line">        target_label: instance</div><div class="line">      - target_label: __address__</div><div class="line">        replacement: 192.168.1.206:9115</div><div class="line"></div><div class="line"><span class="comment">####业务监控</span></div><div class="line">  - job_name: <span class="string">'yfshare-web-node'</span></div><div class="line">    static_configs:</div><div class="line">    - targets: [<span class="string">'192.168.1.206:9100'</span>]</div><div class="line">      labels:</div><div class="line">        city: <span class="string">'上海'</span></div><div class="line">        env: <span class="string">'DEV'</span></div><div class="line">    metrics_path: <span class="string">'/metrics'</span></div><div class="line"></div><div class="line">  - job_name: <span class="string">'yfshare-web-cadvisor'</span></div><div class="line">    static_configs:</div><div class="line">    - targets: [<span class="string">'192.168.1.206:8080'</span>]</div><div class="line">      labels:</div><div class="line">        city: <span class="string">'上海'</span></div><div class="line">        env: <span class="string">'DEV'</span></div><div class="line">    metrics_path: <span class="string">'/metrics'</span></div></pre></td></tr></table></figure></p>
<p>这里使用的是自己封装的镜像，因官方镜像不支持通过API来重新加载Prometheus配置文件，试想一下，如果每次修改了配置文件，都需要重启Prometheus，是不是有点那啥..<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@3ad0edf76f32 prometheus]<span class="comment"># curl -X POST http://127.0.0.1:9090/-/reload</span></div></pre></td></tr></table></figure></p>
<p>正确添加Prometheus配置文件后，我们可以查看到监控的key.<br><img src="https://note.youdao.com/yws/api/personal/file/E3AC10259708466C855E5941E8290C7B?method=download&amp;shareKey=7c43ca78f2be5487ce4a6e643a7ec994" alt="prometheus_dashboard"><br><img src="https://note.youdao.com/yws/api/personal/file/BA442FA4F05A456AA23A2240D7A8C936?method=download&amp;shareKey=e3fea8151ea41450214500eec16a9e74" alt="prometheus_dashboard">  </p>
<p>这里也使用的是自己封装的镜像，原因同上。<br>添加Prometheus的DataSource<br><img src="https://note.youdao.com/yws/api/personal/file/C44DE8315636425FB4C407609A95A0AB?method=download&amp;shareKey=97bd518aa68caf1b8e1ddfc95a48dc9e" alt="grafana_datasource"><br><img src="https://note.youdao.com/yws/api/personal/file/E7D8AC758A75472F840488FEA67ECFB4?method=download&amp;shareKey=cfeb95228fe225cc206b2d89c78bc711" alt="grafana_datasource">  </p>
<h4 id="Grafana-dashboard"><a href="#Grafana-dashboard" class="headerlink" title="Grafana dashboard"></a>Grafana dashboard</h4><p>安装grafana常用插件，绘制图标。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@c66f56e6f287 grafana]<span class="comment"># grafana-cli plugins install btplc-status-dot-panel</span></div><div class="line">[root@c66f56e6f287 grafana]<span class="comment"># grafana-cli plugins install grafana-clock-panel</span></div><div class="line">[root@c66f56e6f287 grafana]<span class="comment"># grafana-cli plugins install grafana-piechart-panel</span></div><div class="line">[root@c66f56e6f287 grafana]<span class="comment"># grafana-cli plugins install grafana-worldmap-panel</span></div><div class="line">[root@c66f56e6f287 grafana]<span class="comment"># grafana-cli plugins install michaeldmoore-annunciator-panel</span></div><div class="line">[root@c66f56e6f287 grafana]<span class="comment"># grafana-cli plugins install vonage-status-panel</span></div></pre></td></tr></table></figure></p>
<p>grafana插件安装完成后需要重启服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@1-206 ~]<span class="comment"># docker exec -it grafana /bin/bash</span></div><div class="line">[root@c66f56e6f287 grafana]<span class="comment"># grafana-cli plugins ls</span></div><div class="line">installed plugins:</div><div class="line">btplc-status-dot-panel @ 0.2.3 </div><div class="line">grafana-clock-panel @ 1.0.2 </div><div class="line">grafana-piechart-panel @ 1.3.3 </div><div class="line">grafana-worldmap-panel @ 0.1.2 </div><div class="line">michaeldmoore-annunciator-panel @ 1.0.0 </div><div class="line">vonage-status-panel @ 1.0.9 </div><div class="line"></div><div class="line">Restart grafana after installing plugins . &lt;service grafana-server restart&gt;</div><div class="line"></div><div class="line">[root@c66f56e6f287 grafana]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>绘制完成后的Prometheus监控面板<br><img src="https://note.youdao.com/yws/api/personal/file/8F89195E7CC34B39B079FDEC0989992E?method=download&amp;shareKey=c9437fd9437f54aab15751d158ad9c01" alt="grafana_monitor"><br><img src="https://note.youdao.com/yws/api/personal/file/A7868C8C24AD4BDCAC9F5DE947A98CC2?method=download&amp;shareKey=4ebfb751bd737ea7c949cb753d593b05" alt="grafana_disk">  </p>
<h4 id="Prometheus-alter"><a href="#Prometheus-alter" class="headerlink" title="Prometheus alter"></a>Prometheus alter</h4><p>这里监控2个，分别是密码文件修改监控和网站探测<br>url测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#网站监控</span></div><div class="line">  - job_name: <span class="string">'instance-web-monitor'</span></div><div class="line">    metrics_path: /probe</div><div class="line">    params:</div><div class="line">      module: [http_2xx]</div><div class="line">    static_configs:</div><div class="line">      - targets:</div><div class="line">        - http://192.168.1.206:9090/metrics</div><div class="line">        - http://192.168.1.206/yfshare</div><div class="line">        - http://192.168.1.206/yfshare/aaa.html</div><div class="line">        labels:</div><div class="line">            city: <span class="string">'上海'</span></div><div class="line">            env: <span class="string">'test'</span></div><div class="line">            inhibit: <span class="string">'on'</span></div><div class="line">    relabel_configs:</div><div class="line">      - source_labels: [__address__]</div><div class="line">        target_label: __param_target</div><div class="line">      - source_labels: [__param_target]</div><div class="line">        target_label: instance</div><div class="line">      - target_label: __address__</div><div class="line">        replacement: 192.168.1.206:9115</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># pwd</span></div><div class="line">/usr/<span class="built_in">local</span>/node_exporter/keys</div><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># chmod +x check_file_md5.sh</span></div><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># cat check_md5_file.txt </span></div><div class="line">/etc/passwd</div><div class="line">/etc/shadow</div><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># sh check_file_md5.sh</span></div><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># ls</span></div><div class="line">check_file_md5.sh  check_md5_file.txt  check_md5.prom</div><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># cat check_md5.prom </span></div><div class="line">check_md5 &#123;check_file=<span class="string">"/etc/passwd"</span>,md5=<span class="string">"93dfcbcaf36cddd4fa8a162bda2c98e3"</span>&#125; 0</div><div class="line">check_md5 &#123;check_file=<span class="string">"/etc/shadow"</span>,md5=<span class="string">"c48673bf1c829d4979bcd090649c3cbf"</span>&#125; 0</div><div class="line">[root@c7f8365c3c05 keys]<span class="comment">#</span></div><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># useradd test</span></div><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># sh check_file_md5.sh</span></div><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># cat check_md5.prom </span></div><div class="line">check_md5 &#123;check_file=<span class="string">"/etc/passwd"</span>,md5=<span class="string">"93dfcbcaf36cddd4fa8a162bda2c98e3"</span>&#125; 1</div><div class="line">check_md5 &#123;check_file=<span class="string">"/etc/shadow"</span>,md5=<span class="string">"c48673bf1c829d4979bcd090649c3cbf"</span>&#125; 1</div><div class="line">[root@c7f8365c3c05 keys]<span class="comment"># crontab -l</span></div><div class="line">* * * * * /bin/bash /usr/<span class="built_in">local</span>/node_exporter/keys/check_file_md5.sh</div><div class="line">[root@c7f8365c3c05 keys]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>定义value为0，正常；value为1，触发告警<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">[root@1-206 ~]<span class="comment"># docker exec -it prometheus /bin/bash</span></div><div class="line">[root@3ad0edf76f32 prometheus]<span class="comment"># pwd</span></div><div class="line">/usr/<span class="built_in">local</span>/prometheus</div><div class="line">[root@3ad0edf76f32 prometheus]<span class="comment"># cat check.rules </span></div><div class="line">groups:</div><div class="line">- name: base</div><div class="line">  rules:</div><div class="line">  - alert: 密码文件变更告警</div><div class="line">    expr: check_md5 == 1</div><div class="line">    <span class="keyword">for</span>: 1m</div><div class="line">    labels:</div><div class="line">      CITY: ALL </div><div class="line">      info: 密码文件变更告警</div><div class="line">      severity: Warning</div><div class="line">      resolved: OK</div><div class="line">    annotations:</div><div class="line">      summary: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 服务器 &#123;&#123; <span class="variable">$labels</span>.check_file &#125;&#125; 文件MD5发生变更，请检查."</span></div><div class="line">      description: <span class="string">"主机名: &#123;&#123; <span class="variable">$labels</span>.hostname &#125;&#125; ；文件名: &#123;&#123; <span class="variable">$labels</span>.check_file &#125;&#125;"</span> </div><div class="line"></div><div class="line">  - alert: 网站状态码告警</div><div class="line">    expr: count_code&#123;request=<span class="string">"201"</span>&#125; &gt;= 100 or count_code&#123;request=<span class="string">"403"</span>&#125; &gt;= 100 or count_code&#123;request=<span class="string">"409"</span>&#125; &gt;= 100 or count_code&#123;request=<span class="string">"404"</span>&#125; &gt;= 100 or count_code&#123;request=<span class="string">"500"</span>&#125; &gt;= 100 or count_code&#123;request=<span class="string">"502"</span>&#125; &gt;= 100 or count_code&#123;request=<span class="string">"503"</span>&#125; &gt;= 100</div><div class="line">    <span class="keyword">for</span>: 1m</div><div class="line">    labels:</div><div class="line">      CITY: ALL </div><div class="line">      info: 网站状态码告警</div><div class="line">      severity: Warning</div><div class="line">      resolved: OK</div><div class="line">    annotations:</div><div class="line">      summary: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 服务器网站状态码&#123;&#123; <span class="variable">$labels</span>.request &#125;&#125;告警"</span> </div><div class="line">      description: <span class="string">"主机名: &#123;&#123; <span class="variable">$labels</span>.hostname &#125;&#125; ；状态码来源：&#123;&#123; <span class="variable">$labels</span>.source &#125;&#125; ；状态码：&#123;&#123; <span class="variable">$labels</span>.request &#125;&#125;"</span></div><div class="line">[root@3ad0edf76f32 prometheus]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p><img src="https://note.youdao.com/yws/api/personal/file/553C96D971504AAC8BD67BA5BB7CB308?method=download&amp;shareKey=088d17dde7b3a4b546d0f7c0163f0b58" alt="prometheus_alter_key">  </p>
<p>这里出现重复告警，是因为测试环境只有一台，通过JOB看出Prometheus重复监控了<br><img src="https://note.youdao.com/yws/api/personal/file/2DE55FD564DA4378A960B3D20447CBF9?method=download&amp;shareKey=7a893110461bee277da1ed994e1ccd6f" alt="prometheus_alter_key"><br><img src="https://note.youdao.com/yws/api/personal/file/7B70CAF159954567A14BD02C215B2635?method=download&amp;shareKey=34739ac4f5394c54643dfc922de72ec2" alt="prometheus_alter_key"><br><img src="https://note.youdao.com/yws/api/personal/file/9DF1EB683AEA4C21B8C688340906C76C?method=download&amp;shareKey=8d55d57ef59a11a7ef8606d6241c41a5" alt="prometheus_alter">  </p>
<p>附件：<br><a href="https://note.youdao.com/yws/api/personal/file/31759D56CF984EFA84BA67261A8D7F24?method=download&amp;shareKey=28ba9154c3ace718928c7f49dd8321ff" target="_blank" rel="external">Grafana_templates.tar.gz</a><br><a href="https://note.youdao.com/yws/api/personal/file/646AE39AB9A44547935038CF2E5B8DAF?method=download&amp;shareKey=63ef45c23305715e5418fa1dab35a146" target="_blank" rel="external">check_md5.zip</a><br><a href="https://note.youdao.com/yws/api/personal/file/FE3D30566346461AA39EC63F247A3093?method=download&amp;shareKey=0d272c779eedc5d02e466e928fa6dd61" target="_blank" rel="external">check_http.zip</a><br><a href="https://note.youdao.com/yws/api/personal/file/8784289D112841248EF30C47E5DB7F4F?method=download&amp;shareKey=9d6f16ab3f5e39734cf9b699da1e258d" target="_blank" rel="external">check_code.zip</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2022/04/22/Prometheus监控docker/">http://www.yfshare.vip/2022/04/22/Prometheus监控docker/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Prometheus监控非K8S环境的docker&lt;br&gt;
    
    </summary>
    
      <category term="Monitor" scheme="http://www.yfshare.vip/categories/Monitor/"/>
    
    
      <category term="Grafana" scheme="http://www.yfshare.vip/tags/Grafana/"/>
    
      <category term="Docker" scheme="http://www.yfshare.vip/tags/Docker/"/>
    
      <category term="Prometheus" scheme="http://www.yfshare.vip/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Grafana展示Prometheus数据</title>
    <link href="http://www.yfshare.vip/2022/01/14/Grafana%E5%B1%95%E7%A4%BAPrometheus%E6%95%B0%E6%8D%AE/"/>
    <id>http://www.yfshare.vip/2022/01/14/Grafana展示Prometheus数据/</id>
    <published>2022-01-14T03:07:05.000Z</published>
    <updated>2022-11-27T16:02:27.285Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Grafana 是 Graphite 和 InfluxDB 仪表盘和图形编辑器。<br>Grafana 是开源的，功能齐全的度量仪表盘和图形编辑器，支持 Graphite，InfluxDB 和 OpenTSDB。<br>Grafana 主要特性：灵活丰富的图形化选项；可以混合多种风格；支持白天和夜间模式；多个数据源；Graphite 和 InfluxDB 查询编辑器等。<br><a id="more"></a></p>
<h4 id="部署Grafana"><a href="#部署Grafana" class="headerlink" title="部署Grafana"></a>部署Grafana</h4><p>Prometheus采取到k8s集群的监控数据后，由于Prometheus自带的展示图形不太友好，故我们需要选择更加强大的图形展示工具。Prometheus的时区是UTC +0且不支持修改，而Grafana可以选择时区  </p>
<p>Grafana官网：<a href="https://grafana.com/" target="_blank" rel="external">https://grafana.com/</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">[root@localhost Prometheus]<span class="comment"># cat prometheus-grafana.yaml </span></div><div class="line">apiVersion: extensions/v1beta1</div><div class="line">kind: Deployment</div><div class="line">metadata:</div><div class="line">  name: grafana</div><div class="line">  namespace: kube-ops</div><div class="line">spec:</div><div class="line">  replicas: 1</div><div class="line">  template:</div><div class="line">    metadata:</div><div class="line">      labels:</div><div class="line">        k8s-app: grafana</div><div class="line">        task: monitoring</div><div class="line">    spec:</div><div class="line">      containers:</div><div class="line">      - name: grafana</div><div class="line">        image: yfshare/heapster-grafana-amd64:v4.4.3</div><div class="line">        ports:</div><div class="line">        - containerPort: 3000</div><div class="line">          hostPort: 3000</div><div class="line">          protocol: TCP</div><div class="line">        resources:</div><div class="line">          limits:</div><div class="line">            cpu: 200m</div><div class="line">            memory: 256Mi</div><div class="line">          requests:</div><div class="line">            cpu: 100m</div><div class="line">            memory: 100Mi</div><div class="line">        volumeMounts:</div><div class="line">        - name: ca-certificates</div><div class="line">          mountPath: /etc/ssl/certs</div><div class="line">          <span class="built_in">read</span>Only: <span class="literal">true</span></div><div class="line">        - name: grafana-data</div><div class="line">          mountPath: /var</div><div class="line">          subPath: grafana</div><div class="line">        env:</div><div class="line">        - name: INFLUXDB_HOST</div><div class="line">          value: influxdb</div><div class="line">        - name: INFLUXDB_SERVICE_URL</div><div class="line">          value: http://influxdb.kube-ops.svc.cluster.local:8086</div><div class="line">        - name: GF_SERVER_HTTP_PORT</div><div class="line">          value: <span class="string">"3000"</span></div><div class="line">        - name: GF_AUTH_BASIC_ENABLED</div><div class="line">          value: <span class="string">"false"</span></div><div class="line">        - name: GF_AUTH_ANONYMOUS_ENABLED</div><div class="line">          value: <span class="string">"true"</span></div><div class="line">        - name: GF_AUTH_ANONYMOUS_ORG_ROLE</div><div class="line">          value: Admin</div><div class="line">        - name: GF_SERVER_ROOT_URL</div><div class="line">          <span class="comment"># If you're only using the API Server proxy, set this value instead:</span></div><div class="line">          <span class="comment"># value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/</span></div><div class="line">          value: /</div><div class="line">      volumes:</div><div class="line">      - name: ca-certificates</div><div class="line">        hostPath:</div><div class="line">          path: /etc/ssl/certs</div><div class="line">      - name: grafana-data</div><div class="line">        emptyDir: &#123;&#125;</div><div class="line"></div><div class="line">---</div><div class="line">apiVersion: v1</div><div class="line">kind: Service</div><div class="line">metadata:</div><div class="line">  labels:</div><div class="line">    kubernetes.io/cluster-service: <span class="string">'true'</span></div><div class="line">    kubernetes.io/name: grafana</div><div class="line">  name: grafana</div><div class="line">  namespace: kube-ops</div><div class="line">spec:</div><div class="line">  ports:</div><div class="line">  - port: 3000</div><div class="line">    targetPort: 3000</div><div class="line">  selector:</div><div class="line">    k8s-app: grafana</div><div class="line">[root@localhost Prometheus]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost Prometheus]<span class="comment"># kubectl apply -f prometheus-grafana.yaml</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># kubectl get pod -n kube-ops -o wide</span></div><div class="line">NAME                          READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">grafana-694786cf95-ph5pr      1/1       Running   0          1d        172.30.57.8   192.168.1.198</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="访问Grafana-Dashboard"><a href="#访问Grafana-Dashboard" class="headerlink" title="访问Grafana Dashboard"></a>访问Grafana Dashboard</h4><p>访问 <a href="http://192.168.1.198:3000" target="_blank" rel="external">http://192.168.1.198:3000</a> 打开Grafana WEB界面  </p>
<p>添加数据源<br><img src="https://note.youdao.com/yws/api/personal/file/6AFA6592C3124EA682F932E7B380B42B?method=download&amp;shareKey=6bc43d66b7739fc7a1310990fe381b3f" alt="Prometheus-Grafana">  </p>
<p>Add Data Source添加数据源<br><img src="https://note.youdao.com/yws/api/personal/file/74D693C56EA74021ABEEF5F4049B55AF?method=download&amp;shareKey=2a5e889cd733b9eb5e1b5af63070232e" alt="Prometheus-Grafana">  </p>
<p>这里是编辑 influxdb-datasource<br>执行<code>kubectl get svc --all-namespaces -o wide | grep -i influxdb</code>可以获取influxdb的cluster-ip和Port<br><img src="https://note.youdao.com/yws/api/personal/file/62EC9F17D80643D6878DFD3797C07A0D?method=download&amp;shareKey=fe0c38c8c038c5601b391fbfcf81187e" alt="Prometheus-Grafana">  </p>
<p>添加Grafana的Prometheus数据源<br>数据源Type选择<code>Prometheus</code><br>执行<code>kubectl get pod --all-namespaces -o wide | grep -i prometheus</code>可以获取Prometheus的ip<br><img src="https://note.youdao.com/yws/api/personal/file/EE5264F63B264B058672A1074583C7CF?method=download&amp;shareKey=213d5bad870bd42f79c44e1047060674" alt="Prometheus-Grafana"><br><img src="https://note.youdao.com/yws/api/personal/file/09CD95FF71F641A28CBBFF42860F5414?method=download&amp;shareKey=c816628c1347ed07680c360fda3a7208" alt="Prometheus-Grafana">  </p>
<p>添加Dashboard<br>Grafana官方有个Prometheus模板，参考：<a href="https://grafana.com/dashboards/162" target="_blank" rel="external">https://grafana.com/dashboards/162</a> ，可以把它导入到Grafana  </p>
<p>把下载的kubernetes-pod-monitoring_rev1.json 导入到Grafana<br><img src="https://note.youdao.com/yws/api/personal/file/2016E7E0ADDA4A72B12F075EF190A41B?method=download&amp;shareKey=fe57f25db3d9c42786b34bbf0589bc3e" alt="Prometheus-Grafana">  </p>
<p>上传json文件并选择数据源<br><img src="https://note.youdao.com/yws/api/personal/file/6BDB547CBB574AA0A07AF58A4F00E6C7?method=download&amp;shareKey=d37059e23b4ffa4e5f6af73269739d85" alt="Prometheus-Grafana">  </p>
<p>导入成功。下图为模板默认监控数据，具体需要根据实际情况修改<br><img src="https://note.youdao.com/yws/api/personal/file/654F6475D0734C20BA7A9D59812CB9DD?method=download&amp;shareKey=473d68128408471a22bfeb63e42a8849" alt="Prometheus-Grafana">  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2022/01/14/Grafana展示Prometheus数据/">http://www.yfshare.vip/2022/01/14/Grafana展示Prometheus数据/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Grafana 是 Graphite 和 InfluxDB 仪表盘和图形编辑器。&lt;br&gt;Grafana 是开源的，功能齐全的度量仪表盘和图形编辑器，支持 Graphite，InfluxDB 和 OpenTSDB。&lt;br&gt;Grafana 主要特性：灵活丰富的图形化选项；可以混合多种风格；支持白天和夜间模式；多个数据源；Graphite 和 InfluxDB 查询编辑器等。&lt;br&gt;
    
    </summary>
    
      <category term="Monitor" scheme="http://www.yfshare.vip/categories/Monitor/"/>
    
    
      <category term="Grafana" scheme="http://www.yfshare.vip/tags/Grafana/"/>
    
      <category term="Prometheus" scheme="http://www.yfshare.vip/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus查询语法</title>
    <link href="http://www.yfshare.vip/2021/06/02/Prometheus%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95/"/>
    <id>http://www.yfshare.vip/2021/06/02/Prometheus查询语法/</id>
    <published>2021-06-02T09:51:23.000Z</published>
    <updated>2022-11-27T15:52:36.208Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>prometheus从根本上存储的所有数据都是时间序列: 具有时间戳的数据流只属于单个度量指标和该度量指标下的多个标签维度。除了存储时间序列数据外，Prometheus也可以利用查询表达式存储5分钟的返回结果中的时间序列数据。<br><a id="more"></a><br>Prometheus提供一个函数式的表达式语言，可以使用户实时地查找和聚合时间序列数据。表达式计算结果可以在图表中展示，也可以在Prometheus表达式浏览器中以表格形式展示，或者作为数据源, 以HTTP API的方式提供给外部系统使用。  </p>
<h4 id="表达式语言数据类型"><a href="#表达式语言数据类型" class="headerlink" title="表达式语言数据类型"></a>表达式语言数据类型</h4><p>在Prometheus的表达式语言中，任何表达式或者子表达式都可以归为四种类型：  </p>
<ul>
<li>即时向量(instant vector) 包含每个时间序列的单个样本的一组时间序列，共享相同的时间戳  </li>
<li>范围向量(Range vector) 包含每个时间序列随时间变化的数据点的一组时间序列  </li>
<li>标量(Scalar) 一个简单的数字浮点值  </li>
<li>字符串(String) 一个简单的字符串值(目前未被使用)  </li>
</ul>
<h5 id="时间序列选择器"><a href="#时间序列选择器" class="headerlink" title="时间序列选择器"></a>时间序列选择器</h5><ol>
<li>即时向量选择器<br>即时向量选择器允许选择一组时间序列，或者某个给定的时间戳的样本数据。如：<code>container_cpu_usage_seconds_total</code>选择了具有<code>container_cpu_usage_seconds_total</code>的时间序列  </li>
</ol>
<p>查询pod (nginx-deployment-d8d99448f-h6585)聚合一分钟之内的cpu 负载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#查看当前K8S集群中所有的POD</span></div><div class="line">kubectl get pod --all-namespaces</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sum by (container_name)(rate(container_cpu_usage_seconds_total&#123;image!=<span class="string">""</span>,container_name!=<span class="string">"POD"</span>,pod_name=<span class="string">"kubernetes-dashboard-666fbbf977-v9vsh"</span>&#125;[1m]))</div></pre></td></tr></table></figure>
<p>等于<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sum by (container_name)(rate(container_cpu_usage_seconds_total&#123;image=<span class="string">"k8scn/kubernetes-dashboard-amd64@sha256:811a618089732441fa2aaaac0c860956e61410cec4b5715bbb328d0d4a685393"</span>,container_name=<span class="string">"kubernetes-dashboard"</span>,pod_name=<span class="string">"kubernetes-dashboard-666fbbf977-v9vsh"</span>&#125;[1m]))</div></pre></td></tr></table></figure></p>
<ul>
<li>sum：求和。<a href="https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators" target="_blank" rel="external">聚合操作符参考</a>  </li>
<li>by：固定语法。保留结果向量中的标签集合，其他标签被保留输出。  </li>
<li>rate：计算范围向量中时间序列的每平平均增长率。<a href="https://prometheus.io/docs/prometheus/latest/querying/functions/#rate(" target="_blank" rel="external">rate范围向量参考</a>)  </li>
<li><code>container_cpu_usage_seconds_total</code>：容器CPU每秒使用总和，是一个时间序列名称。  </li>
<li><code>{}</code>：即时矢量选择器。允许在给定的时间戳(即时)中为每个时间序列和每个样本值选择一组时间序列：比如仅指定度量标准名称。这将产生包含具有此度量标准名称的所有时间序列的元素的即时矢量。<a href="https://prometheus.io/docs/prometheus/latest/querying/basics/#instant-vector-selectors" target="_blank" rel="external">即时矢量选择器参考</a>  </li>
<li><code>{image!=&quot;&quot;,container_name!=&quot;POD&quot;,pod_name=&quot;kubernetes-dashboard-666fbbf977-v9vsh&quot;}</code>都是时间序列<code>container_cpu_usage_seconds_total</code>的标签。其中<code>image</code>是名称标签，<code>container_name</code>是工作标签，<code>pod_name</code>是组标签。  </li>
<li><code>image!=&quot;&quot;</code>：是时间序列<code>container_cpu_usage_seconds_total</code>的名称标签，意思是image不为空。<code>container_name!=&quot;POD&quot;</code>意思同上，container_name不等于POD。<code>pod_name=&quot;kubernetes-dashboard-666fbbf977-v9vsh&quot;</code>意思同上，意思是pod_name等于kubernetes-dashboard-666fbbf977-v9vsh。<a href="https://prometheus.io/docs/prometheus/latest/querying/operators/#comparison-binary-operators" target="_blank" rel="external">匹配操作符参考</a>  </li>
<li><code>[1m]</code>：范围矢量选择器。在语法上，范围持续时间会附在矢量选择器末尾的<code>[]</code>内，意思是为每个结果范围矢量元素提取多久的时间值。<a href="https://prometheus.io/docs/prometheus/latest/querying/basics/#range-vector-selectors" target="_blank" rel="external">范围矢量选择器参考</a>  </li>
</ul>
<p><img src="https://note.youdao.com/yws/api/personal/file/65A93214887848EC9E2F6C6EE2131A4E?method=download&amp;shareKey=155f0013085a3da273abd690806013d1" alt="prometheus时间序列">  </p>
<p>我们可以通过Prometheus的UI界面查询到该container<em>name的具体信息，如下：<br>随便输入一个时间序列值，Prometheus默认会列出当前K8s里所有的监控信息，然后ctrl+F搜索<br>![prometheus</em>时间序列](<a href="https://note.youdao.com/yws/api/personal/file/F458416FAFC341B0BBDCD5D0C29DE7DE?method=download&amp;shareKey=ab0ca193e6ec09a12f3cf779e2d43da3" target="_blank" rel="external">https://note.youdao.com/yws/api/personal/file/F458416FAFC341B0BBDCD5D0C29DE7DE?method=download&amp;shareKey=ab0ca193e6ec09a12f3cf779e2d43da3</a>)  </p>
<p>下面两个监控指标获取的监控目标相同<br><img src="https://note.youdao.com/yws/api/personal/file/3A91CDF1741543B7A826B90A96676678?method=download&amp;shareKey=121675fb7d7dac5dbe3254bd63259409" alt="prometheus_时间序列"><br><img src="https://note.youdao.com/yws/api/personal/file/F5A333034C014366853D5675924A3F5B?method=download&amp;shareKey=638d2567347ac6dbe6f2997ef0d8bac2" alt="prometheus_时间序列">  </p>
<ol>
<li>范围向量选择器<br>范围向量表达式正如即时向量表达式一样运行，前者返回从当前时刻的时间序列回来。语法是，在一个向量表达式之后添加<code>[]</code>来表示时间范围，持续时间用数字表示，后接下面单元之一：<br>时间长度有一个数值决定，后面可以跟下面的单位：  </li>
</ol>
<ul>
<li><code>s</code> - seconds  </li>
<li><code>m</code> - minutes  </li>
<li><code>h</code> - hours  </li>
<li><code>d</code> - days  </li>
<li><code>w</code> - weeks  </li>
<li><code>y</code> - years  </li>
</ul>
<p>见上面例子，<a href="https://prometheus.io/docs/prometheus/latest/querying/basics/#range-vector-selectors" target="_blank" rel="external">范围矢量选择器参考</a>  </p>
<ol>
<li>偏移修饰符(offset modifier)<br>偏移修饰符允许更改查询中单个即时向量和范围向量的时间偏移量。<a href="https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier" target="_blank" rel="external">偏移修饰符(offset modifier)参考</a>  </li>
</ol>
<p>以下表达式返回container_cpu_usage_seconds_total在一天前5分钟内的速率<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(rate(container_cpu_usage_seconds_total&#123;image!=<span class="string">""</span>,container_name!=<span class="string">"POD"</span>,pod_name=<span class="string">"kubernetes-dashboard-666fbbf977-v9vsh"</span>&#125; [5m] offset 1d))</div></pre></td></tr></table></figure></p>
<p><img src="https://note.youdao.com/yws/api/personal/file/760F65C1186A4B8E89CFF5DE6A3E9441?method=download&amp;shareKey=af536b0fa31d1c8182cfaada12d23b82" alt="prometheus_偏移修饰符"><br><img src="https://note.youdao.com/yws/api/personal/file/41A2911C678848AB89AD4DAF25B82E77?method=download&amp;shareKey=783a554ef5db48b9c080b6bd0100145e" alt="prometheus_偏移修饰符">  </p>
<ol>
<li>操作符  </li>
</ol>
<p>4.1. 二元操作符<br>Prometheus的查询语言支持基本的逻辑运算和算术运算。对于两个瞬时向量, <a href="https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching" target="_blank" rel="external">匹配行为</a>可以被改变  </p>
<p>4.2. 算术二元运算符  </p>
<ul>
<li><code>+</code> 加法  </li>
<li><code>-</code> 减法  </li>
<li><code>*</code> 乘法  </li>
<li><code>/</code> 除法  </li>
<li><code>%</code> 模  </li>
<li><code>^</code> 幂等  </li>
</ul>
<p>二元运算操作符支持<code>scalar/scalar(标量/标量)</code>、<code>vector/scalar(向量/标量)</code>、和<code>vector/vector(向量/向量)</code>之间的操作<br>在两个标量之间进行操作符运算，得到的结果也是标量  </p>
<p>在向量和标量之间，这个操作符会作用于这个向量的每个样本值上。例如：如果一个时间序列瞬时向量除以2，操作结果也是一个新的瞬时向量，且度量指标名称不变, 它是原度量指标瞬时向量的每个样本值除以2<br>在两个向量之间，一个二元算术操作符作用在左边瞬时向量的每个样本值，且该样本值与操作符右边能匹配上的样本值计算，向量匹配。结果写入到一个没有度量指标名称的瞬时向量  </p>
<p>4.3. 比较二元操作符<br>在Prometheus系统中，比较二元操作符有：  </p>
<ul>
<li><code>==</code> 等于  </li>
<li><code>!=</code> 不等于  </li>
<li><code>&gt;</code> 大于  </li>
<li><code>&lt;</code> 小于  </li>
<li><code>&gt;=</code> 大于等于  </li>
<li><code>&lt;=</code> 小于等于  </li>
</ul>
<p>比较二元操作符被应用于<code>scalar/scalar（标量/标量）</code>、<code>vector/scalar(向量/标量)</code>，和<code>vector/vector（向量/向量）</code>。比较操作符得到的结果是<code>bool</code>布尔类型值，返回<code>1</code>或者<code>0</code>值。  </p>
<p>在两个标量之间的比较运算，bool结果写入到另一个结果标量中。<br>瞬时向量和标量之间的比较运算，这个操作符会应用到某个当前时刻的每个时间序列数据上，如果一个时间序列数据值与这个标量比较结果是false，则这个时间序列数据被丢弃掉，如果是true, 则这个时间序列数据被保留在结果中。  </p>
<p>在两个瞬时向量之间的比较运算，左边度量指标数据中的每个时间序列数据，与右边度量指标中的每个时间序列数据匹配，没有匹配上的，或者计算结果为false的，都被丢弃，不在结果中显示。否则将保留左边的度量指标和标签的样本数据写入瞬时向量。  </p>
<p>4.4. 逻辑/集合二元操作符<br><code>逻辑/集合</code>二元操作符只能作用在<code>即时向量</code>， 包括：  </p>
<ul>
<li><code>and</code> 交集  </li>
<li><code>or</code> 并集  </li>
<li><code>unless</code> 补集  </li>
</ul>
<p><code>vector1 and vector2</code> 的逻辑/集合二元操作符，规则：vector1瞬时向量中的每个样本数据与vector2向量中的所有样本数据进行标签匹配，不匹配的，全部丢弃。运算结果是保留左边的度量指标名称和值。<br><code>vector1 or vector2</code>的逻辑/集合二元操作符，规则: 保留vector1向量中的每一个元素，对于vector2向量元素，则不匹配vector1向量的任何元素，则追加到结果元素中。<br><code>vector1 unless vector2</code>的逻辑/集合二元操作符，又称差积。规则：包含在vector1中的元素，但是该元素不在vector2向量所有元素列表中，则写入到结果集中。  </p>
<ol>
<li>向量匹配<br>向量之间的匹配是指右边向量中的每一个元素，在左边向量中也存在。这里有两种基本匹配行为特征：  </li>
</ol>
<ul>
<li>一对一，找到这个操作符的两边向量元素的相同元素。默认情况下，操作符的格式是<code>vector1 [operate] vector2</code>。如果它们有相同的标签和值，则表示相匹配。<code>ingoring</code>关键字是指，向量匹配时，可以忽略指定标签。<code>on</code>关键字是指，在指定标签上进行匹配。格式如下所示：<br><a href="https://github.com/1046102779/prometheus/blob/master/prometheus/querying/operators.md#向量匹配" target="_blank" rel="external">参考</a>  </li>
</ul>
<ol>
<li>聚合操作符<br>Prometheus支持下面的内置聚合操作符。这些聚合操作符被用于聚合单个即时向量的所有时间序列列表，把聚合的结果值存入到新的向量中。  </li>
</ol>
<ul>
<li><code>sum</code> (在维度上求和)  </li>
<li><code>max</code> (在维度上求最大值)  </li>
<li><code>min</code> (在维度上求最小值)  </li>
<li><code>avg</code> (在维度上求平均值)  </li>
<li><code>stddev</code> (求标准差)  </li>
<li><code>stdvar</code> (求方差)  </li>
<li><code>count</code> (统计向量元素的个数)  </li>
<li><code>count_values</code> (统计相同数据值的元素数量)  </li>
<li><code>bottomk</code> (样本值第k个最小值)  </li>
<li><code>topk</code> (样本值第k个最大值)  </li>
<li><code>quantile</code> (统计分位数)  </li>
</ul>
<p>这些操作符被用于聚合所有标签维度，或者通过without或者by子句来保留不同的维度。<br>parameter只能用于<code>count_values</code>, <code>quantile</code>, <code>topk</code>和<code>bottomk</code>。<code>without</code>移除结果向量中的标签集合，其他标签被保留输出。<code>by</code>关键字的作用正好相反，即使它们的标签值在向量的所有元素之间。<code>keep_common</code>子句允许保留额外的标签(在元素之间相同，但不在by子句中的标签)  </p>
<p><code>count_values</code>对每个唯一的样本值输出一个时间序列。每个时间序列都附加一个标签。这个标签的名字有聚合参数指定，同时这个标签值是唯一的样本值。每一个时间序列值是结果样本值出现的次数。<br><code>topk</code>和<code>bottomk</code>与其他输入样本子集聚合不同，返回的结果中包括原始标签。by和without仅仅用在输入向量的桶中。  </p>
<p>例如： 如果度量指标名称http_requests_total包含由group, application, instance的标签组成的时间序列数据，我们可以通过以下方式计算去除instance标签的http请求总数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sum(http_requests_total) without (instance)</div></pre></td></tr></table></figure></p>
<p>如果我们对所有应用程序的http请求总数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sum(http_requests_total)</div></pre></td></tr></table></figure></p>
<p>统计每个编译版本的二进制文件数量：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">count_values(<span class="string">"version"</span>, build_version)</div></pre></td></tr></table></figure></p>
<p>通过所有实例，获取http请求第5个最大值：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">topk(5, http_requests_total)</div></pre></td></tr></table></figure></p>
<ol>
<li>二元运算符优先级<br>在Prometheus系统中，二元运算符优先级从高到低：  </li>
</ol>
<ul>
<li><code>^</code>  </li>
<li><code>*</code>,<code>/</code>,<code>%</code>  </li>
<li><code>+</code>,<code>-</code>  </li>
<li><code>==</code>,<code>!=</code>,<code>&lt;=</code>,<code>&lt;</code>,<code>&gt;=</code>,<code>&gt;</code>  </li>
<li><code>and</code>,<code>unless</code>  </li>
<li><code>or</code>  </li>
</ul>
<p>参考：<a href="https://github.com/1046102779/prometheus/blob/master/prometheus/querying/operators.md" target="_blank" rel="external">https://github.com/1046102779/prometheus/blob/master/prometheus/querying/operators.md</a>  </p>
<ol>
<li>函数<br>一些函数有默认的参数，例如：<code>year(v=vector(time()) instant-vector)</code>。v是参数值，<code>instant-vector</code>是参数类型。<code>vector(time())</code>是默认值。  </li>
</ol>
<ul>
<li><code>abs()</code><br> <code>abs(v instant-vector)</code>返回输入向量的所有样本的绝对值  </li>
<li><p><code>absent()</code><br> <code>absent(v instant-vector)</code>，如果赋值给它的向量具有样本数据，则返回空向量；如果传递的瞬时向量参数没有样本数据，则返回不带度量指标名称且带有标签的样本值为1的结果<br> 当监控度量指标时，如果获取到的样本数据是空的， 使用absent方法对告警是非常有用的。  </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">absent(nonexistent&#123;job=<span class="string">"myjob"</span>&#125;) <span class="comment"># =&gt; key: value = &#123;job="myjob"&#125;: 1</span></div><div class="line">absent(nonexistent&#123;job=<span class="string">"myjob"</span>, instance=~<span class="string">".*"</span>&#125;) <span class="comment"># =&gt; &#123;job="myjob"&#125; 1</span></div><div class="line">absent(sum(nonexistent&#123;job=<span class="string">"myjob"</span>&#125;)) <span class="comment"># =&gt; key:value &#123;&#125;: 0</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>ceil()</code><br><code>ceil(v instant-vector)</code> 是一个向上舍入为最接近的整数  </p>
</li>
<li><p><code>changes()</code><br><code>changes(v range-vector)</code>输入一个范围向量， 返回这个范围向量内每个样本数据值变化的次数。  </p>
</li>
<li><p><code>clamp_max()</code><br><code>clamp_max(v instant-vector, max scalar)</code>数，输入一个瞬时向量和最大值，样本数据值若大于max，则改为max，否则不变.  </p>
</li>
<li><p><code>clamp_min()</code><br><code>clamp_min(v instant-vector)</code>函数，输入一个瞬时向量和最大值，样本数据值小于min，则改为min。否则不变。  </p>
</li>
<li><p><code>count_saclar()</code><br><code>count_scalar(v instant-vector)</code>函数, 输入一个瞬时向量，返回<code>key:value=&quot;scalar&quot;</code>: 样本个数。而<code>count()</code>函数，输入一个瞬时向量，返回<code>key:value=</code>向量：样本个数，其中结果中的向量允许通过<code>by</code>条件分组  </p>
</li>
<li><p><code>day_of_month()</code><br><code>day_of_month(v=vector(time()) instant-vector)</code>函数，返回被给定UTC时间所在月的第几天。返回值范围：1~31。  </p>
</li>
<li><p><code>day_of_week()</code><br><code>day_of_week(v=vector(time()) instant-vector)</code>函数，返回被给定UTC时间所在周的第几天。返回值范围：0~6. 0表示星期天  </p>
</li>
<li><p><code>days_in_month()</code><br><code>days_in_month(v=vector(time()) instant-vector)</code>函数，返回当月一共有多少天。返回值范围：28~31  </p>
</li>
<li><p><code>delta()</code><br><code>delta(v range-vector)</code>函数，计算一个范围向量v的第一个元素和最后一个元素之间的差值。返回值：key:value=度量指标：差值  </p>
</li>
</ul>
<p>返回过去两小时的CPU温度差：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">delta(cpu_temp_celsius&#123;host=<span class="string">"zeus"</span>&#125;[2h])</div></pre></td></tr></table></figure></p>
<p>delta函数返回值类型只能是gauges  </p>
<ul>
<li><p><code>deriv()</code><br><code>deriv(v range-vector)</code>函数，计算一个范围向量v中各个时间序列二阶导数，使用<a href="https://en.wikipedia.org/wiki/Simple_linear_regression" target="_blank" rel="external">简单线性回归</a><br>deriv二阶导数返回值类型只能是gauges  </p>
</li>
<li><p><code>drop_common_labels()</code><br><code>drop_common_labels(instant-vector)</code>函数，输入一个瞬时向量，返回值是<code>key:value=</code>度量指标：样本值，其中度量指标是去掉了具有相同标签<br>例如：<br>http_requests_total{code=”200”, host=”127.0.0.1:9090”, method=”get”} : 4,<br>http_requests_total{code=”200”, host=”127.0.0.1:9090”, method=”post”} : 5,<br>返回值: http_requests_total{method=”get”} : 4, http_requests_total{code=”200”, method=”post”} : 5  </p>
</li>
<li><p><code>exp()</code><br><code>exp(v instant-vector)</code>函数，输入一个瞬时向量, 返回各个样本值的e指数值，即为e^N次方。特殊情况如下所示：<br><code>Exp(+inf) = +Inf Exp(NaN) = NaN</code>  </p>
</li>
<li><p><code>floor()</code><br><code>floor(v instant-vector)</code>函数，与<code>ceil()</code>函数相反。 4.3 为 4  </p>
</li>
<li><p><code>histogram_quantile()</code><br><code>histogram_quatile(φ float, b instant-vector)</code>函数计算b向量的<code>φ-直方图 (0 ≤ φ ≤ 1)</code> 。<a href="https://www.howtoing.com/how-to-query-prometheus-on-ubuntu-14-04-part-2/" target="_blank" rel="external">参考中文文献</a>  </p>
</li>
<li><p><code>holt_winters()</code><br><code>holt_winters(v range-vector, sf scalar, tf scalar)</code>函数基于范围向量v，生成事件序列数据平滑值。平滑因子<code>sf</code>越低, 对老数据越重要。趋势因子<code>tf</code>越高，越多的数据趋势应该被重视。0&lt; sf, tf &lt;=1。 <code>holt_winters</code>仅用于gauges  </p>
</li>
<li><p><code>hour()</code><br><code>hour(v=vector(time()) instant-vector)</code>函数返回被给定UTC时间的当前第几个小时，时间范围：0~23  </p>
</li>
<li><p><code>idelta()</code><br><code>idelta(v range-vector)</code>函数，输入一个范围向量，返回key: value = 度量指标： 每最后两个样本值差值  </p>
</li>
<li><p><code>increase()</code><br><code>increase(v range-vector)</code>函数， 输入一个范围向量，返回：<code>key:value =</code>度量指标：last值-first值，自动调整单调性，如：服务实例重启，则计数器重置。与<code>delta()</code>不同之处在于delta是求差值，而increase返回最后一个减第一个值,可为正为负<br> 返回过去5分钟，连续两个时间序列数据样本值的http请求增加值:  </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">increase(http_requests_total&#123;job=<span class="string">"api-server"</span>&#125;[5m])</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p><code>irate</code><br><code>irate(v range-vector)</code>函数, 输入：范围向量，输出：<code>key: value =</code>度量指标： <code>(last值-last前一个值)/时间戳差值</code>。它是基于最后两个数据点，自动调整单调性， 如：服务实例重启，则计数器重置<br>针对范围向量中的每个时间序列数据，返回两个最新数据点过去5分钟的HTTP请求速率：  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">irate(http_requests_total&#123;job=<span class="string">"api-server"</span>&#125;[5m])</div></pre></td></tr></table></figure>
<p><code>irate</code>只能用于绘制快速移动的计数器。因为速率的简单更改可以重置FOR子句，利用警报和缓慢移动的计数器，完全由罕见的尖峰组成的图形很难阅读  </p>
</li>
<li><p><code>label_replace()</code><br>对于v中的每个时间序列，<code>label_replace(v instant-vector, dst_label string, replacement string, src_label string, regex string)</code>将正则表达式与标签值src_label匹配。如果匹配，则返回时间序列，标签值dst_label被替换的扩展替换。$1替换为第一个匹配子组，$2替换为第二个等。如果正则表达式不匹配，则时间序列不会更改。  </p>
<p>另一种更容易的理解是：<code>label_replace</code>函数，输入：瞬时向量，输出：<code>key: value =</code>度量指标： 值（要替换的内容：首先，针对src_label标签，对该标签值进行regex正则表达式匹配。如果不能匹配的度量指标，则不发生任何改变；否则，如果匹配，则把dst_label标签的标签纸替换为replacement 下面这个例子返回一个向量值a带有<code>foo</code>标签： <code>label_replace(up{job=&quot;api-server&quot;, serice=&quot;a:c&quot;}, &quot;foo&quot;, &quot;$1&quot;, &quot;service&quot;, &quot;(.*):.*&quot;)</code></p>
</li>
<li><p><code>ln()</code><br><code>ln(v instance-vector)</code>计算瞬时向量v中所有样本数据的自然对数。特殊例子：<br><code>ln(+Inf) = +Inf ln(0) = -Inf ln(x&lt;0) = NaN ln(NaN) = NaN</code>  </p>
</li>
<li><p><code>log2()</code><br><code>log2(v instant-vector)</code>函数计算瞬时向量v中所有样本数据的二进制对数。  </p>
</li>
<li><p><code>log10()</code><br><code>log10(v instant-vector)</code>函数计算瞬时向量v中所有样本数据的10进制对数。相当于<code>ln()</code>  </p>
</li>
<li><p><code>minute()</code><br><code>minute(v=vector(time()) instant-vector)</code>函数返回给定UTC时间当前小时的第多少分钟。结果范围：0~59  </p>
</li>
<li><p><code>month()</code><br><code>month(v=vector(time()) instant-vector)</code>函数返回给定UTC时间当前属于第几个月，结果范围：0~12  </p>
</li>
<li><p><code>predict_linear()</code><br><code>predict_linear(v range-vector, t scalar)</code>预测函数，输入：范围向量和从现在起t秒后，输出：不带有度量指标，只有标签列表的结果值  </p>
</li>
<li><p><code>rate()</code><br><code>rate(v range-vector)</code>函数, 输入：范围向量，输出：key: value = 不带有度量指标，且只有标签列表：<code>(last值-first值)/时间差</code><br><code>rate(http_requests_total[5m])</code><br><code>rate()</code>函数返回值类型只能用counters，当用图表显示增长缓慢的样本数据时，这个函数是非常合适的<br>注意：当rate函数和聚合方式联合使用时，一般先使用rate函数，再使用聚合操作, 否则，当服务实例重启后，rate无法检测到counter重置  </p>
</li>
<li><p><code>resets()</code><br><code>resets()</code>函数, 输入：一个范围向量，输出：key-value=没有度量指标，且有标签列表[在这个范围向量中每个度量指标被重置的次数]。在两个连续样本数据值下降，也可以理解为counter被重置<br><code>resets(http_requests_total[5m])</code>。resets只能和counters一起使用  </p>
</li>
<li><p><code>round()</code><br><code>round(v instant-vector, to_nearest 1= scalar)</code>函数，与ceil和floor函数类似，输入：瞬时向量，输出：指定整数级的四舍五入值, 如果不指定，则是1以内的四舍五入  </p>
</li>
<li><p><code>scalar()</code><br><code>scalar(v instant-vector)</code>函数, 输入：瞬时向量，输出：key: value = “scalar”, 样本值[如果度量指标样本数量大于1或者等于0, 则样本值为NaN, 否则，样本值本身]  </p>
</li>
<li><p><code>sort()</code><br><code>sort(v instant-vector)</code>函数，输入：瞬时向量，输出：key: value = 度量指标：样本值[升序排列]  </p>
</li>
<li><p><code>sort_desc()</code><br><code>sort(v instant-vector</code>函数，输入：瞬时向量，输出：key: value = 度量指标：样本值[降序排列]  </p>
</li>
<li><p><code>sqrt()</code><br><code>sqrt(v instant-vector)</code>函数，输入：瞬时向量，输出：key: value = 度量指标： 样本值的平方根  </p>
</li>
<li><p><code>time()</code><br><code>time()</code>函数，返回从1970-01-01到现在的秒数，注意：它不是直接返回当前时间，而是时间戳  </p>
</li>
<li><p><code>vector()</code><br><code>vector(s scalar)</code>函数，返回：<code>key: value= {}</code>, 传入参数值  </p>
</li>
<li><p><code>year()</code><br><code>year(v=vector(time()) instant-vector)</code>，返回年份  </p>
</li>
<li><p><code>_over_time()</code><br>下面的函数列表允许传入一个范围向量，返回一个带有聚合的瞬时向量：  </p>
<ul>
<li><code>avg_over_time(range-vector)</code>: 范围向量内每个度量指标的平均值  </li>
<li><code>min_over_time(range-vector)</code>: 范围向量内每个度量指标的最小值  </li>
<li><code>max_over_time(range-vector)</code>: 范围向量内每个度量指标的最大值  </li>
<li><code>sum_over_time(range-vector)</code>: 范围向量内每个度量指标的求和值  </li>
<li><code>count_over_time(range-vector)</code>: 范围向量内每个度量指标的样本数据个数  </li>
<li><code>quantile_over_time(scalar, range-vector)</code>: 范围向量内每个度量指标的样本数据值分位数，<code>φ-quantile (0 ≤ φ ≤ 1)</code>  </li>
<li><code>stddev_over_time(range-vector)</code>: 范围向量内每个度量指标的总体标准偏差  </li>
<li><code>stdvar_over_time(range-vector)</code>: 范围向量内每个度量指标的总体标准方差  </li>
</ul>
</li>
</ul>
<p>参考：<a href="https://github.com/1046102779/prometheus/blob/master/prometheus/querying/functions.md" target="_blank" rel="external">https://github.com/1046102779/prometheus/blob/master/prometheus/querying/functions.md</a><br><a href="https://www.kancloud.cn/huyipow/prometheus/525003" target="_blank" rel="external">https://www.kancloud.cn/huyipow/prometheus/525003</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2021/06/02/Prometheus查询语法/">http://www.yfshare.vip/2021/06/02/Prometheus查询语法/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;prometheus从根本上存储的所有数据都是时间序列: 具有时间戳的数据流只属于单个度量指标和该度量指标下的多个标签维度。除了存储时间序列数据外，Prometheus也可以利用查询表达式存储5分钟的返回结果中的时间序列数据。&lt;br&gt;
    
    </summary>
    
      <category term="Monitor" scheme="http://www.yfshare.vip/categories/Monitor/"/>
    
    
      <category term="Prometheus" scheme="http://www.yfshare.vip/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>代理转发zabbix proxy</title>
    <link href="http://www.yfshare.vip/2021/03/17/%E4%BB%A3%E7%90%86%E8%BD%ACzabbix%20proxy/"/>
    <id>http://www.yfshare.vip/2021/03/17/代理转zabbix proxy/</id>
    <published>2021-03-17T06:06:35.000Z</published>
    <updated>2022-11-27T16:12:05.157Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>现象：us地区 zabbix-proxy 在晚上高峰期时（21：00～24:00）容易发生 zabbix-server 无法连接 zabbix proxy。<br>问题原因：经检查，US 到 TW 之间通讯走国际链路会经过 PCCW 运营商，且保障到运营商和调整路由后效果不明显。  </p>
<p>mtr 截图<br><img src="https://note.youdao.com/yws/api/personal/file/WEBf881b98c7dc3dfac3ed1d8b5b5e84a3f?method=download&amp;shareKey=d4ac246060f6734406288c8105546d39" alt="mtr">  </p>
<p>因为 CDS 在 TW 有服务器，最后和 厂商 CDS 沟通后，采用 CDS 云互联解决问题，网络链路不会经过 PCCW 运营商。即 US CDS 机器与 TW CDS 机器建立 “大内网”，两者通过内网通讯，然后 TW CDS 转发 US zabbix proxy 流量到 TW zabbix-server。  </p>
<p>解决过程：<br>最开始想到的是 通过 iptables SNAT 和 DNAT 实现路由转发。但可惜的是，失败了。<br>然后尝试使用 nginx 来转发 zabbix proxy 流量到 zabbix server，经过验证，由于 zabbix proxy 数据包过大，七层 nginx 反向代理无法完整转发流量，经多次尝试调整参数后，仍无法解决。失败了。<br>使用四层 haproxy 来代理 zabbix proxy 流量到 zabbix server。成功！。  </p>
<p>使用 SNAT 和 DNAT ，代理服务器一直在发送大量 ARP 包，暂未解决问题。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">20:53:19.828856 ARP, Request who-has 10.123.0.207 tell 10.123.0.10, length 46</div><div class="line">20:53:20.330829 ARP, Request who-has 10.123.0.205 tell 10.123.0.10, length 46</div><div class="line">20:53:20.376638 ARP, Request who-has 10.123.0.204 tell 10.123.0.10, length 46</div><div class="line">20:53:20.830674 ARP, Request who-has 10.123.0.207 tell 10.123.0.10, length 46</div><div class="line">20:53:21.230574 ARP, Request who-has 10.123.0.203 tell 10.123.0.10, length 46</div><div class="line">20:53:21.832715 ARP, Request who-has 10.123.0.207 tell 10.123.0.10, length 46</div><div class="line">20:53:22.232912 ARP, Request who-has 10.123.0.203 tell 10.123.0.10, length 46</div><div class="line">20:53:22.801790 ARP, Request who-has 10.123.0.208 tell 10.123.0.10, length 46</div><div class="line">20:53:22.834676 ARP, Request who-has 10.123.0.207 tell 10.123.0.10, length 46</div><div class="line">20:53:23.234728 ARP, Request who-has 10.123.0.203 tell 10.123.0.10, length 46</div><div class="line">20:53:23.804725 ARP, Request who-has 10.123.0.208 tell 10.123.0.10, length 46</div><div class="line">20:53:24.236666 ARP, Request who-has 10.123.0.203 tell 10.123.0.10, length 46</div><div class="line">20:53:24.806665 ARP, Request who-has 10.123.0.208 tell 10.123.0.10, length 46</div></pre></td></tr></table></figure></p>
<p>这是之前配置的 SNAT 和 DNAT 规则，可能是姿势不对，未能解决问题。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iptables -t nat -D POSTROUTING <span class="_">-s</span> 10.123.1.68/32 -o ens192 -j SNAT --to-source 164.52.1.106</div><div class="line">iptables -t nat -D PREROUTING <span class="_">-s</span> 124.108.157.186 -j DNAT --to-destination 164.52.1.106</div></pre></td></tr></table></figure></p>
<p>在 zabbix proxy 上配置了路由到代理服务器，但zabbix-proxy 仍无法与 zabbix-server 建立通讯。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">111991:20190820:212111.845 Unable to connect to the server [124.108.157.186]:10051 [cannot connect to [[124.108.157.186]:10051]: [110] Connection timed out]</div><div class="line">111990:20190820:212111.846 Unable to connect to the server [124.108.157.186]:10051 [cannot connect to [[124.108.157.186]:10051]: [110] Connection timed out]. Will retry every 120 second(s)</div><div class="line">111992:20190820:212111.942 Unable to connect to the server [124.108.157.186]:10051 [cannot connect to [[124.108.157.186]:10051]: [110] Connection timed out]. Will retry every 15 second(s)</div><div class="line">111991:20190820:212211.878 Unable to connect to the server [124.108.157.186]:10051 [cannot connect to [[124.108.157.186]:10051]: [110] Connection timed out]</div><div class="line">111992:20190820:212227.046 Still unable to connect...</div><div class="line">111991:20190820:212311.926 Unable to connect to the server [124.108.157.186]:10051 [cannot connect to [[124.108.157.186]:10051]: [110] Connection timed out]</div><div class="line">111992:20190820:212327.110 Still unable to connect...</div><div class="line">111990:20190820:212341.925 Still unable to connect...</div><div class="line">111991:20190820:212411.974 Unable to connect to the server [124.108.157.186]:10051 [cannot connect to [[124.108.157.186]:10051]: [110] Connection timed out]</div><div class="line">111992:20190820:212427.173 Still unable to connect...</div><div class="line">111991:20190820:212512.005 Unable to connect to the server [124.108.157.186]:10051 [cannot connect to [[124.108.157.186]:10051]: [110] Connection timed out]</div><div class="line">111992:20190820:212527.238 Still unable to connect...</div><div class="line">111990:20190820:212556.965 Still unable to connect...</div><div class="line">111991:20190820:212611.046 Unable to connect to the server [124.108.157.186]:10051 [cannot connect to [[124.108.157.186]:10051]: [110] Connection timed out]</div><div class="line">111992:20190820:212627.302 Still unable to connect...</div><div class="line">111991:20190820:212711.077 Unable to connect to the server [124.108.157.186]:10051 [cannot connect to [[124.108.157.186]:10051]: [110] Connection timed out]</div><div class="line">111992:20190820:212727.365 Still unable to connect...</div></pre></td></tr></table></figure></p>
<p>使用 nginx 代理时，可以发现 zabbix proxy 发送过来的 包很大，nginx 无法完整接收此数据包，才导致最后的失败。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">10.123.1.68 - - [20/Aug/2019:20:25:04 +0800] <span class="string">"ZBXD\x01\x95\xB4\x11\x00\x00\x00\x00\x00&#123;\x22request\x22:\x22history data\x22,\x22host\x22:\x22US_FF_zabbix-proxy\x22,\x22data\x22:[&#123;\x22host\x22:\x22us-ff-mysql08s2\x22,\x22key\x22:\x22icmppingloss[&#123;HOST.IP&#125;, 10]\x22,\x22clock\x22:1566295973,\x22ns\x22:143328430,\x22value\x22:\x220.000000\x22&#125;,&#123;\x22host\x22:\x22us-ff-mysql53s1\x22,\x22key\x22:\x22icmppingloss[&#123;HOST.IP&#125;, 10]\x22,\x22clock\x22:1566295973,\x22ns\x22:143328430,\x22value\x22:\x220.000000\x22&#125;,&#123;\x22host\x22:\x22us-ff-mysql32m\x22,\x22key\x22:\x22icmppingloss[&#123;HOST.IP&#125;, 10]\x22,\x22clock\x22:1566295973,\x22ns\x22:143328430,\x22value\x22:\x220.000000\x22&#125;,&#123;\x22host\x22:\x22mysql_bak03\x22,\x22key\x22:\x22icmppingloss[&#123;HOST.IP&#125;, 10]\x22,\x22clock\x22:1566295973,\x22ns\x22:143328430,\x22value\x22:\x220.000000\x22&#125;,&#123;\x22host\x22:\x22us-ff-backend02\x22,\x22key\x22:\x22icmppingloss[&#123;HOST.IP&#125;, 10]\x22,\x22clock\x22:1566295973,\x22ns\x22:143328430,\x22value\x22:\x220.000000\x22&#125;,&#123;\x22host\x22:\x22us-ff-backend34\x22,\x22key\x22:\x22net.if.in[bond0.1711]\x22,\x22clock\x22:1566295977,\x22ns\x22:131031460,\x22value\x22:\x2225911485220\x22&#125;,&#123;\x22host\x22:\x22us-ff-backend34\x22,\x22key\x22:\x22net.if.in[bond0]\x22,\x22clock\x22:1566295977,\x22ns\x22:131165849,\x22value\x22:\x2230945671117\x22&#125;,&#123;\x22host\x22:\x22us-ff-backend34\x22,\x22key\x22:\x22net.if.in[bond1.1712]\x22,\x22clock\x22:1566295977,\x22ns\x22:131254822,\x22value\x22:\x2219002118429\x22&#125;,&#123;\x22host\x22:\x22us-ff-backend34\x22,\x22key\x22:\x22net.if."</span> 400 173 <span class="string">"-"</span> <span class="string">"-"</span> <span class="string">"-"</span></div></pre></td></tr></table></figure></p>
<p>使用 haproxy 代理<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Aug 20 21:42:55 localhost haproxy[34707]: 10.123.1.68:40592 [20/Aug/2019:21:42:53.425] tcenterd tcenterd/tcenterd 1/74/1829 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:42:57 localhost haproxy[34707]: 10.123.1.68:40596 [20/Aug/2019:21:42:55.538] tcenterd tcenterd/tcenterd 1/78/1748 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:42:59 localhost haproxy[34707]: 10.123.1.68:40598 [20/Aug/2019:21:42:57.569] tcenterd tcenterd/tcenterd 1/74/1838 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:01 localhost haproxy[34707]: 10.123.1.68:40600 [20/Aug/2019:21:42:59.692] tcenterd tcenterd/tcenterd 1/74/1742 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:03 localhost haproxy[34707]: 10.123.1.68:40602 [20/Aug/2019:21:43:01.720] tcenterd tcenterd/tcenterd 1/74/1735 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:05 localhost haproxy[34707]: 10.123.1.68:40606 [20/Aug/2019:21:43:03.738] tcenterd tcenterd/tcenterd 1/74/1774 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:07 localhost haproxy[34707]: 10.123.1.68:40608 [20/Aug/2019:21:43:05.800] tcenterd tcenterd/tcenterd 1/73/1720 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:09 localhost haproxy[34707]: 10.123.1.68:40610 [20/Aug/2019:21:43:07.807] tcenterd tcenterd/tcenterd 1/75/1809 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:11 localhost haproxy[34707]: 10.123.1.68:40612 [20/Aug/2019:21:43:09.899] tcenterd tcenterd/tcenterd 1/77/1741 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:13 localhost haproxy[34707]: 10.123.1.68:40614 [20/Aug/2019:21:43:11.924] tcenterd tcenterd/tcenterd 1/82/1783 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:15 localhost haproxy[34707]: 10.123.1.68:40616 [20/Aug/2019:21:43:13.990] tcenterd tcenterd/tcenterd 1/75/1793 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:17 localhost haproxy[34707]: 10.123.1.68:40618 [20/Aug/2019:21:43:16.066] tcenterd tcenterd/tcenterd 1/77/1737 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:19 localhost haproxy[34707]: 10.123.1.68:40620 [20/Aug/2019:21:43:18.086] tcenterd tcenterd/tcenterd 1/74/1788 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:21 localhost haproxy[34707]: 10.123.1.68:40622 [20/Aug/2019:21:43:20.158] tcenterd tcenterd/tcenterd 1/74/1761 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:23 localhost haproxy[34707]: 10.123.1.68:40624 [20/Aug/2019:21:43:22.199] tcenterd tcenterd/tcenterd 1/77/1771 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:26 localhost haproxy[34707]: 10.123.1.68:40626 [20/Aug/2019:21:43:24.256] tcenterd tcenterd/tcenterd 1/74/1845 111 -- 0/0/0/0/0 0/0</div><div class="line">Aug 20 21:43:28 localhost haproxy[34707]: 10.123.1.68:40628 [20/Aug/2019:21:43:26.383] tcenterd tcenterd/tcenterd 1/77/1791 111 -- 0/0/0/0/0 0/0</div></pre></td></tr></table></figure></p>
<p>使用 haproxy 代理后，看到 zabbix proxy 已经可以正常发送数据到 zabbix-server。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">114075:20190820:212810.030 received configuration data from server at <span class="string">"10.123.0.2"</span>, datalen 9492921</div><div class="line">114075:20190820:212915.579 received configuration data from server at <span class="string">"10.123.0.2"</span>, datalen 9492921</div><div class="line">114075:20190820:213021.450 received configuration data from server at <span class="string">"10.123.0.2"</span>, datalen 9492921</div><div class="line">114075:20190820:213126.427 received configuration data from server at <span class="string">"10.123.0.2"</span>, datalen 9492921</div><div class="line">114077:20190820:213133.145 cannot send <span class="built_in">history</span> data to server at <span class="string">"10.123.0.2"</span>: ZBX_TCP_WRITE() failed: [32] Broken pipe</div><div class="line">114075:20190820:213234.122 received configuration data from server at <span class="string">"10.123.0.2"</span>, datalen 9492921</div><div class="line">114077:20190820:213245.932 cannot send <span class="built_in">history</span> data to server at <span class="string">"10.123.0.2"</span>: ZBX_TCP_WRITE() failed: [32] Broken pipe</div><div class="line">114075:20190820:213348.664 received configuration data from server at <span class="string">"10.123.0.2"</span>, datalen 9492921</div><div class="line">114075:20190820:213453.962 received configuration data from server at <span class="string">"10.123.0.2"</span>, datalen 9492921</div><div class="line">114075:20190820:213603.570 received configuration data from server at <span class="string">"10.123.0.2"</span>, datalen 9492921</div><div class="line">114075:20190820:213713.600 received configuration data from server at <span class="string">"10.123.0.2"</span>, datalen 9492921</div></pre></td></tr></table></figure></p>
<p>haproxy 配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/haproxy/haproxy.cfg</div><div class="line">global</div><div class="line">    <span class="built_in">log</span>         127.0.0.1 <span class="built_in">local</span>2</div><div class="line"> </div><div class="line">    chroot      /var/lib/haproxy</div><div class="line">    pidfile     /var/run/haproxy.pid</div><div class="line">    maxconn     400000</div><div class="line">    user        haproxy</div><div class="line">    group       haproxy</div><div class="line">    daemon</div><div class="line">    nbproc 30</div><div class="line">    <span class="comment"># turn on stats unix socket</span></div><div class="line">    stats socket /var/lib/haproxy/stats</div><div class="line"> </div><div class="line">defaults</div><div class="line">    mode                    http</div><div class="line">    <span class="built_in">log</span>                     global</div><div class="line">    option                  dontlognull</div><div class="line">    option http-server-close</div><div class="line">    option                  redispatch</div><div class="line">    retries                 3</div><div class="line">    timeout http-request    100s</div><div class="line">    timeout queue           10m</div><div class="line">    timeout connect         100s</div><div class="line">    timeout client          10m</div><div class="line">    timeout server          10m</div><div class="line">    timeout http-keep-alive 100s</div><div class="line">    timeout check           100s</div><div class="line">    maxconn                 300000</div><div class="line"> </div><div class="line">frontend us_to_tw_proxy</div><div class="line">    <span class="built_in">bind</span> *:10051</div><div class="line">    mode tcp</div><div class="line">    default_backend zabbix-server</div><div class="line">    maxconn 5000000</div><div class="line"> </div><div class="line">backend zabbix-server</div><div class="line">    mode tcp</div><div class="line">    server tcenterd 124.108.157.186:10051  maxconn 100</div><div class="line"> </div><div class="line">listen stats :1936</div><div class="line">    stats <span class="built_in">enable</span></div><div class="line">    stats uri /</div><div class="line">    stats realm Haproxy\ Statistics</div><div class="line">    stats auth admin:<span class="built_in">test</span>1</div></pre></td></tr></table></figure></p>
<p>zabbix proxy 需要配置静态路由改变 zabbix proxy 到 zabbix server 的网络链路，即通过 代理服务器转发流量。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/sbin/route add -host 124.108.157.186 gw 10.123.0.3</div></pre></td></tr></table></figure></p>
<p>然后zabbix proxy的 zabbix server 配置改为 代理服务器 IP 地址。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ grep -iv <span class="string">'^$'</span> zabbix_proxy_tw.conf | grep -iv <span class="string">'^#'</span></div><div class="line">Server=10.123.0.3</div></pre></td></tr></table></figure></p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2021/03/17/代理转zabbix">http://www.yfshare.vip/2021/03/17/代理转zabbix</a> proxy/</p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;现象：us地区 zabbix-proxy 在晚上高峰期时（21：00～24
    
    </summary>
    
      <category term="Monitor" scheme="http://www.yfshare.vip/categories/Monitor/"/>
    
    
      <category term="Grafana" scheme="http://www.yfshare.vip/tags/Grafana/"/>
    
      <category term="Zabbix" scheme="http://www.yfshare.vip/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Python 读取Mysql生成EXCEL（XLSX）</title>
    <link href="http://www.yfshare.vip/2020/10/16/Python-%E8%AF%BB%E5%8F%96Mysql%E7%94%9F%E6%88%90EXCEL%EF%BC%88XLSX%EF%BC%89/"/>
    <id>http://www.yfshare.vip/2020/10/16/Python-读取Mysql生成EXCEL（XLSX）/</id>
    <published>2020-10-16T05:17:50.000Z</published>
    <updated>2022-11-27T15:44:39.972Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>以前做报表从Mysql数据里面提取数据很简单，几条简单的SHELL脚本就可以实现该功能，因为是自己使用，所以对于格式无所谓，以前使用的都是<code>.csv</code>格式，因为其是以<code>逗号</code>区分的，方便脚本处理。这次不一样了，虽然这次接到需求也是从Mysql中导出数据，但是！！导出文件的格式必须是<code>.XLSX</code>这是微软EXCEL软件自有的格式，包含特殊的文件头，所以之前的方法失效了，失效了… 折腾了好久，也请教了别人，终于，终于解决了这个需求。<br><a id="more"></a><br>环境：<br>　　　Centos 7.2.1511<br>　　　Python 2.7.5 -&gt; 3.5</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># python -V</span></div><div class="line">Python 2.7.5</div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#安装easy_install命令</span></div><div class="line">[root@localhost ~]<span class="comment"># wget https://bootstrap.pypa.io/ez_setup.py -O - | python</span></div><div class="line"></div><div class="line"><span class="comment">#安装pip命令(python包管理软件)</span></div><div class="line">[root@localhost ~]<span class="comment"># wget https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c9</span></div><div class="line">[root@localhost ~]<span class="comment"># tar -zxf pip-9.0.1.tar.gz </span></div><div class="line">[root@localhost ~]<span class="comment"># cd pip-9.0.1</span></div><div class="line">[root@localhost pip-9.0.1]<span class="comment"># python setup.py install</span></div><div class="line"></div><div class="line"><span class="comment">#安装python module</span></div><div class="line">[root@localhost ~]<span class="comment"># python select3.py </span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"select3.py"</span>, line 3, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    from sqlalchemy import create_engine</div><div class="line">ImportError: No module named sqlalchemy</div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#安装sqlalchemy模块</span></div><div class="line">[root@localhost ~]<span class="comment"># pip install sqlalchemy</span></div><div class="line">Collecting pymysql</div><div class="line">  Downloading PyMySQL-0.7.11-py2.py3-none-any.whl (78kB)</div><div class="line">    100% |████████████████████████████████| 81kB 48kB/s </div><div class="line">Installing collected packages: pymysql</div><div class="line">Successfully installed pymysql-0.7.11</div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#重复执行python select3.py 安装缺失的模块</span></div><div class="line">[root@localhost ~]<span class="comment"># pip install pymysql</span></div><div class="line">[root@localhost ~]<span class="comment"># pip install pandas</span></div><div class="line"></div><div class="line"><span class="comment"># Python 2.7不支持中文，报错如下，需要升级到 Python ，测试 Python 3.5.4 支持</span></div><div class="line">[root@localhost ~]<span class="comment"># python select3.py </span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"select3.py"</span>, line 10, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    sql.encode(<span class="string">'gb18030'</span>)</div><div class="line">UnicodeDecodeError: <span class="string">'ascii'</span> codec can<span class="string">'t decode byte 0xe6 in position 20: ordinal not in range(128)</span></div><div class="line">[root@localhost ~]#</div></pre></td></tr></table></figure>
<p>升级 Python 2.7.5 至 Python 3.5<br><strong>不要动系统自带的Python，否则系统的某些功能都无法正常使用</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># wget https://www.python.org/ftp/python/3.5.4/Python-3.5.4.tgz</span></div><div class="line">[root@localhost ~]<span class="comment"># yum install openssl-devel -y</span></div><div class="line">[root@localhost ~]<span class="comment"># tar -zxf Python-3.5.4.tgz</span></div><div class="line">[root@localhost ~]<span class="comment"># mkdir -p /usr/local/Python-3.5.4</span></div><div class="line">[root@localhost ~]<span class="comment"># cd Python-3.5.4</span></div><div class="line">[root@localhost Python-3.5.4]<span class="comment"># ./configure --prefix=/usr/local/Python-3.5.4/</span></div><div class="line">[root@localhost Python-3.5.4]<span class="comment"># make &amp;&amp; make install</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/python3.5 -V</span></div><div class="line">Python 3.5.4</div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment"># 现在系统同时存在两个版本的 Python，因此脚本需要的模块需要重新安装，因为Python 3.5.2之后自带 pip3 和 setuptools，因此需要使用 pip3 安装所需要的模块</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/python3.5 select3.py </span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"select3.py"</span>, line 3, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    from sqlalchemy import create_engine</div><div class="line">ImportError: No module named <span class="string">'sqlalchemy'</span></div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#安装所需要的 Python 模块</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/pip3.5 install sqlalchemy</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/pip3.5 install pymysql</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/pip3.5 install pandas     #这个很慢</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/pip3.5 install openpyxl</span></div><div class="line"></div><div class="line">[root@localhost ~]<span class="comment"># cat /etc/profile.d/Python.sh </span></div><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line">Python3_5_home=<span class="string">'/usr/local/Python-3.5.4'</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;Python3_5_home&#125;</span>/bin:<span class="variable">$PATH</span></div><div class="line">[root@localhost ~]<span class="comment"># source /etc/profile.d/Python.sh</span></div><div class="line"></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/python3.5 select3.py</span></div><div class="line">[root@localhost ~]<span class="comment"># ll | grep output.xlsx </span></div><div class="line">-rw-r--r--   1 root root      4854 Oct 15 06:37 output.xlsx</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p><img src="http://note.youdao.com/yws/api/personal/file/7B8F09CFC0CF45BCAD07916AA8A1CAFB?method=download&amp;shareKey=974173e2da4dc8ec9df2e29c1973427e" alt="Py_mysql_to_excel">  </p>
<p>如果报这个错，好像是 <code>查询SQL</code> 时超时了，在同级目录下会生成 <code>__pycache__</code>文件夹，脚本换个目录（不要在含有<code>__pycache__</code>这个目录的目录中执行 py脚本），然后删掉其父目录，再执行 py 脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pandas/compat/__init__.py"</span>, line 47, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import __builtin__ as builtins</div><div class="line">ImportError: No module named <span class="string">'__builtin__'</span></div><div class="line"></div><div class="line">During handling of the above exception, another exception occurred:</div><div class="line"></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"select.py </span></div><div class="line"></div><div class="line">", line 4, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import pymysql</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pymysql/__init__.py"</span>, line 92, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    from . import connections as _orig_conn</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pymysql/connections.py </span></div><div class="line"></div><div class="line">", line 13, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import socket</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/socket.py </span></div><div class="line"></div><div class="line">", line 52, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import os, sys, io, selectors</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/selectors.py </span></div><div class="line"></div><div class="line">", line 11, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import select</div><div class="line">  File <span class="string">"/data/soros/job/report/jinrongban_data_back/test/select.py </span></div><div class="line"></div><div class="line">", line 5, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import pandas as pd</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pandas/__init__.py"</span>, line 23, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    from pandas.compat.numpy import *</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pandas/compat/__init__.py"</span>, line 60, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import http.client as httplib</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/http/client.py </span></div><div class="line"></div><div class="line">", line 739, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    class HTTPConnection:</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/http/client.py </span></div><div class="line"></div><div class="line">", line 749, <span class="keyword">in</span> HTTPConnection</div><div class="line">    def __init__(self, host, port=None, timeout=socket._GLOBAL_DEFAULT_TIMEOUT,</div><div class="line">AttributeError: module <span class="string">'socket'</span> has no attribute <span class="string">'_GLOBAL_DEFAULT_TIMEOUT'</span></div></pre></td></tr></table></figure></p>
<p>Python脚本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat select3.py</span></div><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment">#-*- coding: utf8 -*-</span></div><div class="line">from sqlalchemy import create_engine</div><div class="line">import pymysql</div><div class="line">import pandas as pd</div><div class="line">from pandas import DataFrame,Series</div><div class="line"></div><div class="line">engine=create_engine(<span class="string">'mysql+pymysql://username:password@192.168.1.1/database_name?charset=gbk,pool_timeout=3000'</span>)</div><div class="line">sql=<span class="string">"select count(*) as '总数' from database.table1;"</span></div><div class="line">sql.encode(<span class="string">'gb18030'</span>)</div><div class="line">df=pd.read_sql(sql,engine)</div><div class="line">writer = pd.ExcelWriter(<span class="string">'/root/output.xlsx'</span>)</div><div class="line">df.to_excel(writer,<span class="string">'Sheet1'</span>,index=False)</div><div class="line">writer.save()</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>附件：<br><a href="http://note.youdao.com/yws/api/personal/file/E1F6B7761791434088E5695A6FD9F129?method=download&amp;shareKey=91d60ea9e7ec086373e91948ff2c6038" target="_blank" rel="external">Python-3.5.4.tar.gz</a><br><a href="http://note.youdao.com/yws/api/personal/file/B4252F91B6C44921BDFB59666FBB099F?method=download&amp;shareKey=3217d852ff44cf5c33a44c442eacf32c" target="_blank" rel="external">select3.py</a><br><a href="http://note.youdao.com/yws/api/personal/file/A971448108714F66B09900242EAD747D?method=download&amp;shareKey=5a644f1f069d121d8b1f356013aeb84e" target="_blank" rel="external">numpy-1.13.3-cp35-cp35m-manylinux1_x86_64.whl</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2020/10/16/Python-读取Mysql生成EXCEL（XLSX）/">http://www.yfshare.vip/2020/10/16/Python-读取Mysql生成EXCEL（XLSX）/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前做报表从Mysql数据里面提取数据很简单，几条简单的SHELL脚本就可以实现该功能，因为是自己使用，所以对于格式无所谓，以前使用的都是&lt;code&gt;.csv&lt;/code&gt;格式，因为其是以&lt;code&gt;逗号&lt;/code&gt;区分的，方便脚本处理。这次不一样了，虽然这次接到需求也是从Mysql中导出数据，但是！！导出文件的格式必须是&lt;code&gt;.XLSX&lt;/code&gt;这是微软EXCEL软件自有的格式，包含特殊的文件头，所以之前的方法失效了，失效了… 折腾了好久，也请教了别人，终于，终于解决了这个需求。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.yfshare.vip/categories/Python/"/>
    
    
      <category term="Mysql" scheme="http://www.yfshare.vip/tags/Mysql/"/>
    
      <category term="Python" scheme="http://www.yfshare.vip/tags/Python/"/>
    
      <category term="Excel" scheme="http://www.yfshare.vip/tags/Excel/"/>
    
      <category term="Xlsx" scheme="http://www.yfshare.vip/tags/Xlsx/"/>
    
  </entry>
  
  <entry>
    <title>k8s集群水平扩展(HPA)</title>
    <link href="http://www.yfshare.vip/2019/01/28/k8s%E9%9B%86%E7%BE%A4%E6%B0%B4%E5%B9%B3%E6%89%A9%E5%B1%95-HPA/"/>
    <id>http://www.yfshare.vip/2019/01/28/k8s集群水平扩展-HPA/</id>
    <published>2019-01-28T14:51:38.000Z</published>
    <updated>2019-01-28T14:59:28.049Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Horizontal Pod Autoscaling，简称HPA，是Kubernetes中实现POD水平自动伸缩的功能。<br><a id="more"></a></p>
<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>K8S集群可以通过Replication Controller的scale机制完成服务的扩容或缩容，实现具有伸缩性的服务。<br>K8S自动伸缩分为：  </p>
<ul>
<li>sacle手动伸缩。见<a href="http://www.yfshare.vip/2018/05/28/k8s%E6%BB%9A%E5%8A%A8%E5%8D%87%E7%BA%A7-RollingUpdate/">k8s滚动升级(RollingUpdate)</a>  </li>
<li>autoscale自动伸缩，见<a href="http://www.yfshare.vip/2019/01/28/k8s%E9%9B%86%E7%BE%A4%E6%B0%B4%E5%B9%B3%E6%89%A9%E5%B1%95-HPA/#autoscaling-v2beta2">HPA</a>。  </li>
</ul>
<p>自动扩展主要分为两种：  </p>
<ul>
<li>水平扩展(scale out)，针对于实例数目的增减。  </li>
<li>垂直扩展(scal up)，即单个实例可以使用的资源的增减, 比如增加cpu和增大内存。  </li>
</ul>
<p>HPA属于前者。它可以根据CPU使用率或应用自定义metrics自动扩展Pod数量(支持 replication controller、deployment 和 replica set)。<br><img src="https://note.youdao.com/yws/api/personal/file/F521C66C09BD4EA0A0D7B1C02AF49CE9?method=download&amp;shareKey=fb8d078ed30b70f326f6d6e37c1b3cc3" alt="HPA架构">  </p>
<p>获取metrics的两种方式：  </p>
<ul>
<li>Heapster：heapster提供metrics服务，但是在v1(autoscaling/v1)版本中仅支持以CPU作为扩展度量指标。而其他比如：内存，网络流量，qps等目前处于beta阶段(autoscaling/v2beta1)。  </li>
<li>Cousom：同样处于beta阶段(autoscaling/v2beta1)，但是涉及到自定义的REST API的开发，复杂度会大一些，并且当需要从自定义的监控中获取数据时，只能设置绝对值，无法设置使用率。  </li>
</ul>
<h4 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h4><ul>
<li>创建HPA资源，设定目标CPU使用率限额，以及最大/最小实例数，一定要设置Pod的资源限制参数: <code>request</code>，否则HPA不会工作。  </li>
<li>控制管理器每隔30s(在<code>kube-controller-manager.service</code>中可以通过<code>–horizontal-pod-autoscaler-sync-period</code>修改)查询metrics的资源使用情况。  </li>
<li>然后与创建时设定的值和指标做对比(平均值之和/限额)，求出目标调整的实例个数。  </li>
<li>目标调整的实例数不能超过第一条中设定的最大/最小实例数。如果没有超过，则扩容；超过，则扩容至最大的实例个数。  </li>
<li>重复第2-4步。  </li>
</ul>
<h4 id="自动伸缩算法"><a href="#自动伸缩算法" class="headerlink" title="自动伸缩算法"></a>自动伸缩算法</h4><p>HPA Controller会通过调整副本数量使得CPU使用率尽量向期望值靠近，而且不是完全相等。另官方考虑到自动扩展的决策可能需要一段时间才会生效：例如当pod所需要的CPU负荷过大，从而在创建一个新pod的过程中，系统的CPU使用量可能会同样在有一个攀升的过程。所以在每一次作出决策后的一段时间内，将不再进行扩展决策。对于扩容而言，这个时间段为3分钟，缩容为5分钟(可以通过<code>--horizontal-pod-autoscaler-downscale-delay</code>，<code>--horizontal-pod-autoscaler-upscale-delay</code>进行调整)。  </p>
<ul>
<li>HPA Controller中有一个tolerance（容忍力）的概念，它允许一定范围内的使用量的不稳定，现在默认为0.1，这也是出于维护系统稳定性的考虑。例如设定HPA调度策略为cpu使用率高于50%触发扩容，那么只有当使用率大于55%或者小于45%才会触发伸缩活动，HPA会尽力把Pod的使用率控制在这个范围之间。  </li>
<li>具体的每次扩容或者缩容的多少Pod的算法为：Ceil(前采集到的使用率 / 用户自定义的使用率) * Pod数量)。  </li>
<li>每次最大扩容pod数量不会超过当前副本数量的2倍。  </li>
</ul>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><table>
<thead>
<tr>
<th>角色</th>
<th>IP</th>
<th>操作系统版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>master</td>
<td>192.168.1.201</td>
<td>centos 7.4</td>
</tr>
<tr>
<td>etcd1</td>
<td>192.168.1.201</td>
<td>centos 7.4</td>
</tr>
<tr>
<td>etcd2</td>
<td>192.168.1.202</td>
<td>centos 7.4</td>
</tr>
<tr>
<td>etcd3</td>
<td>192.168.1.203</td>
<td>centos 7.4</td>
</tr>
<tr>
<td>node1</td>
<td>192.168.1.204</td>
<td>centos 7.4</td>
</tr>
<tr>
<td>node2</td>
<td>192.168.1.205</td>
<td>centos 7.4</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>环境</th>
<th>软件版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>kubectl server</td>
<td>v1.9.2</td>
</tr>
<tr>
<td>kubectl client</td>
<td>v1.9.2</td>
</tr>
<tr>
<td>Go</td>
<td>go1.9.2</td>
</tr>
<tr>
<td>etcdctl</td>
<td>3.2.15</td>
</tr>
<tr>
<td>etcd</td>
<td>3.2.15</td>
</tr>
<tr>
<td>flanneld</td>
<td>v0.10.0</td>
</tr>
<tr>
<td>cfssl</td>
<td>1.2.0</td>
</tr>
<tr>
<td>docker</td>
<td>18.09.1-beta1</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl cluster-info</span></div><div class="line">Kubernetes master is running at https://192.168.1.201:6443</div><div class="line">Heapster is running at https://192.168.1.201:6443/api/v1/namespaces/kube-system/services/heapster/proxy</div><div class="line">monitoring-grafana is running at https://192.168.1.201:6443/api/v1/namespaces/kube-system/services/monitoring-grafana/proxy</div><div class="line">monitoring-influxdb is running at https://192.168.1.201:6443/api/v1/namespaces/kube-system/services/monitoring-influxdb/proxy</div><div class="line">To further debug and diagnose cluster problems, use <span class="string">'kubectl cluster-info dump'</span>.</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment">#  kubectl -s http://192.168.1.201:8080 get componentstatuses </span></div><div class="line">NAME                 STATUS    MESSAGE              ERROR</div><div class="line">controller-manager   Healthy   ok                   </div><div class="line">etcd-2               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">etcd-1               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">scheduler            Healthy   ok                   </div><div class="line">etcd-0               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get nodes</span></div><div class="line">NAME            STATUS    ROLES     AGE       VERSION</div><div class="line">192.168.1.204   Ready     &lt;none&gt;    21h       v1.9.2</div><div class="line">192.168.1.205   Ready     &lt;none&gt;    21h       v1.9.2</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="部署HPA"><a href="#部署HPA" class="headerlink" title="部署HPA"></a>部署HPA</h4><p>先准备一套K8S集群环境，<a href="http://www.yfshare.vip/2018/02/23/%E9%83%A8%E7%BD%B2TLS-k8s/">环境部署</a>略。  </p>
<h5 id="创建Deployment-POD应用nginx"><a href="#创建Deployment-POD应用nginx" class="headerlink" title="创建Deployment POD应用nginx"></a>创建Deployment POD应用nginx</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># cat nginx.yml </span></div><div class="line">apiVersion: extensions/v1beta1</div><div class="line">kind: Deployment</div><div class="line">metadata:</div><div class="line">  name: nginx</div><div class="line">spec:</div><div class="line">  replicas: 1</div><div class="line">  template:</div><div class="line">    metadata:</div><div class="line">      labels:</div><div class="line">        app: nginx-hpa</div><div class="line">    spec:</div><div class="line">      containers:</div><div class="line">      - name: nginx</div><div class="line">        image: nginx:latest</div><div class="line">        ports:</div><div class="line">        - containerPort: 80</div><div class="line">          name: http</div><div class="line">          protocol: TCP</div><div class="line">        resources:</div><div class="line">          requests:</div><div class="line">            cpu: 0.01</div><div class="line">            memory: 25Mi</div><div class="line">          limits:</div><div class="line">            cpu: 0.05</div><div class="line">            memory: 60Mi</div><div class="line">---</div><div class="line">apiVersion: v1</div><div class="line">kind: Service</div><div class="line">metadata:</div><div class="line">  name: nginx</div><div class="line">  labels:</div><div class="line">    app: nginx-hpa</div><div class="line">spec:</div><div class="line">  selector:</div><div class="line">    app: nginx-hpa</div><div class="line">  <span class="built_in">type</span>: NodePort</div><div class="line">  ports:</div><div class="line">  - name: http</div><div class="line">    protocol: TCP</div><div class="line">    port: 80</div><div class="line">    targetPort: 80</div><div class="line">    nodePort: 30080</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl apply -f nginx.yml</span></div><div class="line">[root@master ~]<span class="comment"># kubectl get pod -o wide</span></div><div class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">nginx-5dcf548595-bk9cr   1/1       Running   1          14h       172.30.94.2   192.168.1.205</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h5 id="创建nginx应用的HPA"><a href="#创建nginx应用的HPA" class="headerlink" title="创建nginx应用的HPA"></a>创建nginx应用的HPA</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># cat nginx-hpa-cpu.yml </span></div><div class="line">apiVersion: autoscaling/v1</div><div class="line">kind: HorizontalPodAutoscaler</div><div class="line">metadata:</div><div class="line">  name: nginx-hpa</div><div class="line">spec:</div><div class="line">  scaleTargetRef:</div><div class="line">    apiVersion: extensions/v1beta1</div><div class="line">    kind: Deployment</div><div class="line">    name: nginx</div><div class="line">  minReplicas: 1</div><div class="line">  maxReplicas: 5</div><div class="line">  targetCPUUtilizationPercentage: 70</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl apply -f nginx-hpa-cpu.yml</span></div><div class="line">[root@master ~]<span class="comment"># kubectl get hpa</span></div><div class="line">NAME        REFERENCE          TARGETS    MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   &lt;unknown&gt; / 70%   1         5         1          14h</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h6 id="Q1"><a href="#Q1" class="headerlink" title="Q1"></a>Q1</h6><p>这时发现nginx-hpa获取不到当前的CPU情况（TARGETS）。等待几分钟后执行<code>kubectl describe hpa</code>发现HPA报错信息如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl describe hpa</span></div><div class="line">Name:                                                  nginx-hpa</div><div class="line">Namespace:                                             default</div><div class="line">Labels:                                                &lt;none&gt;</div><div class="line">Annotations:                                           kubectl.kubernetes.io/last-applied-configuration=&#123;<span class="string">"apiVersion"</span>:<span class="string">"au</span></div><div class="line">toscaling/v1",<span class="string">"kind"</span>:<span class="string">"HorizontalPodAutoscaler"</span>,<span class="string">"metadata"</span>:&#123;<span class="string">"annotations"</span>:&#123;&#125;,<span class="string">"name"</span>:<span class="string">"nginx-hpa"</span>,<span class="string">"namespace"</span>:<span class="string">"default"</span>&#125;,<span class="string">"spec"</span>:&#123;<span class="string">"maxReplic...</span></div><div class="line">CreationTimestamp:                                     Sat, 26 Jan 2019 22:23:08 +0800</div><div class="line">Reference:                                             Deployment/nginx</div><div class="line">Metrics:                                               ( current / target )</div><div class="line">  resource cpu on pods  (as a percentage of request):  &lt;unknown&gt; / 70%</div><div class="line">Min replicas:                                          1</div><div class="line">Max replicas:                                          5</div><div class="line">Conditions:</div><div class="line">  Type           Status  Reason                   Message</div><div class="line">  ----           ------  ------                   -------</div><div class="line">  AbleToScale    True    SucceededGetScale        the HPA controller was able to get the target's current scale</div><div class="line">  ScalingActive  False   FailedGetResourceMetric  the HPA was unable to compute the replica count: unable to get metrics for resource cpu: unable to fetch metrics from API: the server could not find the requested resource (get pods.metrics.k8s.io)</div><div class="line">Events:</div><div class="line">  Type     Reason                        Age               From                       Message</div><div class="line">  ----     ------                        ----              ----                       -------</div><div class="line">  Warning  FailedComputeMetricsReplicas  1m (x12 over 3m)  horizontal-pod-autoscaler  failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from API: the server could not find the requested resource (get pods.metrics.k8s.io)</div><div class="line">  Warning  FailedGetResourceMetric       1m (x13 over 3m) horizontal-pod-autoscaler  unable to get metrics for resource cpu: unable to fetch metrics from API: the server could not find the requested resource (get pods.metrics.k8s.io)</div><div class="line">[root@master ~]#</div></pre></td></tr></table></figure></p>
<p>大概意思是HPA无法通过API获取到metrics值。<br>解决办法：<br>在<code>/etc/systemd/system/kube-controller-manager.service</code>配置文件中新增<code>--horizontal-pod-autoscaler-use-rest-clients=false</code>配置参数。然后重启kube-controller-manager服务即可。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">kube-controller-manager<span class="string">'s parameter --horizontal-pod-autoscaler-use-rest-clients in k8s 1.9.0 default value is true , while in k8s 1.8.x is false</span></div><div class="line">change it to false and it works.</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># cat /etc/systemd/system/kube-controller-manager.service </span></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes Controller Manager</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line"></div><div class="line">[Service]</div><div class="line">ExecStart=/usr/<span class="built_in">local</span>/k8s/bin/kube-controller-manager \</div><div class="line">  --address=127.0.0.1 \</div><div class="line">  --master=http://192.168.1.201:8080 \</div><div class="line">  --allocate-node-cidrs=<span class="literal">true</span> \</div><div class="line">  --service-cluster-ip-range=172.16.0.0/16 \</div><div class="line">  --cluster-cidr=172.30.0.0/16 \</div><div class="line">  --cluster-name=kubernetes \</div><div class="line">  --cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem \</div><div class="line">  --cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem \</div><div class="line">  --service-account-private-key-file=/etc/kubernetes/ssl/ca-key.pem \</div><div class="line">  --root-ca-file=/etc/kubernetes/ssl/ca.pem \</div><div class="line">  --leader-elect=<span class="literal">true</span> \</div><div class="line">  --horizontal-pod-autoscaler-use-rest-clients=<span class="literal">false</span> \</div><div class="line">  --v=2</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># systemctl daemon-reload</span></div><div class="line">[root@master ~]<span class="comment"># systemctl restart kube-controller-manager</span></div></pre></td></tr></table></figure>
<h6 id="Q2"><a href="#Q2" class="headerlink" title="Q2"></a>Q2</h6><p>配置并重启完成kube-controller-manager服务后，执行<code>kubectl delete -f nginx-hpa-cpu.yml</code>和<code>kubectl apply -f nginx-hpa-cpu.yml</code>重新创建服务后，发现出现新的错误，信息如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl describe hpa</span></div><div class="line">Name:                                                  nginx-hpa</div><div class="line">Namespace:                                             default</div><div class="line">Labels:                                                &lt;none&gt;</div><div class="line">Annotations:                                           kubectl.kubernetes.io/last-applied-configuration=&#123;<span class="string">"apiVersion"</span>:<span class="string">"au</span></div><div class="line">scaling/v1",<span class="string">"kind"</span>:<span class="string">"HorizontalPodAutoscaler"</span>,<span class="string">"metadata"</span>:&#123;<span class="string">"annotations"</span>:&#123;&#125;,<span class="string">"name"</span>:<span class="string">"nginx-hpa"</span>,<span class="string">"namespace"</span>:<span class="string">"default"</span>&#125;,<span class="string">"spec&#123;"</span>maxRepl...</div><div class="line">CreationTimestamp:                                     Sun, 27 Jan 2019 00:18:02 +0800</div><div class="line">Reference:                                             Deployment/nginx</div><div class="line">Metrics:                                               ( current / target )</div><div class="line">  resource cpu on pods  (as a percentage of request):  &lt;unknown&gt; / 70%</div><div class="line">M<span class="keyword">in</span> replicas:                                          1</div><div class="line">Max replicas:                                          5</div><div class="line">Conditions:</div><div class="line">  Type           Status  Reason                   Message</div><div class="line">  ----           ------  ------                   -------</div><div class="line">  AbleToScale    True    SucceededGetScale        the HPA controller was able to get the target<span class="string">'s current scale</span></div><div class="line">  ScalingActive  False   FailedGetResourceMetric  the HPA was unable to compute the replica count: unable to get metrics r resource cpu: failed to get pod resource metrics: an error on the server ("Error: 'dial tcp 172.30.9.4:8082: getsockoptconnection timed out<span class="string">'\nTrying to reach: '</span>http://172.30.9.4:8082/apis/metrics/v1alpha1/namespaces/default/pods?labelSelect=app%3Dnginx-hpa<span class="string">'") has prevented the request from succeeding (get services http:heapster:)</span></div><div class="line">Events:</div><div class="line">  Type     Reason                        Age               From                       Message</div><div class="line">  ----     ------                        ----              ----                       -------</div><div class="line">  Warning  FailedUpdateStatus            2m                horizontal-pod-autoscaler  Operation cannot be fulfilled on hozontalpodautoscalers.autoscaling "nginx-hpa": the object has been modified; please apply your changes to the latest versi and try again</div><div class="line">  Warning  FailedGetResourceMetric       24s (x3 over 4m)  horizontal-pod-autoscaler  unable to get metrics for resource u: failed to get pod resource metrics: an error on the server ("Error: 'dial tcp 172.30.9.4:8082: getsockopt: connection med out<span class="string">'\nTrying to reach: '</span>http://172.30.9.4:8082/apis/metrics/v1alpha1/namespaces/default/pods?labelSelector=app%3Dnginhpa<span class="string">'") has prevented the request from succeeding (get services http:heapster:)</span></div><div class="line">  Warning  FailedComputeMetricsReplicas  24s (x3 over 4m)  horizontal-pod-autoscaler  failed to get cpu utilization: unab to get metrics for resource cpu: failed to get pod resource metrics: an error on the server ("Error: 'dial tcp 172.30.9.4:8082: getsockopt: connection timed out<span class="string">'\nTrying to reach: '</span>http://172.30.9.4:8082/apis/metrics/v1alpha1/namespaces/defaulpods?labelSelector=app%3Dnginx-hpa<span class="string">'") has prevented the request from succeeding (get services http:heapster:)</span></div><div class="line">[root@master ~]#</div></pre></td></tr></table></figure></p>
<p>意思是HPA无法连接heapster服务。于是检查heapster服务是否异常。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get pod -o wide -n kube-system</span></div><div class="line">NAME                                   READY     STATUS    RESTARTS   AGE         IP           NODE</div><div class="line">heapster-6d5c495969-2rgcr              1/1       Running   2          20h         172.30.9.4   192.168.1.204</div><div class="line">kubernetes-dashboard-cbbf9945c-bkvbk   1/1       Running   2          20h         172.30.9.3   192.168.1.204</div><div class="line">monitoring-grafana-67d68bf9c6-zv928    1/1       Running   2          20h         172.30.9.2   192.168.1.204</div><div class="line">monitoring-influxdb-7c4c46745f-kbxgb   1/1       Running   0          &lt;invalid&gt;   172.30.9.5   192.168.1.204</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>访问kube-dashboard发现POD是可以通过heapster获取到CPU内存的信息的。如下，说明heapster工作正常。<br><img src="https://note.youdao.com/yws/api/personal/file/D33884AB9908421C9276A7C46836CF58?method=download&amp;shareKey=24be8fb4d86c0390d173cac851934a4c" alt="kube-dashboard"><br>于是到node节点手动curl访问连接异常的URL。经测试在node1节点上访问正常。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># curl 'http://172.30.9.4:8082/apis/metrics/v1alpha1/namespaces/default/pods?labelSelector=app%3Dnginx-hpa'</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"metadata"</span>: &#123;&#125;,</div><div class="line">  <span class="string">"items"</span>: [</div><div class="line">   &#123;</div><div class="line">    <span class="string">"metadata"</span>: &#123;</div><div class="line">     <span class="string">"name"</span>: <span class="string">"nginx-5dcf548595-bk9cr"</span>,</div><div class="line">     <span class="string">"namespace"</span>: <span class="string">"default"</span>,</div><div class="line">     <span class="string">"creationTimestamp"</span>: <span class="string">"2019-01-27T07:29:43Z"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"timestamp"</span>: <span class="string">"2019-01-27T07:29:00Z"</span>,</div><div class="line">    <span class="string">"window"</span>: <span class="string">"1m0s"</span>,</div><div class="line">    <span class="string">"containers"</span>: [</div><div class="line">     &#123;</div><div class="line">      <span class="string">"name"</span>: <span class="string">"nginx"</span>,</div><div class="line">      <span class="string">"usage"</span>: &#123;</div><div class="line">       <span class="string">"cpu"</span>: <span class="string">"0"</span>,</div><div class="line">       <span class="string">"memory"</span>: <span class="string">"2820Ki"</span></div><div class="line">      &#125;</div><div class="line">     &#125;</div><div class="line">    ]</div><div class="line">   &#125;</div><div class="line">  ]</div><div class="line"> &#125;</div><div class="line"> [root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>于是到kube-master上访问测试，发现HPA无法访问到heapster。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># curl 'http://172.30.9.4:8082/apis/metrics/v1alpha1/namespaces/default/pods?labelSelector=app%3Dnginx-hpa'</span></div><div class="line">curl: (7) Failed connect to 172.30.9.4:8082; Connection timed out</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>接下来我们来测试下网络情况，发现kube-master无法Ping通heapster的POD地址。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># ping 172.30.9.4</span></div><div class="line">PING 172.30.9.4 (172.30.9.4) 56(84) bytes of data.</div><div class="line">^C</div><div class="line">--- 172.30.9.4 ping statistics ---</div><div class="line">2 packets transmitted, 0 received, 100% packet loss, time 1002ms</div><div class="line"></div><div class="line">[root@master ~]<span class="comment"># telnet 172.30.9.4 8082</span></div><div class="line">Trying 172.30.9.4...</div><div class="line">telnet: connect to address 172.30.9.4: Connection timed out</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>测试发现是网络不通导致的。解决办法是在kube-master上安装flannel网络。<br>如果flannel网络的IP地址丢失，重启flannel网卡<code>systemctl restart flanneld</code>即可解决。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># ip a</span></div><div class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1</div><div class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</div><div class="line">    inet 127.0.0.1/8 scope host lo</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">    inet6 ::1/128 scope host </div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</div><div class="line">    link/ether 00:0c:29:48:f6:1d brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet 192.168.1.201/24 brd 192.168.1.255 scope global ens33</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">    inet6 fe80::22d8:9dda:6705:ec09/64 scope link </div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">3: flannel.1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UNKNOWN </div><div class="line">    link/ether 6e:05:c0:9c:34:3f brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet 172.30.13.0/32 scope global flannel.1</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">    inet6 fe80::6c05:c0ff:fe9c:343f/64 scope link </div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>再测试下kube-master到heapster POD的网络情况：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># ping 172.30.9.4 -c 4</span></div><div class="line">PING 172.30.9.4 (172.30.9.4) 56(84) bytes of data.</div><div class="line">64 bytes from 172.30.9.4: icmp_seq=1 ttl=63 time=2.15 ms</div><div class="line">64 bytes from 172.30.9.4: icmp_seq=2 ttl=63 time=1.27 ms</div><div class="line">64 bytes from 172.30.9.4: icmp_seq=3 ttl=63 time=1.30 ms</div><div class="line">64 bytes from 172.30.9.4: icmp_seq=4 ttl=63 time=1.66 ms</div><div class="line"></div><div class="line">--- 172.30.9.4 ping statistics ---</div><div class="line">4 packets transmitted, 4 received, 0% packet loss, time 3003ms</div><div class="line">rtt min/avg/max/mdev = 1.277/1.599/2.150/0.354 ms</div><div class="line">[root@master ~]<span class="comment"># telnet 172.30.9.4 8082</span></div><div class="line">Trying 172.30.9.4...</div><div class="line">telnet: connect to address 172.30.9.4: Connection refused</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>重新导入nginx-hpa-cpu.yml文件，然后等待几分钟…<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># kubectl delete -f nginx-hpa-cpu.yml </span></div><div class="line">horizontalpodautoscaler <span class="string">"nginx-hpa"</span> deleted</div><div class="line">[root@localhost ~]<span class="comment"># </span></div><div class="line">[root@localhost ~]<span class="comment"># kubectl apply -f nginx-hpa-cpu.yml </span></div><div class="line">horizontalpodautoscaler <span class="string">"nginx-hpa"</span> created</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>OK，HPA连接heapster成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># kubectl get hpa</span></div><div class="line">NAME        REFERENCE          TARGETS    MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   0% / 70%   1         5         1          39s</div><div class="line">[root@localhost ~]<span class="comment"># </span></div><div class="line">[root@localhost ~]<span class="comment"># kubectl describe hpa</span></div><div class="line">Name:                                                  nginx-hpa</div><div class="line">Namespace:                                             default</div><div class="line">Labels:                                                &lt;none&gt;</div><div class="line">Annotations:                                           kubectl.kubernetes.io/last-applied-configuration=&#123;<span class="string">"apiVersion"</span>:<span class="string">"au</span></div><div class="line">toscaling/v1",<span class="string">"kind"</span>:<span class="string">"HorizontalPodAutoscaler"</span>,<span class="string">"metadata"</span>:&#123;<span class="string">"annotations"</span>:&#123;&#125;,<span class="string">"name"</span>:<span class="string">"nginx-hpa"</span>,<span class="string">"namespace"</span>:<span class="string">"default"</span>&#125;,<span class="string">"spec"</span>:&#123;<span class="string">"maxRepl...</span></div><div class="line">CreationTimestamp:                                     Sun, 27 Jan 2019 01:04:25 +0800</div><div class="line">Reference:                                             Deployment/nginx</div><div class="line">Metrics:                                               ( current / target )</div><div class="line">  resource cpu on pods  (as a percentage of request):  0% (0) / 70%</div><div class="line">Min replicas:                                          1</div><div class="line">Max replicas:                                          5</div><div class="line">Conditions:</div><div class="line">  Type            Status  Reason            Message</div><div class="line">  ----            ------  ------            -------</div><div class="line">  AbleToScale     True    ReadyForNewScale  the last scale time was sufficiently old as to warrant a new scale</div><div class="line">  ScalingActive   True    ValidMetricFound  the HPA was able to succesfully calculate a replica count from cpu resource utilization (percentage of request)</div><div class="line">  ScalingLimited  True    TooFewReplicas    the desired replica count is increasing faster than the maximum scale rate</div><div class="line">Events:           &lt;none&gt;</div><div class="line">[root@localhost ~]#</div></pre></td></tr></table></figure></p>
<h4 id="HPA测试"><a href="#HPA测试" class="headerlink" title="HPA测试"></a>HPA测试</h4><p>截至目前，HPA支持的API版本有三个。分别是<code>autoscaling/v1</code>，<code>autoscaling/v2beta1</code>，<code>autoscaling/v2beta2</code>。其中<code>autoscaling/v1</code>只支持CPU一种伸缩指标；在<code>autoscaling/v2beta1</code>中增加支持custom metrics；在<code>autoscaling/v2beta2</code>中增加支持external metrics。<br>详细说明参考：  </p>
<ul>
<li><a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/" target="_blank" rel="external">官方接口文档</a>  </li>
<li><a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/#appendix-horizontal-pod-autoscaler-status-conditions" target="_blank" rel="external">autoscaling/v2beta2示例</a>  </li>
<li><a href="https://yq.aliyun.com/articles/672398?spm=a2c4e.11153940.blogcont673889.15.4a0226a9rLnJ2p" target="_blank" rel="external">Kubernetes 弹性伸缩全场景解析</a>  </li>
</ul>
<p>官方说明，在k8s 1.11版本，HPA将不再从heapster上获取指标。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">The HorizontalPodAutoscaler normally fetches metrics from a series of aggregated APIs (metrics.k8s.io, custom.metrics.k8s.io, and external.metrics.k8s.io). The metrics.k8s.io API is usually provided by metrics-server, <span class="built_in">which</span> needs to be launched separately. See metrics-server <span class="keyword">for</span> instructions. The HorizontalPodAutoscaler can also fetch metrics directly from Heapster.</div><div class="line"></div><div class="line">Note:</div><div class="line">FEATURE STATE: Kubernetes 1.11 deprecated</div><div class="line">Fetching metrics from Heapster is deprecated as of Kubernetes 1.11.</div></pre></td></tr></table></figure></p>
<h5 id="autoscaling-v1"><a href="#autoscaling-v1" class="headerlink" title="autoscaling/v1"></a>autoscaling/v1</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># cat nginx-hpa-cpu.yml </span></div><div class="line">apiVersion: autoscaling/v1</div><div class="line">kind: HorizontalPodAutoscaler</div><div class="line">metadata:</div><div class="line">  name: nginx-hpa</div><div class="line">spec:</div><div class="line">  scaleTargetRef:</div><div class="line">    apiVersion: extensions/v1beta1</div><div class="line">    kind: Deployment</div><div class="line">    name: nginx</div><div class="line">  minReplicas: 1</div><div class="line">  maxReplicas: 5</div><div class="line">  targetCPUUtilizationPercentage: 70</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>这里只针对CPU的HPA 压力测试。<br>压测命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># cat test.sh </span></div><div class="line"><span class="keyword">while</span> <span class="literal">true</span></div><div class="line"><span class="keyword">do</span></div><div class="line">	wget -q -O- http://192.168.1.204:30080</div><div class="line"><span class="keyword">done</span></div><div class="line">[root@node1 ~]<span class="comment"># sh test.sh</span></div></pre></td></tr></table></figure></p>
<p>观察HPA当前负载和POD的情况<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get hpa</span></div><div class="line">NAME        REFERENCE          TARGETS    MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   0% / 70%   1         5         1          14h</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get hpa</span></div><div class="line">NAME        REFERENCE          TARGETS     MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   14% / 70%   1         5         1          14h</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>当负载飙升时，HPA会按照定义的规则开始创建新的POD副本(定义POD的CPU阈值为70%)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get hpa</span></div><div class="line">NAME        REFERENCE          TARGETS      MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   180% / 70%   1         5         3          14h</div><div class="line">[root@master ~]<span class="comment">#</span></div><div class="line">[root@master ~]<span class="comment"># kubectl get pod -o wide</span></div><div class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">nginx-5dcf548595-bk9cr   1/1       Running   1          15h       172.30.94.2   192.168.1.205</div><div class="line">nginx-5dcf548595-pdndb   1/1       Running   0          1m        172.30.94.4   192.168.1.205</div><div class="line">nginx-5dcf548595-z9d6h   1/1       Running   0          1m        172.30.94.3   192.168.1.205</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>继续压测，会发现POD副本数量继续增加（REPLICAS从3到5）。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get hpa</span></div><div class="line">NAME        REFERENCE          TARGETS      MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   139% / 70%   1         5         5          14h</div><div class="line">[root@master ~]<span class="comment">#</span></div><div class="line">[root@master ~]<span class="comment"># kubectl get pod -o wide</span></div><div class="line">NAME                     READY     STATUS              RESTARTS   AGE       IP            NODE</div><div class="line">nginx-5dcf548595-9gmqf   0/1       ContainerCreating   0          39s       &lt;none&gt;        192.168.1.204</div><div class="line">nginx-5dcf548595-bk9cr   1/1       Running             1          15h       172.30.94.2   192.168.1.205</div><div class="line">nginx-5dcf548595-pdndb   1/1       Running             0          10m       172.30.94.4   192.168.1.205</div><div class="line">nginx-5dcf548595-r7n4b   1/1       Running             0          39s       172.30.94.5   192.168.1.205</div><div class="line">nginx-5dcf548595-z9d6h   1/1       Running             0          10m       172.30.94.3   192.168.1.205</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>当REPLICAS达到定义的上限时，即使当前CPU的压力仍然很大，REPLICAS也不会再增加了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get hpa</span></div><div class="line">NAME        REFERENCE          TARGETS     MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   112% / 70%   1         5         5          14h</div><div class="line">[root@master ~]<span class="comment">#</span></div><div class="line">[root@master ~]<span class="comment"># kubectl get pod -o wide</span></div><div class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">nginx-5dcf548595-9gmqf   1/1       Running   0          2m        172.30.9.6    192.168.1.204</div><div class="line">nginx-5dcf548595-bk9cr   1/1       Running   1          15h       172.30.94.2   192.168.1.205</div><div class="line">nginx-5dcf548595-pdndb   1/1       Running   0          12m       172.30.94.4   192.168.1.205</div><div class="line">nginx-5dcf548595-r7n4b   1/1       Running   0          2m        172.30.94.5   192.168.1.205</div><div class="line">nginx-5dcf548595-z9d6h   1/1       Running   0          12m       172.30.94.3   192.168.1.205</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>停止压测，当CPU负载降低时，HPA会自动减少POD的数量。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get hpa</span></div><div class="line">NAME        REFERENCE          TARGETS     MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   40% / 70%   1         5         3          14h</div><div class="line">[root@master ~]<span class="comment">#</span></div><div class="line">[root@master ~]<span class="comment"># kubectl get pod -o wide</span></div><div class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">nginx-5dcf548595-pdndb   1/1       Running   0          16m       172.30.94.4   192.168.1.205</div><div class="line">nginx-5dcf548595-r7n4b   1/1       Running   0          6m        172.30.94.5   192.168.1.205</div><div class="line">nginx-5dcf548595-z9d6h   1/1       Running   0          16m       172.30.94.3   192.168.1.205</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>慢慢的，HPA会减少POD的数量，直到降低到最小POD数(MINPODS)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get hpa</span></div><div class="line">NAME        REFERENCE          TARGETS      MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   0% / 70%   1         5         1          15h</div><div class="line">[root@master ~]<span class="comment">#</span></div><div class="line">[root@master ~]<span class="comment"># kubectl get pod -o wide</span></div><div class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">nginx-5dcf548595-z9d6h   1/1       Running   0          1h        172.30.94.3   192.168.1.205</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>通过kube-dashboard观察这个过程的变化。<br><img src="https://note.youdao.com/yws/api/personal/file/F629DAA40F784576824CBD41240103B0?method=download&amp;shareKey=aef82ab7b8bf8633212a7f4679686de2" alt="kube-dashboard"><br><img src="https://note.youdao.com/yws/api/personal/file/3BE7F7C0A7DD4E8C841D3F3E9A4BCB08?method=download&amp;shareKey=09d40ca0da02667398ba75864d50e837" alt="kube-dashboard"><br><img src="https://note.youdao.com/yws/api/personal/file/FE3468620FB64868BF110C6AE9FAE2E5?method=download&amp;shareKey=97d1289d99000d823e02495f6cf1057f" alt="kube-dashboard"><br>通过HPA的日志信息查看到它伸缩的过程。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl describe hpa</span></div><div class="line">Name:                                                  nginx-hpa</div><div class="line">Namespace:                                             default</div><div class="line">Labels:                                                &lt;none&gt;</div><div class="line">Annotations:                                           kubectl.kubernetes.io/last-applied-configuration=&#123;<span class="string">"apiVersion"</span>:<span class="string">"au</span></div><div class="line">toscaling/v1",<span class="string">"kind"</span>:<span class="string">"HorizontalPodAutoscaler"</span>,<span class="string">"metadata"</span>:&#123;<span class="string">"annotations"</span>:&#123;&#125;,<span class="string">"name"</span>:<span class="string">"nginx-hpa"</span>,<span class="string">"namespace"</span>:<span class="string">"default"</span>&#125;,<span class="string">"spec"</span>:&#123;<span class="string">"maxRepl...CreationTimestamp:                                     Sun, 27 Jan 2019 01:04:25 +0800</span></div><div class="line">Reference:                                             Deployment/nginx</div><div class="line">Metrics:                                               ( current / target )</div><div class="line">  resource cpu on pods  (as a percentage of request):  0% (0) / 70%</div><div class="line">Min replicas:                                          1</div><div class="line">Max replicas:                                          5</div><div class="line">Conditions:</div><div class="line">  Type            Status  Reason            Message</div><div class="line">  ----            ------  ------            -------</div><div class="line">  AbleToScale     False   BackoffDownscale  the time since the previous scale is still within the downscale forbidden window</div><div class="line">  ScalingActive   True    ValidMetricFound  the HPA was able to succesfully calculate a replica count from cpu resource utilization (percentage of request)  ScalingLimited  True    TooFewReplicas    the desired replica count is increasing faster than the maximum scale rate</div><div class="line">Events:</div><div class="line">  Type    Reason             Age               From                       Message</div><div class="line">  ----    ------             ----              ----                       -------</div><div class="line">  Normal  SuccessfulRescale  41m (x2 over 1h)  horizontal-pod-autoscaler  New size: 5; reason: cpu resource utilization (percentage of request) above target</div><div class="line">  Normal  SuccessfulRescale  29m (x2 over 1h)  horizontal-pod-autoscaler  New size: 3; reason: All metrics below target</div><div class="line">  Normal  SuccessfulRescale  17m               horizontal-pod-autoscaler  New size: 2; reason: All metrics below target</div><div class="line">  Normal  SuccessfulRescale  8m (x2 over 1h)   horizontal-pod-autoscaler  New size: 3; reason: cpu resource utilization (percentage of request) above target</div><div class="line">  Normal  SuccessfulRescale  3m (x2 over 12m)  horizontal-pod-autoscaler  New size: 1; reason: All metrics below target</div><div class="line">[root@master ~]#</div></pre></td></tr></table></figure></p>
<h5 id="autoscaling-v2beta1"><a href="#autoscaling-v2beta1" class="headerlink" title="autoscaling/v2beta1"></a>autoscaling/v2beta1</h5><p><code>autoscaling/v2beta1</code>中增加支持custom metrics。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># cat nginx-hpa-v2beta1.yml </span></div><div class="line">apiVersion: autoscaling/v2beta1</div><div class="line">kind: HorizontalPodAutoscaler</div><div class="line">metadata:</div><div class="line">  name: nginx-hpa</div><div class="line">spec:</div><div class="line">  scaleTargetRef:</div><div class="line">    apiVersion: extensions/v1beta1</div><div class="line">    kind: Deployment</div><div class="line">    name: nginx</div><div class="line">  minReplicas: 1</div><div class="line">  maxReplicas: 5</div><div class="line">  metrics:</div><div class="line">    - <span class="built_in">type</span>: Resource</div><div class="line">      resource:</div><div class="line">        name: memory</div><div class="line">        targetAverageUtilization: 70</div><div class="line">    - <span class="built_in">type</span>: Resource</div><div class="line">      resource:</div><div class="line">        name: cpu</div><div class="line">        targetAverageUtilization: 70</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl apply -f nginx-hpa-v2beta1.yml</span></div></pre></td></tr></table></figure>
<p>等待几分钟后…<br>观察发现前面10%是内存的使用百分比，后面0%是CPU的使用百分比。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get hpa nginx-hpa</span></div><div class="line">NAME        REFERENCE          TARGETS               MINPODS   MAXPODS   REPLICAS   AGE</div><div class="line">nginx-hpa   Deployment/nginx   10% / 70%, 0% / 70%   1         5         1          51s</div><div class="line">[root@master ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl describe hpa nginx-hpa</span></div><div class="line">Name:                                                     nginx-hpa</div><div class="line">Namespace:                                                default</div><div class="line">Labels:                                                   &lt;none&gt;</div><div class="line">Annotations:                                              kubectl.kubernetes.io/last-applied-configuration=&#123;<span class="string">"apiVersion"</span>:</div><div class="line"><span class="string">"autoscaling/v2beta1"</span>,<span class="string">"kind"</span>:<span class="string">"HorizontalPodAutoscaler"</span>,<span class="string">"metadata"</span>:&#123;<span class="string">"annotations"</span>:&#123;&#125;,<span class="string">"name"</span>:<span class="string">"nginx-hpa"</span>,<span class="string">"namespace"</span>:<span class="string">"default"</span>&#125;,<span class="string">"spec"</span>:&#123;<span class="string">"ma...CreationTimestamp:                                        Mon, 28 Jan 2019 22:22:01 +0800</span></div><div class="line">Reference:                                                Deployment/nginx</div><div class="line">Metrics:                                                  ( current / target )</div><div class="line">  resource memory on pods  (as a percentage of request):  10% (2670592) / 70%</div><div class="line">  resource cpu on pods  (as a percentage of request):     0% (0) / 70%</div><div class="line">Min replicas:                                             1</div><div class="line">Max replicas:                                             5</div><div class="line">Conditions:</div><div class="line">  Type            Status  Reason              Message</div><div class="line">  ----            ------  ------              -------</div><div class="line">  AbleToScale     True    ReadyForNewScale    the last scale time was sufficiently old as to warrant a new scale</div><div class="line">  ScalingActive   True    ValidMetricFound    the HPA was able to succesfully calculate a replica count from memory resou</div><div class="line">rce utilization (percentage of request)  ScalingLimited  False   DesiredWithinRange  the desired count is within the acceptable range</div><div class="line">Events:           &lt;none&gt;</div><div class="line"></div><div class="line">[root@master ~]#</div></pre></td></tr></table></figure>
<h5 id="autoscaling-v2beta2"><a href="#autoscaling-v2beta2" class="headerlink" title="autoscaling/v2beta2"></a>autoscaling/v2beta2</h5><p><code>autoscaling/v2beta2</code>测试发现目前k8s 1.9.2暂不支持这个API版本。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="comment"># kubectl get hpa.v2beta2.autoscaling -o yaml</span></div><div class="line">the server doesn<span class="string">'t have a resource type "hpa" in group "v2beta2.autoscaling"</span></div><div class="line">[root@master ~]#</div></pre></td></tr></table></figure></p>
<p>参考：<br><a href="http://blog.51cto.com/ylw6006/2113848" target="_blank" rel="external">http://blog.51cto.com/ylw6006/2113848</a><br><a href="https://blog.frognew.com/2017/01/kubernetes-pod-scale.html" target="_blank" rel="external">https://blog.frognew.com/2017/01/kubernetes-pod-scale.html</a><br><a href="https://k8smeetup.github.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/" target="_blank" rel="external">https://k8smeetup.github.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/</a><br><a href="https://blog.csdn.net/qq_17016649/article/details/79297796" target="_blank" rel="external">https://blog.csdn.net/qq_17016649/article/details/79297796</a><br><a href="https://github.com/kubernetes/kubernetes/issues/57673" target="_blank" rel="external">https://github.com/kubernetes/kubernetes/issues/57673</a>  </p>
<p>附件：<br><a href="https://note.youdao.com/yws/api/personal/file/9D8378F87D324B679D38A854BE9E812A?method=download&amp;shareKey=67aef289e4b6d60a0a47d38c1a6d2554" target="_blank" rel="external">HPA测试配置文件.zip</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2019/01/28/k8s集群水平扩展-HPA/">http://www.yfshare.vip/2019/01/28/k8s集群水平扩展-HPA/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Horizontal Pod Autoscaling，简称HPA，是Kubernetes中实现POD水平自动伸缩的功能。&lt;br&gt;
    
    </summary>
    
      <category term="K8S" scheme="http://www.yfshare.vip/categories/K8S/"/>
    
    
      <category term="k8s" scheme="http://www.yfshare.vip/tags/k8s/"/>
    
      <category term="docker" scheme="http://www.yfshare.vip/tags/docker/"/>
    
      <category term="HPA" scheme="http://www.yfshare.vip/tags/HPA/"/>
    
      <category term="cpu" scheme="http://www.yfshare.vip/tags/cpu/"/>
    
      <category term="memory" scheme="http://www.yfshare.vip/tags/memory/"/>
    
  </entry>
  
  <entry>
    <title>Grafana日志聚合工具Loki</title>
    <link href="http://www.yfshare.vip/2019/01/20/Grafana%E6%97%A5%E5%BF%97%E8%81%9A%E5%90%88%E5%B7%A5%E5%85%B7Loki/"/>
    <id>http://www.yfshare.vip/2019/01/20/Grafana日志聚合工具Loki/</id>
    <published>2019-01-20T08:22:01.000Z</published>
    <updated>2019-01-20T08:38:31.159Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Loki是 Grafana Labs 团队最新的开源项目，是一个水平可扩展，高可用性，多租户的日志聚合系统。它的设计非常经济高效且易于操作，因为它不会为日志内容编制索引，而是为每个日志流编制一组标签，为 Prometheus和 Kubernetes用户做了相关优化。项目受 Prometheus 启发，类似于 Prometheus 的日志系统。<br><a id="more"></a></p>
<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Loki初体验<br>与其他日志聚合系统相比， Loki具有下面的一些特性：  </p>
<ul>
<li>不对日志进行全文索引。通过存储压缩非结构化日志和仅索引元数据，Loki 操作起来会更简单，更省成本。  </li>
<li>通过使用与 Prometheus 相同的标签记录流对日志进行索引和分组，这使得日志的扩展和操作效率更高。  </li>
<li>特别适合储存 Kubernetes Pod 日志; 诸如 Pod 标签之类的元数据会被自动删除和编入索引。  </li>
<li>受 Grafana 原生支持。  </li>
</ul>
<p>Loki 由以下3个部分组成：  </p>
<ul>
<li>loki是主服务器，负责存储日志和处理查询。  </li>
<li>promtail是代理，负责收集日志并将其发送给 loki。  </li>
<li>Grafana 用于 UI 展示。  </li>
</ul>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><table>
<thead>
<tr>
<th>环境</th>
<th>版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>centos</td>
<td>v7.4</td>
</tr>
<tr>
<td>docker</td>
<td>v18.09.0</td>
</tr>
<tr>
<td>docker-compose</td>
<td>v1.23.2</td>
</tr>
<tr>
<td>grafana</td>
<td>v5.5.0</td>
</tr>
<tr>
<td>node-exporter</td>
<td>v0.17.0</td>
</tr>
<tr>
<td>prometheus</td>
<td>v2.5.0</td>
</tr>
</tbody>
</table>
<h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>clone loki源码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@1-206 ~]<span class="comment"># curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose</span></div><div class="line">[root@1-206 ~]<span class="comment"># yum install -y git</span></div><div class="line">[root@1-206 ~]<span class="comment"># git clone https://github.com/grafana/loki.git</span></div><div class="line">[root@1-206 ~]<span class="comment"># cd loki/production/</span></div></pre></td></tr></table></figure></p>
<p>可以直接运行官方的docker-compose.yml文件，执行命令为：<code>docker-compose -f docker-compose.yaml up -d</code><br>docker-compose.yml 文件如下，这里使用的 grafana 镜像为自己编译的，官方的镜像为：<code>image: grafana/grafana:master</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">[root@1-206 production]<span class="comment"># cat docker-compose.yaml </span></div><div class="line">version: <span class="string">"3"</span></div><div class="line">networks:</div><div class="line">  loki:</div><div class="line">services:</div><div class="line">  loki:</div><div class="line">    image: grafana/loki:master</div><div class="line">    ports:</div><div class="line">      - <span class="string">"3100:3100"</span></div><div class="line">    <span class="built_in">command</span>: -config.file=/etc/loki/<span class="built_in">local</span>-config.yaml</div><div class="line">    networks:</div><div class="line">      - loki</div><div class="line"></div><div class="line">  promtail:</div><div class="line">    image: grafana/promtail:master</div><div class="line">    volumes:</div><div class="line">      - /var/<span class="built_in">log</span>:/var/<span class="built_in">log</span></div><div class="line">    <span class="built_in">command</span>: </div><div class="line">      -config.file=/etc/promtail/docker-config.yaml</div><div class="line">    networks:</div><div class="line">      - loki</div><div class="line">      </div><div class="line">  grafana:</div><div class="line">    image: yfshare/grafana:5.5.0_beta1</div><div class="line">    ports:</div><div class="line">      - <span class="string">"3000:3000"</span></div><div class="line">    environment:</div><div class="line">      GF_EXPLORE_ENABLED: <span class="string">"true"</span></div><div class="line">    networks:</div><div class="line">      - loki</div><div class="line">[root@1-206 production]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@1-206 production]<span class="comment"># docker-compose -f docker-compose.yaml up -d</span></div><div class="line">[root@1-206 production]<span class="comment"># docker-compose ps</span></div><div class="line">        Name                       Command               State               Ports             </div><div class="line">-----------------------------------------------------------------------------------------------</div><div class="line">production_grafana_1    /docker-entrypoint.sh            Up      22/tcp, 0.0.0.0:3000-&gt;3000/tcp</div><div class="line">production_loki_1       /bin/loki -config.file=/et ...   Up      0.0.0.0:3100-&gt;3100/tcp, 80/tcp</div><div class="line">production_promtail_1   /usr/bin/promtail -config. ...   Up                                    </div><div class="line">[root@1-206 production]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h4><p>部署完成后，访问grafana：<a href="http://ip:3000，默认密码为`admin:admin`" target="_blank" rel="external">http://ip:3000，默认密码为`admin:admin`</a><br>Grafana v5.5.0+以上的版本才支持Loki<br><img src="https://note.youdao.com/yws/api/personal/file/26D9B679EB99481FA1C1EDBF165EB96C?method=download&amp;shareKey=2b739c0af348ab7f270255386e300f3c" alt="Grafana_Plugins"><br>添加数据源Prometheus和Loki<br><img src="https://note.youdao.com/yws/api/personal/file/1F579EED73B449309CB3163035F783DF?method=download&amp;shareKey=7a275eedbdd684e387ca38e38d6457fc" alt="Grafana_Add_Data_Sources"><br><img src="https://note.youdao.com/yws/api/personal/file/C06C1D8CEAB0467FB20D5054C4EE3315?method=download&amp;shareKey=8ff3e7543b97fff40b9a9506f03369ff" alt="Grafana_Prometheus"><br><img src="https://note.youdao.com/yws/api/personal/file/8137BBD8D6014847BCDFDD735F287454?method=download&amp;shareKey=0188720a3a63bb63af7ef233d4e7bf62" alt="Grafana_Loki"><br><img src="https://note.youdao.com/yws/api/personal/file/BA3128B97536448ABE61DF845D0817C0?method=download&amp;shareKey=0146ff6587169a25d36e0d3ca42a78fa" alt="Grafana_Data_Sources"><br>根据系统标签来查看Loki日志<br>测试发现当promtail定义读取的日志路径为<code>/var/log</code>时，即使日志路径为<code>/var/log/grafana/grafana.log</code>也不能读取。<br><img src="https://note.youdao.com/yws/api/personal/file/EF3D0ECA3532497B934D2BE81C5A7D9E?method=download&amp;shareKey=ed99699f094fd25c5de0e26297c86716" alt="Grafana_Loki_Log"><br><img src="https://note.youdao.com/yws/api/personal/file/23299AE377984D1AB5F71B446D2C0FC6?method=download&amp;shareKey=3b5375e6c45f4f13b1b1e0f09a633782" alt="Loki_Labels"><br>这里的job varlogs是在promtail的配置文件里定义的，promtail配置文件如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@1-206 production]<span class="comment"># docker exec -it production_promtail_1 /bin/sh</span></div><div class="line">/ <span class="comment"># cat /etc/promtail/docker-config.yaml</span></div><div class="line">server:</div><div class="line">  http_listen_port: 0</div><div class="line">  grpc_listen_port: 0</div><div class="line">positions:</div><div class="line">  filename: /tmp/positions.yaml</div><div class="line">client:</div><div class="line">  url: http://loki:3100/api/prom/push</div><div class="line">scrape_configs:</div><div class="line">- job_name: system</div><div class="line">  entry_parser: raw</div><div class="line">  static_configs:</div><div class="line">  - targets:</div><div class="line">      - localhost</div><div class="line">    labels:</div><div class="line">      job: varlogs</div><div class="line">      __path__: /var/<span class="built_in">log</span></div><div class="line">/ <span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>Loki也可以查看Prometheus的item<br><img src="https://note.youdao.com/yws/api/personal/file/7E5F70739BB94E09AE316125E4592BD4?method=download&amp;shareKey=aaf8df3108eec2660ffc43cc009e8f7e" alt="Grafana_Prometheus_Item">  </p>
<p>参考：<br><a href="https://mp.weixin.qq.com/s?__biz=MzU4MjQ0MTU4Ng==&amp;mid=2247484023&amp;idx=1&amp;sn=0ea2c44046edf5365e201714edbbc6ba&amp;chksm=fdb90d6acace847c290efbe4c86599110610286cddc53f9917407ae7c41c522971414f2a0cca&amp;mpshare=1&amp;scene=23&amp;srcid=121488q6r3xYl39pZbdhZ22l#rd" target="_blank" rel="external">Grafana 日志聚合工具 Loki</a><br><a href="https://grafana.com/loki#about" target="_blank" rel="external">Loki官网</a><br><a href="https://github.com/grafana/loki/tree/master/production/ksonnet" target="_blank" rel="external">Deploy Loki to Kubernetes</a><br><a href="https://github.com/grafana/loki/blob/master/docs/usage.md" target="_blank" rel="external">Configuring the Loki Datasource in Grafana</a><br><a href="https://github.com/grafana/loki/blob/master/docs/api.md" target="_blank" rel="external">Loki API</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2019/01/20/Grafana日志聚合工具Loki/">http://www.yfshare.vip/2019/01/20/Grafana日志聚合工具Loki/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Loki是 Grafana Labs 团队最新的开源项目，是一个水平可扩展，高可用性，多租户的日志聚合系统。它的设计非常经济高效且易于操作，因为它不会为日志内容编制索引，而是为每个日志流编制一组标签，为 Prometheus和 Kubernetes用户做了相关优化。项目受 Prometheus 启发，类似于 Prometheus 的日志系统。&lt;br&gt;
    
    </summary>
    
      <category term="K8S" scheme="http://www.yfshare.vip/categories/K8S/"/>
    
    
      <category term="Grafana" scheme="http://www.yfshare.vip/tags/Grafana/"/>
    
      <category term="Loki" scheme="http://www.yfshare.vip/tags/Loki/"/>
    
      <category term="Docker" scheme="http://www.yfshare.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Python十行代码爬抖音</title>
    <link href="http://www.yfshare.vip/2018/11/06/Python%E5%8D%81%E8%A1%8C%E4%BB%A3%E7%A0%81%E7%88%AC%E6%8A%96%E9%9F%B3/"/>
    <id>http://www.yfshare.vip/2018/11/06/Python十行代码爬抖音/</id>
    <published>2018-11-05T16:07:32.000Z</published>
    <updated>2018-11-05T18:18:12.426Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>今天看到一篇文章介绍怎么用python来爬抖音的小视频和音乐。于是兴趣大增，先来试试能不能玩，哈哈。<br><a id="more"></a><br>先来看个效果图，嗯嗯…  </p>
<h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><p><img src="https://note.youdao.com/yws/api/personal/file/39A6E0DC37EA4772BFFFE2FB749455C3?method=download&amp;shareKey=0f9dc13147fe991223234ff80d468afe" alt="py_video">  </p>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><p>环境：<br>　　　python 3.7.1<br>　　　centos 7.4<br>　　　pip 10.0.1  </p>
<h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># python3.7 --version</span></div><div class="line">Python <span class="number">3.7</span><span class="number">.1</span></div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># pip3 install douyin</span></div></pre></td></tr></table></figure>
<p><img src="https://note.youdao.com/yws/api/personal/file/6C5A7B9EE298427E8EB44FCBB98C773D?method=download&amp;shareKey=ded7cd2ee3b179a0fc1f7830eb827fc4" alt="py_install_douyin"><br>有时候因为网络原因会安装失败，这时重新执行上面的命令即可，直到安装完成。  </p>
<p>导入douyin模块<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># python3.7</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> douyin</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure></p>
<p>导入如果报错的话，可能douyin模块没有安装成功。  </p>
<p>下面我们开始爬…爬抖音小视频和音乐咯<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost douyin]<span class="comment"># python3.7 dou.py</span></div></pre></td></tr></table></figure></p>
<p><img src="https://note.youdao.com/yws/api/personal/file/D3CE0E55A29F4CDE95B30643D179053B?method=download&amp;shareKey=e17a3c7a177e531471edfbc4c571bcf2" alt="py_download"><br><img src="https://note.youdao.com/yws/api/personal/file/04D69EAF98CB47098B498897383F693F?method=download&amp;shareKey=6f37956f071cc65b949c67ea8c715358" alt="py_download">  </p>
<p>几分钟后…我们来看看爬的成果<br>可以看到视频配的音乐被存储成了 mp3 格式的文件，抖音视频存储成了 mp4 文件。<br><img src="https://note.youdao.com/yws/api/personal/file/77B9BD11581D4D61A825B0AAD07CD12F?method=download&amp;shareKey=9d5eb61e94e2d418f1ebf1315075134f" alt="py_download">  </p>
<p>嗯…不错，哈哈。  </p>
<h4 id="py脚本"><a href="#py脚本" class="headerlink" title="py脚本"></a>py脚本</h4><p>作者说，能爬抖音上所有热门话题和音乐下的相关视频都爬取到，并且将爬到的视频下载下来，同时还要把视频所配的音乐也单独下载下来，不仅如此，所有视频的相关信息如发布人、点赞数、评论数、发布时间、发布人、发布地点等等信息都需要爬取下来，并存储到 MongoDB 数据库。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> douyin</div><div class="line"><span class="keyword">from</span> douyin.structures <span class="keyword">import</span> Topic, Music</div><div class="line"></div><div class="line"><span class="comment"># 定义视频下载、音频下载、MongoDB 存储的处理器</span></div><div class="line">video_file_handler = douyin.handlers.VideoFileHandler(folder=<span class="string">'./videos'</span>)</div><div class="line">music_file_handler = douyin.handlers.MusicFileHandler(folder=<span class="string">'./musics'</span>)</div><div class="line"><span class="comment">#mongo_handler = douyin.handlers.MongoHandler()</span></div><div class="line"><span class="comment"># 定义下载器，并将三个处理器当做参数传递</span></div><div class="line"><span class="comment">#downloader = douyin.downloaders.VideoDownloader([mongo_handler, video_file_handler, music_file_handler])</span></div><div class="line">downloader = douyin.downloaders.VideoDownloader([video_file_handler, music_file_handler])</div><div class="line"><span class="comment"># 循环爬取抖音热榜信息并下载存储</span></div><div class="line"><span class="keyword">for</span> result <span class="keyword">in</span> douyin.hot.trend():</div><div class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> result.data:</div><div class="line">        <span class="comment"># 爬取热门话题和热门音乐下面的所有视频，每个话题或音乐最多爬取 10 个相关视频。</span></div><div class="line">        downloader.download(item.videos(max=<span class="number">10</span>))</div></pre></td></tr></table></figure></p>
<p>由于我这里没有mongodb所以，把这mongodb相关的配置给注释掉了。<br>作者github地址：<a href="https://github.com/Python3WebSpider/DouYin" target="_blank" rel="external">https://github.com/Python3WebSpider/DouYin</a>  </p>
<p>====以下摘自作者====</p>
<h4 id="代码解读"><a href="#代码解读" class="headerlink" title="代码解读"></a>代码解读</h4><p>本库依赖的其他库有：  </p>
<ul>
<li>aiohttp：利用它可以完成异步数据下载，加快下载速度  </li>
<li>dateparser：利用它可以完成任意格式日期的转化  </li>
<li>motor：利用它可以完成异步 MongoDB 存储，加快存储速度  </li>
<li>requests：利用它可以完成最基本的 HTTP 请求模拟  </li>
<li>tqdm：利用它可以进行进度条的展示  </li>
</ul>
<p><strong>数据结构定义</strong><br>如果要做一个库的话，一个很重要的点就是对一些关键的信息进行结构化的定义，使用面向对象的思维对某些对象进行封装，抖音的爬取也不例外。  </p>
<p>在抖音中，其实有很多种对象，比如视频、音乐、话题、用户、评论等等，它们之间通过某种关系联系在一起，例如视频中使用了某个配乐，那么视频和音乐就存在使用关系；比如用户发布了视频，那么用户和视频就存在发布关系，我们可以使用面向对象的思维对每个对象进行封装，比如视频的话，就可以定义成如下结构：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Video</span><span class="params">(Base)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, **kwargs)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        init video object</div><div class="line">        :param kwargs:</div><div class="line">        """</div><div class="line">        super().__init__()</div><div class="line">        self.id = kwargs.get(<span class="string">'id'</span>)</div><div class="line">        self.desc = kwargs.get(<span class="string">'desc'</span>)</div><div class="line">        self.author = kwargs.get(<span class="string">'author'</span>)</div><div class="line">        self.music = kwargs.get(<span class="string">'music'</span>)</div><div class="line">        self.like_count = kwargs.get(<span class="string">'like_count'</span>)</div><div class="line">        self.comment_count = kwargs.get(<span class="string">'comment_count'</span>)</div><div class="line">        self.share_count = kwargs.get(<span class="string">'share_count'</span>)</div><div class="line">        self.hot_count = kwargs.get(<span class="string">'hot_count'</span>)</div><div class="line">        ...</div><div class="line">        self.address = kwargs.get(<span class="string">'address'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        video to str</div><div class="line">        :return: str</div><div class="line">        """</div><div class="line">        <span class="keyword">return</span> <span class="string">'&lt;Video: &lt;%s, %s&gt;&gt;'</span> % (self.id, self.desc[:<span class="number">10</span>].strip() <span class="keyword">if</span> self.desc <span class="keyword">else</span> <span class="keyword">None</span>)</div></pre></td></tr></table></figure></p>
<p>这里将一些关键的属性定义成 Video 类的一部分，包括 id 索引、desc 描述、author 发布人、music 配乐等等，其中 author 和 music 并不是简单的字符串的形式，它也是单独定义的数据结构，比如 author 就是 User 类型的对象，而 User 的定义又是如下结构：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(Base)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, **kwargs)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        init user object</div><div class="line">        :param kwargs:</div><div class="line">        """</div><div class="line">        super().__init__()</div><div class="line">        self.id = kwargs.get(<span class="string">'id'</span>)</div><div class="line">        self.gender = kwargs.get(<span class="string">'gender'</span>)</div><div class="line">        self.name = kwargs.get(<span class="string">'name'</span>)</div><div class="line">        self.create_time = kwargs.get(<span class="string">'create_time'</span>)</div><div class="line">        self.birthday = kwargs.get(<span class="string">'birthday'</span>)</div><div class="line">        ...</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        user to str</div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        <span class="keyword">return</span> <span class="string">'&lt;User: &lt;%s, %s&gt;&gt;'</span> % (self.alias, self.name)</div></pre></td></tr></table></figure></p>
<p>所以说，通过属性之间的关联，我们就可以将不同的对象关联起来，这样显得逻辑架构清晰，而且我们也不用一个个单独维护字典来存储了，其实这就和 Scrapy 里面的 Item 的定义是类似的。  </p>
<p><strong>请求和重试</strong><br>实现爬取的过程就不必多说了，这里面其实用到的就是最简单的抓包技巧，使用 Charles 直接进行抓包即可。抓包之后便可以观察到对应的接口请求，然后进行模拟即可。  </p>
<p>所以问题就来了，难道我要一个接口写一个请求方法吗？另外还要配置 Headers、超时时间等等的内容，那岂不是太费劲了，所以，我们可以将请求的方法进行单独的封装，这里我定义了一个 fetch 方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_fetch</span><span class="params">(url, **kwargs)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line">    fetch api response</div><div class="line">    :param url: fetch url</div><div class="line">    :param kwargs: other requests params</div><div class="line">    :return: json of response</div><div class="line">    """</div><div class="line">    response = requests.get(url, **kwargs)</div><div class="line">    <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</div><div class="line">        <span class="keyword">raise</span> requests.ConnectionError(<span class="string">'Expected status code 200, but got &#123;&#125;'</span>.format(response.status_code))</div><div class="line">    <span class="keyword">return</span> response.json()</div></pre></td></tr></table></figure></p>
<p>这个方法留了一个必要参数，即 url，另外其他的配置我留成了 kwargs，也就是可以任意传递，传递之后，它会依次传递给 requests 的请求方法，然后这里还做了异常处理，如果成功请求，即可返回正常的请求结果。  </p>
<p>定义了这个方法，在其他的调用方法里面我们只需要单独调用这个 fetch 方法即可，而不需要再去关心异常处理，返回类型了。  </p>
<p>好，那么定义好了请求之后，如果出现了请求失败怎么办呢？按照常规的方法，我们可能就会在外面套一层方法，然后记录调用 fetch 方法请求失败的次数，然后重新调用 fetch 方法进行重试，但这里可以告诉大家一个更好用的库，叫做 retrying，使用它我们可以通过定义一个装饰器来完成重试的操作。  </p>
<p>比如我可以使用 retry 装饰器这么装饰 fetch 方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> retrying <span class="keyword">import</span> retry</div><div class="line"></div><div class="line"><span class="meta">@retry(stop_max_attempt_number=retry_max_number, wait_random_min=retry_min_random_wait,</span></div><div class="line">           wait_random_max=retry_max_random_wait, retry_on_exception=need_retry)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_fetch</span><span class="params">(url, **kwargs)</span>:</span></div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure></p>
<p>这里使用了装饰器的四个参数：  </p>
<ul>
<li>stop_max_attempt_number：最大重试次数，如果重试次数达到该次数则放弃重试  </li>
<li>wait_random_min：下次重试之前随机等待时间的最小值  </li>
<li>wait_random_max：下次重试之前随机等待时间的最大值  </li>
<li>retry_on_exception：判断出现了怎样的异常才重试  </li>
</ul>
<p>这里 retry_on_exception 参数指定了一个方法，叫做 need_retry，方法定义如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">need_retry</span><span class="params">(exception)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line">    need to retry</div><div class="line">    :param exception:</div><div class="line">    :return:</div><div class="line">    """</div><div class="line">    result = isinstance(exception, (requests.ConnectionError, requests.ReadTimeout))</div><div class="line">    <span class="keyword">if</span> result:</div><div class="line">        print(<span class="string">'Exception'</span>, type(exception), <span class="string">'occurred, retrying...'</span>)</div><div class="line">    <span class="keyword">return</span> result</div></pre></td></tr></table></figure></p>
<p>这里判断了如果是 requests 的 ConnectionError 和 ReadTimeout 异常的话，就会抛出异常进行重试，否则不予重试。  </p>
<p>所以，这样我们就实现了请求的封装和自动重试，是不是非常 Pythonic？  </p>
<p><strong>下载处理器的设计</strong><br>为了下载视频，我们需要设计一个下载处理器来下载已经爬取到的视频链接，所以下载处理器的输入就是一批批的视频链接，下载器接收到这些链接，会将其进行下载处理，并将视频存储到对应的位置，另外也可以完成一些信息存储操作。  </p>
<ul>
<li>在设计时，下载处理器的要求有两个，一个是保证高速的下载，另一个就是可扩展性要强，下面我们分别来针对这两个特点进行设计：<br>高速下载，为了实现高速的下载，要么可以使用多线程或多进程，要么可以用异步下载，很明显，后者是更有优势的。</li>
<li>扩展性强，下载处理器要能下载音频、视频，另外还可以支持数据库等存储，所以为了解耦合，我们可以将视频下载、音频下载、数据库存储的功能独立出来，下载处理器只负责视频链接的主要逻辑处理和分配即可。  </li>
</ul>
<p>为了实现高速下载，这里我们可以使用 aiohttp 库来完成，另外异步下载我们也不能一下子下载太多，不然网络波动太大，所以我们可以设置 batch 式下载，可以避免同时大量的请求和网络拥塞，主要的下载函数如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(self, inputs)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line">    download video or video lists</div><div class="line">    :param data:</div><div class="line">    :return:</div><div class="line">    """</div><div class="line">    <span class="keyword">if</span> isinstance(inputs, types.GeneratorType):</div><div class="line">        temps = []</div><div class="line">        <span class="keyword">for</span> result <span class="keyword">in</span> inputs:</div><div class="line">            print(<span class="string">'Processing'</span>, result, <span class="string">'...'</span>)</div><div class="line">            temps.append(result)</div><div class="line">            <span class="keyword">if</span> len(temps) == self.batch:</div><div class="line">                self.process_items(temps)</div><div class="line">                temps = []</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        inputs = inputs <span class="keyword">if</span> isinstance(inputs, list) <span class="keyword">else</span> [inputs]</div><div class="line">        self.process_items(inputs)</div></pre></td></tr></table></figure></p>
<p>这个 download 方法设计了多种数据接收类型，可以接收一个生成器，也可以接收单个或列表形式的视频对象数据，接着调用了 process_items 方法进行了异步下载，其方法实现如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_items</span><span class="params">(self, objs)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line">    process items</div><div class="line">    :param objs: objs</div><div class="line">    :return:</div><div class="line">    """</div><div class="line">    <span class="comment"># define progress bar</span></div><div class="line">    <span class="keyword">with</span> tqdm(total=len(objs)) <span class="keyword">as</span> self.bar:</div><div class="line">        <span class="comment"># init event loop</span></div><div class="line">        loop = asyncio.get_event_loop()</div><div class="line">        <span class="comment"># get num of batches</span></div><div class="line">        total_step = int(math.ceil(len(objs) / self.batch))</div><div class="line">        <span class="comment"># for every batch</span></div><div class="line">        <span class="keyword">for</span> step <span class="keyword">in</span> range(total_step):</div><div class="line">            start, end = step * self.batch, (step + <span class="number">1</span>) * self.batch</div><div class="line">            print(<span class="string">'Processing %d-%d of files'</span> % (start + <span class="number">1</span>, end))</div><div class="line">            <span class="comment"># get batch of objs</span></div><div class="line">            objs_batch = objs[start: end]</div><div class="line">            <span class="comment"># define tasks and run loop</span></div><div class="line">            tasks = [asyncio.ensure_future(self.process_item(obj)) <span class="keyword">for</span> obj <span class="keyword">in</span> objs_batch]</div><div class="line">            <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</div><div class="line">                task.add_done_callback(self.update_progress)</div><div class="line">            loop.run_until_complete(asyncio.wait(tasks))</div></pre></td></tr></table></figure></p>
<p>这里使用了 asyncio 实现了异步处理，并通过对视频链接进行分批处理保证了流量的稳定性，另外还使用了 tqdm 实现了进度条的显示。  </p>
<p>我们可以看到，真正的处理下载的方法是 process_item，这里面会调用视频下载、音频下载、数据库存储的一些组件来完成处理，由于我们使用了 asyncio 进行了异步处理，所以 process_item 也需要是一个支持异步处理的方法，定义如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, obj)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line">    process item</div><div class="line">    :param obj: single obj</div><div class="line">    :return:</div><div class="line">    """</div><div class="line">    <span class="keyword">if</span> isinstance(obj, Video):</div><div class="line">        print(<span class="string">'Processing'</span>, obj, <span class="string">'...'</span>)</div><div class="line">        <span class="keyword">for</span> handler <span class="keyword">in</span> self.handlers:</div><div class="line">            <span class="keyword">if</span> isinstance(handler, Handler):</div><div class="line">                <span class="keyword">await</span> handler.process(obj)</div></pre></td></tr></table></figure></p>
<p>这里我们可以看到，真正的处理逻辑都在一个个 handler 里面，我们将每个单独的功能进行了抽离，定义成了一个个 Handler，这样可以实现良好的解耦合，如果我们要增加和关闭某些功能，只需要配置不同的 Handler 即可，而不需要去改动代码，这也是设计模式的一个解耦思想，类似工厂模式。  </p>
<p><strong>Handler 的设计</strong><br>刚才我们讲了，Handler 就负责一个个具体功能的实现，比如视频下载、音频下载、数据存储等等，所以我们可以将它们定义成不同的 Handler，而视频下载、音频下载又都是文件下载，所以又可以利用继承的思想设计一个文件下载的 Handler，定义如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> join, exists</div><div class="line"><span class="keyword">from</span> os <span class="keyword">import</span> makedirs</div><div class="line"><span class="keyword">from</span> douyin.handlers <span class="keyword">import</span> Handler</div><div class="line"><span class="keyword">from</span> douyin.utils.type <span class="keyword">import</span> mime_to_ext</div><div class="line"><span class="keyword">import</span> aiohttp</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span><span class="params">(Handler)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, folder)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        init save folder</div><div class="line">        :param folder:</div><div class="line">        """</div><div class="line">        super().__init__()</div><div class="line">        self.folder = folder</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exists(self.folder):</div><div class="line">            makedirs(self.folder)</div><div class="line"></div><div class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">_process</span><span class="params">(self, obj, **kwargs)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        download to file</div><div class="line">        :param url: resource url</div><div class="line">        :param name: save name</div><div class="line">        :param kwargs:</div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        print(<span class="string">'Downloading'</span>, obj, <span class="string">'...'</span>)</div><div class="line">        kwargs.update(&#123;<span class="string">'ssl'</span>: <span class="keyword">False</span>&#125;)</div><div class="line">        kwargs.update(&#123;<span class="string">'timeout'</span>: <span class="number">10</span>&#125;)</div><div class="line">        <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</div><div class="line">            <span class="keyword">async</span> <span class="keyword">with</span> session.get(obj.play_url, **kwargs) <span class="keyword">as</span> response:</div><div class="line">                <span class="keyword">if</span> response.status == <span class="number">200</span>:</div><div class="line">                    extension = mime_to_ext(response.headers.get(<span class="string">'Content-Type'</span>))</div><div class="line">                    full_path = join(self.folder, <span class="string">'%s.%s'</span> % (obj.id, extension))</div><div class="line">                    <span class="keyword">with</span> open(full_path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">                        f.write(<span class="keyword">await</span> response.content.read())</div><div class="line">                    print(<span class="string">'Downloaded file to'</span>, full_path)</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    print(<span class="string">'Cannot download %s, response status %s'</span> % (obj.id, response.status))</div><div class="line"></div><div class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(self, obj, **kwargs)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        process obj</div><div class="line">        :param obj:</div><div class="line">        :param kwargs:</div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        <span class="keyword">return</span> <span class="keyword">await</span> self._process(obj, **kwargs)</div></pre></td></tr></table></figure></p>
<p>这里我们还是使用了 aiohttp，因为在下载处理器中需要 Handler 支持异步操作，这里下载的时候就是直接请求了文件链接，然后判断了文件的类型，并完成了文件保存。  </p>
<p>视频下载的 Handler 只需要继承当前的 FileHandler 即可：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> douyin.handlers <span class="keyword">import</span> FileHandler</div><div class="line"><span class="keyword">from</span> douyin.structures <span class="keyword">import</span> Video</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">VideoFileHandler</span><span class="params">(FileHandler)</span>:</span></div><div class="line"></div><div class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(self, obj, **kwargs)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        process video obj</div><div class="line">        :param obj:</div><div class="line">        :param kwargs:</div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        <span class="keyword">if</span> isinstance(obj, Video):</div><div class="line">            <span class="keyword">return</span> <span class="keyword">await</span> self._process(obj, **kwargs)</div></pre></td></tr></table></figure></p>
<p>这里其实就是加了类别判断，确保数据类型的一致性，当然音频下载也是一样的。  </p>
<p><strong>异步 MongoDB 存储</strong><br>上面介绍了视频和音频处理的 Handler，另外还有一个存储的 Handler 没有介绍，那就是 MongoDB 存储，平常我们可能习惯使用 PyMongo 来完成存储，但这里我们为了加速，需要支持异步操作，所以这里有一个可以实现异步 MongoDB 存储的库，叫做 Motor，其实使用的方法差不太多，MongoDB 的连接对象不再是 PyMongo 的 MongoClient 了，而是 Motor 的 AsyncIOMotorClient，其他的配置基本类似。  </p>
<p>在存储时使用的是 update_one 方法并开启了 upsert 参数，这样可以做到存在即更新，不存在即插入的功能，保证数据的不重复性。  </p>
<p>整个 MongoDB 存储的 Handler 定义如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> douyin.handlers <span class="keyword">import</span> Handler</div><div class="line"><span class="keyword">from</span> motor.motor_asyncio <span class="keyword">import</span> AsyncIOMotorClient</div><div class="line"><span class="keyword">from</span> douyin.structures <span class="keyword">import</span> *</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MongoHandler</span><span class="params">(Handler)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, conn_uri=None, db=<span class="string">'douyin'</span>)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        init save folder</div><div class="line">        :param folder:</div><div class="line">        """</div><div class="line">        super().__init__()</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> conn_uri:</div><div class="line">            conn_uri = <span class="string">'localhost'</span></div><div class="line">        self.client = AsyncIOMotorClient(conn_uri)</div><div class="line">        self.db = self.client[db]</div><div class="line"></div><div class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(self, obj, **kwargs)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        download to file</div><div class="line">        :param url: resource url</div><div class="line">        :param name: save name</div><div class="line">        :param kwargs:</div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        collection_name = <span class="string">'default'</span></div><div class="line">        <span class="keyword">if</span> isinstance(obj, Video):</div><div class="line">            collection_name = <span class="string">'videos'</span></div><div class="line">        <span class="keyword">elif</span> isinstance(obj, Music):</div><div class="line">            collection_name = <span class="string">'musics'</span></div><div class="line">        collection = self.db[collection_name]</div><div class="line">        <span class="comment"># save to mongodb</span></div><div class="line">        print(<span class="string">'Saving'</span>, obj, <span class="string">'to mongodb...'</span>)</div><div class="line">        <span class="keyword">if</span> <span class="keyword">await</span> collection.update_one(&#123;<span class="string">'id'</span>: obj.id&#125;, &#123;<span class="string">'$set'</span>: obj.json()&#125;, upsert=<span class="keyword">True</span>):</div><div class="line">            print(<span class="string">'Saved'</span>, obj, <span class="string">'to mongodb successfully'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'Error occurred while saving'</span>, obj)</div></pre></td></tr></table></figure></p>
<p>可以看到我们在类中定义了 AsyncIOMotorClient 对象，并暴露了 conn_uri 连接字符串和 db 数据库名称，可以在声明 MongoHandler 类的时候指定 MongoDB 的链接地址和数据库名。<br>同样的 process 方法，这里使用 await 修饰了 update_one 方法，完成了异步 MongoDB 存储。<br>好，以上便是 douyin 库的所有的关键部分介绍，这部分内容可以帮助大家理解这个库的核心部分实现，另外可能对设计模式、面向对象思维以及一些实用库的使用有一定的帮助。  </p>
<p>参考：<a href="https://github.com/Python3WebSpider/DouYin" target="_blank" rel="external">https://github.com/Python3WebSpider/DouYin</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzI5NDY1MjQzNA==&amp;mid=2247488007&amp;idx=2&amp;sn=476479988cd21e86783c2bd729e0b162&amp;chksm=ec5ecd7adb29446c376cf8b3cdb7925be6759b199c05ba26fefbd029e5ba73a2840ac27edeb3&amp;mpshare=1&amp;scene=1&amp;srcid=1103OLXZhYrY7PEiUvxL57HI#rd" target="_blank" rel="external">不到 10 行代码爬抖音</a>  </p>
<p>附件：<br><a href="https://note.youdao.com/yws/api/personal/file/D319D842BB8C4D6A8F797978C25BC14E?method=download&amp;shareKey=728953d9df759a2ad43fc196e6b27489" target="_blank" rel="external">douyin.py</a><br><a href="https://note.youdao.com/yws/api/personal/file/F075863D139D4644A6D77D564BAD14AA?method=download&amp;shareKey=536691dc6533368dee6579a3b6b7f299" target="_blank" rel="external">Python-3.7.1.tar.xz</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/11/06/Python十行代码爬抖音/">http://www.yfshare.vip/2018/11/06/Python十行代码爬抖音/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天看到一篇文章介绍怎么用python来爬抖音的小视频和音乐。于是兴趣大增，先来试试能不能玩，哈哈。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.yfshare.vip/categories/Python/"/>
    
    
      <category term="Python" scheme="http://www.yfshare.vip/tags/Python/"/>
    
      <category term="douyin" scheme="http://www.yfshare.vip/tags/douyin/"/>
    
  </entry>
  
  <entry>
    <title>Python升级</title>
    <link href="http://www.yfshare.vip/2018/11/04/Python%E5%8D%87%E7%BA%A7/"/>
    <id>http://www.yfshare.vip/2018/11/04/Python升级/</id>
    <published>2018-11-03T16:20:00.000Z</published>
    <updated>2018-11-05T16:05:49.973Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Python是一种解释型、面向对象、动态数据类型的高级程序设计语言。<br><a id="more"></a><br>编译安装python3.7.1并支持ssl 模块  </p>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><p>环境：<br>　　python 3.7.1<br>　　centos 7.4  </p>
<h4 id="解决依赖关系"><a href="#解决依赖关系" class="headerlink" title="解决依赖关系"></a>解决依赖关系</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># yum install -y openssl openssl-devel libffi-devel zlib*</span></div></pre></td></tr></table></figure>
<h4 id="编译安装python"><a href="#编译安装python" class="headerlink" title="编译安装python"></a>编译安装python</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># wget -c <span class="string">'https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tar.xz'</span></span></div><div class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># tar -xf Python-3.7.1.tar.xz</span></div><div class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># cd Python-3.7.1</span></div><div class="line">[root<span class="symbol">@localhost</span> Python<span class="number">-3.7</span><span class="number">.1</span>]<span class="meta"># ./configure --prefix=/usr/local/python3.7 --with-ssl</span></div><div class="line">[root<span class="symbol">@localhost</span> Python<span class="number">-3.7</span><span class="number">.1</span>]<span class="meta"># make &amp;&amp; make install</span></div></pre></td></tr></table></figure>
<h4 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat /etc/profile.d/python37.sh </span></div><div class="line"><span class="comment">#!/bin/bash</span></div><div class="line">python37=<span class="string">"/usr/local/python3.7"</span></div><div class="line">export PATH=$PATH:$&#123;python37&#125;/bin</div><div class="line">[root@localhost ~]<span class="comment"># source /etc/profile.d/python37.sh</span></div></pre></td></tr></table></figure>
<h4 id="测试python"><a href="#测试python" class="headerlink" title="测试python"></a>测试python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># python3.7 --version</span></div><div class="line">Python <span class="number">3.7</span><span class="number">.1</span></div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p><img src="https://note.youdao.com/yws/api/personal/file/7CBDCBB3F8B64896AD16B3A66B44877F?method=download&amp;shareKey=b5647bf99905c28ebe479774600eabe7" alt="test_ssl_module">  </p>
<h4 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h4><p>如果不安装libffi-devel，在编译时会报下面的错误<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">File <span class="string">"/root/Python-3.7.0/Lib/ctypes/__init__.py"</span>, line <span class="number">7</span>, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    <span class="keyword">from</span> _ctypes <span class="keyword">import</span> Union, Structure, Array</div><div class="line">ModuleNotFoundError: No module named <span class="string">'_ctypes'</span></div><div class="line">make: *** [install] Error <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>如果不安装openssl，在使用ssl模块时会报错<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">pip is configured with locations that require TLS/SSL, however the ssl module in Python is </div><div class="line">not available.Collecting douyin</div><div class="line">  Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after conn</div><div class="line">ection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/douyin/  Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after conn</div><div class="line">ection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/douyin/  Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after conn</div><div class="line">ection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/douyin/  Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after conn</div><div class="line">ection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/douyin/  Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after conn</div><div class="line">ection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/douyin/  Could not fetch URL https://pypi.org/simple/douyin/: There was a problem confirming the s</div><div class="line">sl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/douyin/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping  Could not find a version that satisfies the requirement douyin (from versions: )</div><div class="line">No matching distribution found for douyin</div><div class="line">pip is configured with locations that require TLS/SSL, however the ssl module in Python is </div><div class="line">not available.Could not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl ce</div><div class="line">rtificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping</div></pre></td></tr></table></figure></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">You are using pip version <span class="number">10.0</span><span class="number">.1</span>, however version <span class="number">18.1</span> <span class="keyword">is</span> available.</div><div class="line">You should consider upgrading via the <span class="string">'pip install --upgrade pip'</span> command.</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># python3.7 -m pip install --upgrade pip</span></div></pre></td></tr></table></figure>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/11/04/Python升级/">http://www.yfshare.vip/2018/11/04/Python升级/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python是一种解释型、面向对象、动态数据类型的高级程序设计语言。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.yfshare.vip/categories/Python/"/>
    
    
      <category term="Python" scheme="http://www.yfshare.vip/tags/Python/"/>
    
      <category term="SSL" scheme="http://www.yfshare.vip/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>node_exporter自定义key</title>
    <link href="http://www.yfshare.vip/2018/09/29/node-exporter%E8%87%AA%E5%AE%9A%E4%B9%89key/"/>
    <id>http://www.yfshare.vip/2018/09/29/node-exporter自定义key/</id>
    <published>2018-09-29T14:04:34.000Z</published>
    <updated>2018-09-29T14:09:54.753Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>在部署完k8s及使用prometheus监控后，发现一个问题啊，那就是能不能像zabbix一样，自己定义key啊，监控自己的服务，毕竟官方提供的key也不能完全覆盖。。<br><a id="more"></a><br>在查阅官网资料发现，prometheus是可以使用自定义key的。<br>官方git地址：<a href="https://github.com/prometheus/node_exporter" target="_blank" rel="external">https://github.com/prometheus/node_exporter</a>  </p>
<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>官方描述：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">There is varying support <span class="keyword">for</span> collectors on each operating system. The tables below list all existing collectors and the supported systems.</div><div class="line">Collectors are enabled by providing a --collector.&lt;name&gt; flag. Collectors that are enabled by default can be disabled by providing a --no-collector.&lt;name&gt; flag.</div></pre></td></tr></table></figure></p>
<p>即通过官方提供的collector来实现自定义key功能。<br>具体的collector这里就不一一列出了，可<a href="https://github.com/prometheus/node_exporter#enabled-by-default" target="_blank" rel="external">参考这里</a>  </p>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><p>环境：<br>　　　Prometheus version 2.2.0<br>　　　node_exporter version 0.15.2<br>　　　Centos 7.4  </p>
<p>这里就以监控nginx页面的状态码为例了，使用的是<code>textfile</code>这个collector  </p>
<h4 id="监控脚本"><a href="#监控脚本" class="headerlink" title="监控脚本"></a>监控脚本</h4><p>编写和zabbix类似的监控脚本并赋予其返回值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat node_nginx_testpage_status</span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#Monitor nginx test page.</span></div><div class="line">NGINX_PATH=<span class="string">'/etc/nginx'</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="_">-d</span> <span class="string">"<span class="variable">$&#123;NGINX_PATH&#125;</span>"</span> ];<span class="keyword">then</span> </div><div class="line">NGINX_PORT=<span class="string">'80'</span></div><div class="line"><span class="comment">#NGINX_PORT=`grep -v "#"  /etc/nginx/nginx.conf | grep listen |awk -F ";" '&#123;print $1&#125;' |awk '&#123;print $2&#125;'`</span></div><div class="line">/usr/bin/curl -o /dev/null --retry 1 --max-time 3 -w %&#123;http_code&#125; <span class="_">-s</span> <span class="string">"http://127.0.0.1:<span class="variable">$&#123;NGINX_PORT&#125;</span>"</span>| grep -c <span class="string">'200'</span></div><div class="line"><span class="keyword">fi</span></div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># sh node_nginx_testpage_status</span></div><div class="line">1</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat /etc/profile.d/node_exporter.sh</span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">node_exporter_HOME=<span class="string">'/usr/local/node_exporter'</span></div><div class="line">PATH=<span class="variable">$node_exporter_HOME</span>:<span class="variable">$PATH</span></div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>编写脚本生成key<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat zabbix_runner </span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment"># Runs a textfile collector.</span></div><div class="line"></div><div class="line">textfile_dir=$(dirname <span class="variable">$0</span>)</div><div class="line"><span class="built_in">source</span> /etc/profile.d/node_exporter.sh</div><div class="line">metric=<span class="string">"<span class="variable">$1</span>"</span></div><div class="line"><span class="built_in">shift</span></div><div class="line">script=<span class="string">"<span class="variable">$textfile_dir</span>/<span class="variable">$metric</span>"</span></div><div class="line">prom_file=<span class="string">"<span class="variable">$textfile_dir</span>/<span class="variable">$metric</span>"</span>.prom</div><div class="line"></div><div class="line"><span class="keyword">if</span> [[ ! -x <span class="string">"<span class="variable">$script</span>"</span> || <span class="_">-d</span> <span class="string">"<span class="variable">$script</span>"</span> ]]; <span class="keyword">then</span></div><div class="line">  <span class="built_in">echo</span> <span class="string">"ERROR: Can't find script for '<span class="variable">$metric</span>'. Aborting."</span></div><div class="line">  <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">VALUE=`<span class="string">"<span class="variable">$script</span>"</span> <span class="string">"<span class="variable">$@</span>"</span>`</div><div class="line"><span class="keyword">if</span> [[ ! -n <span class="variable">$VALUE</span> ]]; <span class="keyword">then</span></div><div class="line">    <span class="built_in">exit</span> 0</div><div class="line">    <span class="comment"># echo "ERROR: Can't get value for '$metric'. Aborting."</span></div><div class="line">    <span class="comment"># exit 1</span></div><div class="line"><span class="keyword">else</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"# TYPE <span class="variable">$&#123;metric&#125;</span> gauge"</span>&gt; <span class="string">"<span class="variable">$prom_file</span>"</span>.$$</div><div class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;metric&#125;</span> <span class="variable">$&#123;VALUE&#125;</span>"</span> &gt;&gt; <span class="string">"<span class="variable">$prom_file</span>"</span>.$$ &amp;&amp; mv <span class="string">"<span class="variable">$prom_file</span>"</span>.$$ <span class="string">"<span class="variable">$prom_file</span>"</span></div><div class="line"><span class="keyword">fi</span> </div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># chmod +x node_nginx_testpage_status</span></div><div class="line">[root@localhost ~]<span class="comment"># sh zabbix_runner node_nginx_testpage_status</span></div></pre></td></tr></table></figure>
<p>zabbix_runner脚本会生成<code>node_nginx_testpage_status.prom</code>文件，该文件记录当前监控指标的状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat node_nginx_testpage_status.prom</span></div><div class="line"><span class="comment"># TYPE node_nginx_testpage_status gauge</span></div><div class="line">node_nginx_testpage_status 1</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>启动node_exporter<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># /usr/local/node_exporter/node_exporter --web.listen-address=:9100 --collector.textfile.directory=/root/</span></div></pre></td></tr></table></figure></p>
<ul>
<li><code>--collector.textfile.directory</code>指定<code>textfile</code>收集器读取文件的目录。根据官网说明，<code>textfile</code>收集器会读取以<code>.prom</code>结尾的文件  </li>
</ul>
<p>访问prometheus Dashboard<br><a href="http://ip:9090" target="_blank" rel="external">http://ip:9090</a>  </p>
<p>首先先确认prometheus与node_exporter建立连接<br><img src="https://note.youdao.com/yws/api/personal/file/87B6E9F59C6541F5A6D6A3A2B4C5B700?method=download&amp;shareKey=885e2641c12a47114e2bf203db8943e4" alt="node_exporter_key">  </p>
<p>输入在<code>node_nginx_testpage_status.prom</code>文件中生成的key<br><img src="https://note.youdao.com/yws/api/personal/file/CE364CF089124053A580A8CC5F0314B5?method=download&amp;shareKey=373b947e4f6e88f5be8c61ed89a8bbad" alt="node_exporter_key"><br>这样就完成了node_exporter自定义key  </p>
<p>接下来把其放到定时任务中即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat node_exporter_key.sh </span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#这里存储所有node_exporter自定义key</span></div><div class="line"></div><div class="line"><span class="comment">#监控脚本存储目录</span></div><div class="line">scripts=<span class="string">'/root'</span></div><div class="line"></div><div class="line"><span class="comment">#zabbix_runner存储目录</span></div><div class="line">zabbix_runner_dir=<span class="string">'/root'</span></div><div class="line"></div><div class="line"><span class="comment">#注：需要进入监控脚本目录后执行命令，否则会报"ERROR: Can't get value for '$metric'. Aborting."。即脚本文件找不到，是脚本目录不对</span></div><div class="line"><span class="comment">#监控nginx testpage</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$scripts</span></div><div class="line">/bin/bash <span class="variable">$zabbix_runner_dir</span>/zabbix_runner node_nginx_testpage_status</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># crontab -l</span></div><div class="line"><span class="comment">#获取node_exporter自定义key</span></div><div class="line">*/1 * * * * /bin/bash /root/node_exporter_key.sh</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><p><img src="https://note.youdao.com/yws/api/personal/file/FF00A411CA8D426994E3A3E2EC7882D4?method=download&amp;shareKey=5814789420b234dec300c1765d1f2e2f" alt="node_exporter_key">  </p>
<p>附件：<br><a href="https://note.youdao.com/yws/api/personal/file/D56F016DBFCB42F39F2263BDCE3306EE?method=download&amp;shareKey=6cf1afcfc8f377aedf9fc34ae6d137b5" target="_blank" rel="external">zabbix_runner</a><br><a href="https://note.youdao.com/yws/api/personal/file/64E262258A4B4FD68F6D888B9AC03FFD?method=download&amp;shareKey=ecd61fdba126cdaca22b57500b7527be" target="_blank" rel="external">node_nginx_testpage_status</a><br><a href="https://note.youdao.com/yws/api/personal/file/67FCF3AD71024400BA69FAEACF5B7D19?method=download&amp;shareKey=84d3478ec225f0a10630075f2e4f4233" target="_blank" rel="external">node_exporter_key.sh</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/09/29/node-exporter自定义key/">http://www.yfshare.vip/2018/09/29/node-exporter自定义key/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在部署完k8s及使用prometheus监控后，发现一个问题啊，那就是能不能像zabbix一样，自己定义key啊，监控自己的服务，毕竟官方提供的key也不能完全覆盖。。&lt;br&gt;
    
    </summary>
    
      <category term="K8S" scheme="http://www.yfshare.vip/categories/K8S/"/>
    
    
      <category term="prometheus" scheme="http://www.yfshare.vip/tags/prometheus/"/>
    
      <category term="node_exporter" scheme="http://www.yfshare.vip/tags/node-exporter/"/>
    
      <category term="key" scheme="http://www.yfshare.vip/tags/key/"/>
    
      <category term="monitor" scheme="http://www.yfshare.vip/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>Python运算符</title>
    <link href="http://www.yfshare.vip/2018/08/04/Python%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://www.yfshare.vip/2018/08/04/Python运算符/</id>
    <published>2018-08-04T11:44:54.000Z</published>
    <updated>2018-08-04T12:12:20.475Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>运算符的优先级：<code>+</code>和<code>-</code>优先级最低，<code>*</code>,<code>/</code>,<code>//</code>,<code>%</code>优先级较高，单目运算符<code>+</code>和<code>-</code>优先级更高，乘方的优先级最高<br><a id="more"></a></p>
<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><p>环境：<br>　　　python 2.7<br>　　　centos 7.5  </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="number">-2</span> * <span class="number">4</span> + <span class="number">3</span> ** <span class="number">2</span></div><div class="line"><span class="number">1</span></div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure>
<h3 id="算数运算"><a href="#算数运算" class="headerlink" title="算数运算"></a>算数运算</h3><ul>
<li>字符串之间使用加号(<code>+</code>)可以做字符串拼接  </li>
<li>只要除数或被除数中有一个数是浮点数，那么得到的结果也是浮点数  </li>
</ul>
<table><tr><td>运算符</td><td>描述</td><td>示例</td></tr><tr><td>+</td><td>两个对象相加</td><td>&gt;&gt;&gt;print ‘abc’+’def’<br>abcdef<br>&gt;&gt;&gt;print 123+234<br>357<br>&gt;&gt;&gt;</td></tr><tr><td>-</td><td>两个对象相减</td><td>&gt;&gt;&gt;print 123-456<br>-333<br>&gt;&gt;&gt;</td></tr><tr><td>*</td><td>两个数相乘或返回一个重复若干次的序列</td><td>&gt;&gt;&gt;print 123*456<br>56088<br>&gt;&gt;&gt;print ‘abc’*2<br>abcabc<br>&gt;&gt;&gt;</td></tr><tr><td>/</td><td>两个数相除</td><td>&gt;&gt;&gt;print 2/3<br>0<br>&gt;&gt;&gt;print 2/3.0<br>0.666666666667<br>&gt;&gt;&gt;print 2.0/3<br>0.666666666667<br>&gt;&gt;&gt;</td></tr><tr><td>//</td><td>整除，返回商的整数部分</td><td>&gt;&gt;&gt;print 3//2<br>1<br>&gt;&gt;&gt;print 3//2.0<br>1.0<br>&gt;&gt;&gt;</td></tr><tr><td>%</td><td>求余/取模，返回除法的余数</td><td>&gt;&gt;&gt;print 4%3<br>1<br>&gt;&gt;&gt;print 4%3.0<br>1.0<br>&gt;&gt;&gt;print 4%2.0<br>0.0<br>&gt;&gt;&gt;print 4%2<br>0<br>&gt;&gt;&gt;</td></tr><tr><td>**</td><td>求幂/次方</td><td>&gt;&gt;&gt;print 2**3<br>8<br>&gt;&gt;&gt;print 2**3.0<br>8.0<br>&gt;&gt;&gt;</td></tr></table>

<h3 id="赋值运算"><a href="#赋值运算" class="headerlink" title="赋值运算"></a>赋值运算</h3><table><tr><td>运算符</td><td>描述</td><td>实例</td><td>示例</td></tr><tr><td>=</td><td>简单赋值运算符</td><td>a = 5,b = 3,c = a - b</td><td>&gt;&gt;&gt;a = 5<br>&gt;&gt;&gt;b = 3<br>&gt;&gt;&gt;c = a - b<br>&gt;&gt;&gt;print ‘c的值为:’,c<br>c的值为:2<br>&gt;&gt;&gt;</td></tr><tr><td>+=</td><td>加法赋值运算符</td><td>a+= b 相当于 a = a+b</td><td>&gt;&gt;&gt;a = 5<br>&gt;&gt;&gt;b = 3<br>&gt;&gt;&gt;a+= b<br>&gt;&gt;&gt;print ‘a的值为:’,a<br>a的值为:8<br>&gt;&gt;&gt;</td></tr><tr><td>-=</td><td>减法赋值运算符</td><td>a -= b 相当于 a = a -b</td><td>&gt;&gt;&gt;a = 5<br>&gt;&gt;&gt;b = 3<br>&gt;&gt;&gt;a -= b<br>&gt;&gt;&gt;print ‘a的值为:’,a<br>a的值为:2<br>&gt;&gt;&gt;</td></tr><tr><td>*=</td><td>乘法赋值运算符</td><td>a *= b 相当于 a = ab</td><td>&gt;&gt;&gt;a = 5<br>&gt;&gt;&gt;b = 3<br>&gt;&gt;&gt;a *= b<br>&gt;&gt;&gt;print ‘a的值为:’,a<br>a的值为:15<br>&gt;&gt;&gt;</td></tr><tr><td>/=</td><td>除法赋值运算符</td><td>a /= b 相当于 a = a / b</td><td>&gt;&gt;&gt;a = 5<br>&gt;&gt;&gt;b = 3<br>&gt;&gt;&gt;a /= b<br>&gt;&gt;&gt;print ‘a的值为:’,a<br>a的值为:1<br>&gt;&gt;&gt;</td></tr><tr><td>//=</td><td>取整除赋值运算符</td><td>a //= b 相当于 a = a // b</td><td>&gt;&gt;&gt;a = 5<br>&gt;&gt;&gt;b = 3<br>&gt;&gt;&gt;a //= b<br>&gt;&gt;&gt;print ‘a的值为:’,a<br>a的值为:1<br>&gt;&gt;&gt;</td></tr><tr><td>%=</td><td>取模赋值运算符</td><td>a %= b 相当于 a = a % b</td><td>&gt;&gt;&gt;a = 5<br>&gt;&gt;&gt;b = 3<br>&gt;&gt;&gt;a %= b<br>&gt;&gt;&gt;print ‘a的值为:’,a<br>a的值为:2<br>&gt;&gt;&gt;</td></tr><tr><td>**=</td><td>幂赋值运算符符</td><td>a **= b 相当于 a = a^b</td><td>&gt;&gt;&gt;a = 5<br>&gt;&gt;&gt;b = 3<br>&gt;&gt;&gt;a **= b<br>&gt;&gt;&gt;print ‘a的值为:’,a<br>a的值为:125<br>&gt;&gt;&gt;</td></tr></table>

<p>python 不支持C语言中的自增1和自减1运算符，因为<code>+</code>和<code>-</code>也是单目运算，python会将<code>--n</code>解释为<code>-(-n)</code>从而得到n，同样，<code>++n</code>的结果也是n。  </p>
<h3 id="比较运算"><a href="#比较运算" class="headerlink" title="比较运算"></a>比较运算</h3><table><tr><td>运算符</td><td>描述</td><td>示例</td></tr><tr><td>&lt;</td><td>小于，比较运算符返回1表示真，返回0表示假。<br>这分别与特殊的变量True和False等价</td><td>&gt;&gt;&gt;a=21<br>&gt;&gt;&gt;b=10<br>&gt;&gt;&gt;a&gt;b<br>True<br>&gt;&gt;&gt;</td></tr><tr><td>&lt;=</td><td>小于或等于</td><td>&gt;&gt;&gt;a=21<br>&gt;&gt;&gt;b=31<br>&gt;&gt;&gt;a&lt;=b<br>True<br>&gt;&gt;&gt;</td></tr><tr><td>&gt;</td><td>大于</td><td>&gt;&gt;&gt;a=21<br>&gt;&gt;&gt;b=31<br>&gt;&gt;&gt;a&gt;b<br>False<br>&gt;&gt;&gt;</td></tr><tr><td>&gt;=</td><td>大于或等于</td><td>&gt;&gt;&gt;a=31<br>&gt;&gt;&gt;b=21<br>&gt;&gt;&gt;a&gt;=b<br>True<br>&gt;&gt;&gt;</td></tr><tr><td>==</td><td>等于</td><td>&gt;&gt;&gt;a=31<br>&gt;&gt;&gt;b=21<br>&gt;&gt;&gt;a==b<br>False<br>&gt;&gt;&gt;</td></tr><tr><td>!=</td><td>不等于</td><td>&gt;&gt;&gt;a=31<br>&gt;&gt;&gt;b=21<br>&gt;&gt;&gt;a!=b<br>True<br>&gt;&gt;&gt;</td></tr><tr><td>is</td><td>判断两个标识符是否引用自一个对象</td><td>&gt;&gt;&gt;x = [4,5,6]<br>&gt;&gt;&gt;y = [7,8,9]<br>&gt;&gt;&gt;x is y<br>False<br>&gt;&gt;&gt;</td></tr><tr><td>is not</td><td>判断两个标识符是否引用自不同对象</td><td>&gt;&gt;&gt;x = [4,5,6]<br>&gt;&gt;&gt;y = [7,8,9]<br>&gt;&gt;&gt;x is not y<br>True<br>&gt;&gt;&gt;</td></tr></table>

<h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><h4 id="“真”值测试-Truth-Value-Testing"><a href="#“真”值测试-Truth-Value-Testing" class="headerlink" title="“真”值测试(Truth Value Testing)"></a>“真”值测试(Truth Value Testing)</h4><p>Python中的任何一个对象都可以被测试“真”值。可以这样理解：Python中的任何一个对象都可以转换为一个布尔值，而这个“真”值测试就是获取一个对象对应的布尔值的过程。<br>Python中只有下面这些值对应的布尔值为False：  </p>
<ul>
<li><code>None</code>  </li>
<li><code>False</code>  </li>
<li>数字类型中的<code>0</code>，如：<code>0</code>,<code>0.0</code>,<code>0j</code>  </li>
<li>任意空序列，如：<code>&#39;&#39;</code>,<code>()</code>,<code>[]</code>  </li>
<li>任意一个空映射，如：<code>{}</code>  </li>
<li>一个用户自定义类的实例。该用户自定义类中定义了一个<code>__bool__()</code>或<code>__len__()</code>方法，且实例调用该方法时返回整数0或布尔值False  </li>
</ul>
<p>除此之外，所有的其它值对应的布尔值都是True, 因此许多类型的对象永远是True。”真”值测试可以被用在 if或while条件中，也可以作为布尔操作的操作数。  </p>
<h4 id="布尔运算-Boolean-Operations"><a href="#布尔运算-Boolean-Operations" class="headerlink" title="布尔运算(Boolean Operations)"></a>布尔运算(Boolean Operations)</h4><p>Python中的逻辑运算称为“布尔运算(Boolean Operations)”，操作符包括：and(与)、or(或)、not(非)。  </p>
<table><tr><td>运算符</td><td>逻辑表达式</td><td>描述</td><td>示例</td></tr><tr><td>and</td><td>x and y</td><td>与运算，只有两个布尔值都为 True 时，计算结果才为 True</td><td>&gt;&gt;&gt;x = True<br>&gt;&gt;&gt;y = False<br>&gt;&gt;&gt;x and y<br>False<br>&gt;&gt;&gt;</td></tr><tr><td>or</td><td>x or y</td><td>或运算，只要有一个布尔值为 True，计算结果就是 True</td><td>&gt;&gt;&gt;x = True<br>&gt;&gt;&gt;y = False<br>&gt;&gt;&gt;x or y<br>True<br>&gt;&gt;&gt;</td></tr><tr><td>not</td><td>not x</td><td>非运算，把True变为False，或者把False变为True</td><td>&gt;&gt;&gt;x = True<br>&gt;&gt;&gt;not x<br>False<br>&gt;&gt;&gt;</td></tr></table>

<h3 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h3><p>按位运算是指把数字转换为二进制来进行计算。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#左边为十进制，右边为二进制</span></div><div class="line"><span class="number">60</span> ，<span class="number">0011</span> <span class="number">1100</span></div><div class="line"><span class="number">13</span> ，<span class="number">0000</span> <span class="number">1101</span></div></pre></td></tr></table></figure></p>
<table><tr><td>运算符</td><td>描述</td><td>实例</td><td>示例</td></tr><tr><td>&amp;</td><td>按位与，参与运算的两个值。<br>如果相应的二进制位都为1，则该位结果为1，否则为0</td><td>a&amp;b对应的二进制结果为 0000 1100，十进制为12</td><td>&gt;&gt;&gt;a=60<br>&gt;&gt;&gt;b=13<br>&gt;&gt;&gt;c=a &amp; b<br>&gt;&gt;&gt;print c<br>12<br>&gt;&gt;&gt;</td></tr><tr><td>|</td><td>按位或运算符，<br>只要对应的二个二进位有一个为1时，结果位就为1</td><td>(a|b)输出结果61，<br>二进制解释： 0011 1101</td><td>&gt;&gt;&gt;a=60<br>&gt;&gt;&gt;b=13<br>&gt;&gt;&gt;c=a|b<br>&gt;&gt;&gt;print c<br>61<br>&gt;&gt;&gt;</td></tr><tr><td>^</td><td>按位异或运算符，<br>当两对应的二进位相异时，结果为1</td><td>(a^b)输出结果49，<br>二进制解释： 0011 0001</td><td>&gt;&gt;&gt;a=60<br>&gt;&gt;&gt;b=13<br>&gt;&gt;&gt;c=a^b<br>&gt;&gt;&gt;print c<br>49<br>&gt;&gt;&gt;</td></tr><tr><td>~</td><td>按位取反运算符，对数据的每个二进制位取反，<br>即把1变为0,把0变为1。~x 类似于-x-1</td><td>(~a)输出结果-61，<br>二进制解释：1100 0011，<br>在一个有符号二进制数的补码形式</td><td>&gt;&gt;&gt;a=60<br>&gt;&gt;&gt;b=~a<br>&gt;&gt;&gt;print b<br>-61<br>&gt;&gt;&gt;</td></tr><tr><td>&lt;&lt;</td><td>左移动运算符，运算数的各二进位全部左移若干位，<br>由 &lt;&lt; 右边的数字指定了移动的位数，高位丢弃，低位补0</td><td>a &lt;&lt; 2输出结果240，<br>二进制解释： 1111 0000</td><td>&gt;&gt;&gt;a=60<br>&gt;&gt;&gt;b=a&lt;<2< br="">&gt;&gt;&gt;print b<br>240<br>&gt;&gt;&gt;</2<></td></tr><tr><td>&gt;&gt;</td><td>右移动运算符，<br>把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，<br>&gt;&gt;右边的数字指定了移动的位数</td><td>a&gt;&gt;2输出结果15，<br>二进制解释：0000 1111</td><td>&gt;&gt;&gt;a=60<br>&gt;&gt;&gt;b=a&gt;&gt;2<br>&gt;&gt;&gt;print b<br>15<br>&gt;&gt;&gt;</td></tr></table>

<h3 id="Python成员运算符"><a href="#Python成员运算符" class="headerlink" title="Python成员运算符"></a>Python成员运算符</h3><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody>
<tr>
<td>in</td>
<td>如果在指定的序列中找到值返回 True，否则返回 False</td>
<td>x 在 y 序列中 , 如果 x 在 y 序列中返回 True</td>
</tr>
<tr>
<td>not in</td>
<td>如果在指定的序列中没有找到值返回 True，否则返回 False</td>
<td>x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#-*- coding: UTF-8 -*-</span></div><div class="line">a=<span class="number">10</span></div><div class="line">b=<span class="number">20</span></div><div class="line"></div><div class="line">list=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</div><div class="line"><span class="keyword">if</span> a <span class="keyword">in</span> list:</div><div class="line">   <span class="keyword">print</span> <span class="string">'变量 a 在给定的列表中 list 中'</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">   <span class="keyword">print</span> <span class="string">'变量 a 不在给定的列表中 list 中'</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> b <span class="keyword">not</span> <span class="keyword">in</span> list:</div><div class="line">   <span class="keyword">print</span> <span class="string">'变量 b 不在给定的列表中 list 中'</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">   <span class="keyword">print</span> <span class="string">'变量 b 在给定的列表中 list 中'</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># python in.py</span></div><div class="line">变量 a 不在给定的列表中 list 中</div><div class="line">变量 b 不在给定的列表中 list 中</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<h3 id="Python运算符优先级"><a href="#Python运算符优先级" class="headerlink" title="Python运算符优先级"></a>Python运算符优先级</h3><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>**</code></td>
<td>指数(最高优先级)</td>
</tr>
<tr>
<td><code>~</code>,<code>+</code>,<code>-</code></td>
<td>按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td>
</tr>
<tr>
<td><code>*</code>,<code>/</code>,<code>%</code>,<code>//</code></td>
<td>乘,除,取模和取整除</td>
</tr>
<tr>
<td><code>+</code>,<code>-</code></td>
<td>加法减法</td>
</tr>
<tr>
<td><code>&gt;&gt;</code>,<code>&lt;&lt;</code></td>
<td>右移,左移运算符</td>
</tr>
<tr>
<td><code>&amp;</code></td>
<td>位’AND’</td>
</tr>
<tr>
<td><code>^</code></td>
<td>位运算符</td>
</tr>
<tr>
<td><code>&lt;=</code>,<code>&lt;</code>,<code>&gt;</code>,<code>&gt;=</code></td>
<td>比较运算符</td>
</tr>
<tr>
<td><code>&lt;&gt;</code>,<code>==</code>,<code>!=</code></td>
<td>等于运算符</td>
</tr>
<tr>
<td><code>=</code>,<code>%=</code>,<code>/=</code>,<code>//=</code>,<code>-=</code>,<code>+=</code>,<code>*=</code>,<code>**=</code></td>
<td>赋值运算符</td>
</tr>
<tr>
<td><code>is is not</code></td>
<td>身份运算符</td>
</tr>
<tr>
<td><code>in not in</code></td>
<td>成员运算符</td>
</tr>
<tr>
<td><code>not and or</code></td>
<td>逻辑运算符</td>
</tr>
</tbody>
</table>
<h3 id="单目运算符"><a href="#单目运算符" class="headerlink" title="单目运算符"></a>单目运算符</h3><p>指运算所需变量为一个的运算符，又叫一元运算符，其中有：  </p>
<ul>
<li>逻辑非运算符：<code>!</code>  </li>
<li>按位取反运算符：<code>~</code>  </li>
<li>自增自减运算符：<code>++</code>,<code>–</code>  </li>
<li>负号运算符：<code>-</code>  </li>
<li>类型转换运算符：<code>(类型)</code>  </li>
<li>指针运算符和取地址运算符：<code>*</code>,<code>&amp;</code>  </li>
<li>长度运算符：<code>sizeof</code>等  </li>
</ul>
<h3 id="双目运算符"><a href="#双目运算符" class="headerlink" title="双目运算符"></a>双目运算符</h3><p>指对两个变量进行操作  </p>
<ul>
<li>初等运算符  <ul>
<li>下标运算符：<code>[]</code>  </li>
<li>分量运算符：<code>-&gt;</code>(向结构体成员运算符)  </li>
<li>结构体成员运算符：<code>_</code>  </li>
</ul>
</li>
<li>算术运算符  <ul>
<li>乘法运算符：<code>*</code>  </li>
<li>除法运算符：<code>/</code>  </li>
<li>取余运算符：<code>%</code>  </li>
<li>加法运算符：<code>+</code>  </li>
<li>减法运算符：<code>-</code>  </li>
</ul>
</li>
<li>关系运算符  <ul>
<li>等于运算符：<code>==</code>  </li>
<li>不等于运算符：<code>!=</code>  </li>
<li>关系运算符：<code>&lt;</code>,<code>&gt;</code>,<code>&lt;=</code>,<code>&gt;=</code>  </li>
</ul>
</li>
<li>逻辑运算符  <ul>
<li>逻辑与运算符：<code>&amp;&amp;</code>  </li>
<li>逻辑或运算符：<code>||</code>  </li>
<li>逻辑非运算符：<code>!</code>  </li>
</ul>
</li>
<li>位运算符  <ul>
<li>按位与运算符：<code>&amp;</code>  </li>
<li>按位异或运算符：<code>^</code>  </li>
<li>按位或运算符：<code>|</code>  </li>
<li>左移动运算符：<code>&lt;&lt;</code>  </li>
<li>右移动运算符：<code>&gt;&gt;</code>  </li>
</ul>
</li>
<li>赋值运算符  <ul>
<li>简单赋值运算符：<code>=</code></li>
<li>加法赋值运算符：<code>+=</code></li>
<li>减法赋值运算符：<code>-=</code></li>
<li>乘法赋值运算符：<code>*=</code></li>
<li>除法赋值运算符：<code>/=</code></li>
<li>取模赋值运算符：<code>%=</code></li>
<li>左移动运算符：<code>&gt;&gt;=</code>(对变量进行位运算移位之后的结果再赋值给原来的变量)  </li>
<li>右移动运算符：<code>&lt;&lt;=</code>(同上)</li>
<li>实现按位与运算符：<code>&amp;=</code>，<code>a = iand(a, b) is equivalent to a &amp;= b</code> <a href="https://docs.python.org/2/library/operator.html?highlight=operator" target="_blank" rel="external">参考</a>，<a href="https://blog.csdn.net/u012332571/article/details/70141438" target="_blank" rel="external">参考</a>  </li>
<li>实现按位或赋值运算符：<code>|=</code>，<code>a|=2等价于a=a|2()</code>；<code>a = ior(a, b) is equivalent to a |= b</code>。参考同上  </li>
<li>按位异或赋值运算符：<code>^=</code>；<code>a = ixor(a, b) is equivalent to a ^= b</code>。参考同上  </li>
</ul>
</li>
<li>逗号运算符：<code>,</code>  </li>
</ul>
<h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h3><p>三目运算符对三个变量进行操作，指的是计算机c语言的重要组成部分。条件运算符是唯一有3个操作数的运算符，所以有时又称为三元运算符。一般来说，三目运算符的结合性是右结合的。  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/08/04/Python运算符/">http://www.yfshare.vip/2018/08/04/Python运算符/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;运算符的优先级：&lt;code&gt;+&lt;/code&gt;和&lt;code&gt;-&lt;/code&gt;优先级最低，&lt;code&gt;*&lt;/code&gt;,&lt;code&gt;/&lt;/code&gt;,&lt;code&gt;//&lt;/code&gt;,&lt;code&gt;%&lt;/code&gt;优先级较高，单目运算符&lt;code&gt;+&lt;/code&gt;和&lt;code&gt;-&lt;/code&gt;优先级更高，乘方的优先级最高&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.yfshare.vip/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.yfshare.vip/tags/python/"/>
    
      <category term="运算符" scheme="http://www.yfshare.vip/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>运维知识体系之操作系统层</title>
    <link href="http://www.yfshare.vip/2018/07/27/%E8%BF%90%E7%BB%B4%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E4%B9%8B%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82/"/>
    <id>http://www.yfshare.vip/2018/07/27/运维知识体系之操作系统层/</id>
    <published>2018-07-27T14:03:19.000Z</published>
    <updated>2018-07-28T10:26:16.370Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>到目前为止，也工作了好几年了吧。曾经某次听赵班长的公开课，听着听着发现，越听越懵…有种啥也不会的感觉..-_-!!!<br>但是呢，这些东西也确实是在工作中用到过，只是比较零碎。某些名词也确实很熟悉，但是呢，比如你现在问我里面具体的细节，我会用一脸懵逼来回应你，哈哈。<br>这些天抽空对着赵班长总结的表格，尝试在网上收集了些资料，整理出下面的文章。如果有不对的地方，欢迎大家指点。在整理这些东西的过程中，也是对我自己所掌握知识的一种回顾吧。让我们为了自己心中所想，一起努力吧！<br><a id="more"></a></p>
<p>整理运维知识体系之操作系统层<br>参考：<a href="https://www.unixhot.com/page/ops" target="_blank" rel="external">https://www.unixhot.com/page/ops</a>  </p>
<table><tr><td>运维架构层级</td><td>运维角度</td><td>内容描述/主要技术关键词</td><td>监控体系</td><td>自动化/DevOps</td><td>云计算</td></tr><tr><td rowspan="5">操作系统层</td><td>CPU</td><td>CPU运行级别、CPU管理(进程管理、taskset、intel VT-X)、使用率、上下文切换、运行队列、进程调度、系统调用</td><td>mpstat、strace</td><td rowspan="5">虚拟化</td><td rowspan="5">公有云弹性计算产品</td></tr><tr><td>内存</td><td>虚拟内存、SWAP换入换出、内存寻址、内存管理（Buffer Cache、HugePages、ksmd、EPT）</td><td>vmstat、free</td></tr><tr><td>I/O(磁盘)</td><td>缺页中断、IOPS(顺序IO、随机IO)、IO管理(IO调度算法、virtio)、VFS</td><td>iostat、iotop</td></tr><tr><td>I/O(网络)</td><td>TCP/IP(三次握手、四次挥手、状态转换、TCP队列)、IO模型、Bonding、Bridge、网络管理(iftop、tcpdump)</td><td>iftop</td></tr><tr><td>内核/Shell</td><td>内核定制、内存参数优化、脚本编程(AWK、Sed、Shell、Python、PHP、Perl、Ruby、Lua)</td><td>系统监控</td></tr></table>

<h4 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h4><p><a href="https://blog.csdn.net/albenxie/article/details/72885951" target="_blank" rel="external">文档参考</a>  </p>
<ul>
<li>CPU运行级别  <ol>
<li>Intel的 x86处理器是通过Ring级别来进行访问控制的，级别共分4层，RING0,RING1,RING2,RING3。Windows只使用其中的两个级别RING0和RING3。RING0层拥有最高的权限，RING3层拥有最低的权限。  </li>
<li>按照Intel原有的构想，应用程序工作在RING3层，只能访问RING3层的数据，操作系统工作在RING0层，可以访问所有层的数据，而其他驱动程序位于RING1、RING2层，每一层只能访问本层以及权限更低层的数据。RING设计的初衷是将系统权限与程序分离出来，使之能够让OS更好的管理当前系统资源，也使得系统更加稳定。  </li>
<li>应用程序的代码运行在最低运行级别上ring3上，不能做受控操作。如果要做，比如要访问磁盘，写文件，那就要通过执行系统调用（函数），执行系统调用的时候，CPU的运行级别会发生从ring3到ring0的切换，并跳转到系统调用对应的内核代码位置执行，这样内核就为你完成了设备访问，完成之后再从ring0返回ring3。这个过程也称作用户态和内核态的切换。  </li>
<li>驱动程序都是工作在ring0上，否则驱动不了设备。  </li>
</ol>
</li>
<li>intel VT-X  <ol>
<li>虚拟化在这里就遇到了一个难题，因为宿主操作系统是工作在ring0的，客户操作系统就不能也在ring0了。但执行的指令还是一样的，这样肯定不行，因为没权限，跑不起来。一般客户操作系统执行特权指令时，会触发异常（CPU机制，没权限的指令，触发异常），然后VMM捕获这个异常，在异常里面做翻译，模拟，最后返回到客户操作系统内，客户操作系统认为自己的特权指令工作正常，继续运行。但是这个性能损耗非常的大。以前只是简单的执行一条指令，现在却需要复杂的异常处理。  </li>
<li>后来，CPU厂商开始支持虚拟化，支持Intel-VT 的CPU，有VMX root operation 和 VMX non-root operation两种模式，两种模式都支持Ring 0 ~ Ring 3 这 4 个运行级别。这时VMM可以运行在VMX root operation模式下，客户OS运行在VMX non-root operation模式下。即硬件这层做了些区分，在全虚拟化下，有些靠“捕获异常-翻译-模拟”的实现就不需要了。  </li>
</ol>
</li>
<li>进程管理  <ol>
<li>进程是正在运行的程序实体，并且包括这个运行的程序中占据的所有系统资源，如CPU，IO，内存，网络资源等。进程和程序的区别在于：程序是指令的集合，是程序的静态描述，而进程是动态的一次活动的执行。<a href="http://www.cnblogs.com/sun1993/p/7777589.html" target="_blank" rel="external">参考</a>  </li>
</ol>
</li>
<li><p>taskset  </p>
<ol>
<li>LINUX提供的一个命令，可以让某个程序运行在某个（或）某些CPU上。<a href="https://coolshell.cn/articles/7490.html" target="_blank" rel="external">参考性能调优攻略</a>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># taskset -p 31100</span></div><div class="line">pid 31100<span class="string">'s current affinity mask: f</span></div><div class="line"># 显示结果的 f 实际上是二进制4个低位均为1的bitmask，每一个1对应于1个CPU，表示该进程在4个CPU上运行</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># taskset -pc 2 31100</span></div><div class="line">pid 31100<span class="string">'s current affinity list: 0-3</span></div><div class="line">pid 31100's new affinity list: 2</div><div class="line"><span class="comment"># 2表示CPU将只会运行在第3个CPU上(从0开始计数)</span></div></pre></td></tr></table></figure>
</li>
<li><p>CPU使用率  </p>
<ol>
<li>反映的是当前cpu的繁忙程度，忽高忽低的原因在于占用cpu处理时间的进程可能处于io等待状态但却还未释放进入wait。  </li>
<li>平均负载(load average)是指某段时间内占用cpu时间的进程和等待cpu时间的进程数，这里等待cpu时间的进程是指等待被唤醒的进程，不包括处于wait状态进程。  </li>
<li>对于每一个CPU来说运行队列最好不要超过3。如果是双核CPU就不要超过6。如果队列长期保持在3以上，说明任何一个进程运行时都不能马上得到cpu的响应，这时可能需要考虑升级cpu。另外满负荷运行cpu的使用率最好是user空间保持在<code>65%～70%</code>，system空间保持在<code>30%</code>，空闲保持在<code>0%~5%</code>。  </li>
<li>top  </li>
</ol>
</li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>%us</td>
<td>用户空间程序的cpu使用率(没有通过nice调度)</td>
</tr>
<tr>
<td>%sy</td>
<td>系统空间的cpu使用率，主要是内核程序</td>
</tr>
<tr>
<td>%ni</td>
<td>用户空间且通过nice调度过的程序的cpu使用率</td>
</tr>
<tr>
<td>%id</td>
<td>空闲cpu</td>
</tr>
<tr>
<td>%wa</td>
<td>cpu运行时在等待io的时间</td>
</tr>
<tr>
<td>%hi</td>
<td>cpu处理硬中断的数量</td>
</tr>
<tr>
<td>%si</td>
<td>cpu处理软中断的数量</td>
</tr>
<tr>
<td>%st</td>
<td>被虚拟机偷走的cpu</td>
</tr>
</tbody>
</table>
<ol>
<li>vmstat  </li>
</ol>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td>运行队列(多少个进程真的分配到CPU)。当值超过CPU数目，就会出现CPU瓶颈。和CPU的负载有关系，一般负载超过3就比较高，超过5就很高，超过10就不正常，服务器状态很危险。top的负载类似每秒的运行队列，如果队列过大，表示CPU很繁忙，一般会造成CPU使用率很高。</td>
</tr>
<tr>
<td>b</td>
<td>阻塞的进程</td>
</tr>
<tr>
<td>swpd</td>
<td>虚拟内存使用的大小。如果大于0表示机器的物理内存不足</td>
</tr>
<tr>
<td>free</td>
<td>空闲的物理内存大小</td>
</tr>
<tr>
<td>buff</td>
<td>缓存(主要用于块设备)</td>
</tr>
<tr>
<td>cache</td>
<td>缓存(缓存文件)</td>
</tr>
<tr>
<td>si</td>
<td>每秒从磁盘读入虚拟内存的大小。如果大于0表示物理内存不够或内存泄漏</td>
</tr>
<tr>
<td>so</td>
<td>每秒虚拟内存写入磁盘的大小。如果大于0表示物理内存不够或内存泄漏</td>
</tr>
<tr>
<td>bi</td>
<td>块设备每秒写入的块数量，块设备指系统上所有的磁盘和其他设备，默认为1024byte</td>
</tr>
<tr>
<td>bo</td>
<td>块设备每秒读取的块数量，如果读取文件，bo会大于0。bi和bo一般都接近0，不然就是IO过于频繁</td>
</tr>
<tr>
<td>in</td>
<td>每秒CPU的中断次数，包括时间中断</td>
</tr>
<tr>
<td>cs</td>
<td>每秒上下文切换次数，在调用系统函数，就要进行上下文切换，线程的切换，也要进程上下文切换，这个值要越小越好，太大了，要考虑调低线程或者进程的数目。每次调用系统函数，代码就会进入内核空间，导致上下文切换，这个很耗资源。</td>
</tr>
<tr>
<td>us</td>
<td>用户CPU使用率</td>
</tr>
<tr>
<td>sy</td>
<td>系统CPU使用率，如果太高，表示系统调用时间长</td>
</tr>
<tr>
<td>id</td>
<td>空闲CPU时间，一般来说，id + us + sy = 100</td>
</tr>
<tr>
<td>wt</td>
<td>等待IO CPU时间</td>
</tr>
</tbody>
</table>
<ol>
<li><p>sar<br>sar命令语法和vmstat一样  </p>
<table><tr><td>命令</td><td>参数</td><td>描述</td></tr><tr><td rowspan="5">sar -q 1 5</td><td>runq-sz</td><td>运行队列的长度(等待运行的进程数)</td></tr><tr><td>plist-sz</td><td>进程列表中进程(processes)和线程(threads)的数量</td></tr><tr><td>ldavg-1</td><td>最后1分钟的系统平均负载(System load average)</td></tr><tr><td>ldavg-5</td><td>过去5分钟的系统平均负载</td></tr><tr><td>ldavg-15</td><td>过去15分钟的系统平均负载</td></tr></table>

<ol>
<li><p>mpstat  </p>
<table><tr><td>命令</td><td>参数</td><td>描述</td></tr><tr><td rowspan="8">mpstat 1 5</td><td>%user</td><td>处理用户进程所使用 CPU 的百分比</td></tr><tr><td>%nice</td><td>使用 nice 命令对进程进行降级时 CPU 的百分比</td></tr><tr><td>%system</td><td>内核进程使用的 CPU 百分比</td></tr><tr><td>%iowait</td><td>等待进行 I/O 所使用的 CPU 时间百分比</td></tr><tr><td>%irq</td><td>用于处理系统中断的 CPU 百分比</td></tr><tr><td>%soft</td><td>软件中断的 CPU 百分比</td></tr><tr><td>%idle</td><td>显示 CPU 的空闲百分比</td></tr><tr><td>%intr/s</td><td>显示每秒 CPU 接收的中断总数</td></tr></table>
</li>
<li><p>pidstat  </p>
<table><tr><td>命令</td><td>参数</td><td>描述</td></tr><tr><td rowspan="6">pidstat</td><td>%user</td><td>处理用户进程所使用 CPU 的百分比</td></tr><tr><td>%system</td><td>内核进程使用的 CPU 百分比</td></tr><tr><td>%guest</td><td>进程在虚拟机占用cpu的百分比</td></tr><tr><td>%CPU</td><td>进程占用cpu的百分比</td></tr><tr><td>CPU</td><td>处理进程的cpu编号</td></tr><tr><td>Command</td><td>当前进程对应的命令</td></tr><tr><td rowspan="6">pidstat -r</td><td>PID</td><td>进程标识符</td></tr><tr><td>Minflt/s</td><td>任务每秒发生的次要错误，不需要从磁盘中加载页</td></tr><tr><td>Majflt/s</td><td>任务每秒发生的主要错误，需要从磁盘中加载页</td></tr><tr><td>VSZ</td><td>虚拟地址大小，虚拟内存的使用KB</td></tr><tr><td>RSS</td><td>常驻集合大小，非交换区五里内存使用KB</td></tr><tr><td>Command</td><td>当前进程对应的命令</td></tr><tr><td rowspan="5">pidstat -d</td><td>PID</td><td>进程id</td></tr><tr><td>kB_rd/s</td><td>每秒从磁盘读取的KB</td></tr><tr><td>kB_wr/s</td><td>每秒写入磁盘KB</td></tr><tr><td>kB_ccwr/s</td><td>任务取消的写入磁盘的KB。当任务截断脏的pagecache的时候会发生</td></tr><tr><td>Command</td><td>当前进程对应的命令</td></tr><tr><td rowspan="4">pidstat -w -p PID</td><td>PID</td><td>进程id</td></tr><tr><td>Cswch/s</td><td>每秒主动任务上下文切换数量</td></tr><tr><td>Nvcswch/s</td><td>每秒被动任务上下文切换数量</td></tr><tr><td>Command</td><td>当前进程对应的命令</td></tr><tr><td rowspan="8">pidstat -t -p PID</td><td>TGID</td><td>主线程号</td></tr><tr><td>TID</td><td>线程id</td></tr><td>%user</td><td>处理用户进程所使用 CPU 的百分比</td><tr><td>%system</td><td>内核进程使用的 CPU 百分比</td></tr><tr><td>%guest</td><td>进程在虚拟机占用cpu的百分比</td></tr><tr><td>%CPU</td><td>进程占用cpu的百分比</td></tr><tr><td>CPU</td><td>处理进程的cpu编号</td></tr><tr><td>Command</td><td>当前进程对应的命令</td></tr><tr><td rowspan="5">pidstat -T ALL -p PID</td><td>PID</td><td>进程标识符</td></tr><tr><td>Usr-ms</td><td>任务和子线程在用户级别使用的毫秒数</td></tr><tr><td>System-ms</td><td>任务和子线程在系统级别使用的毫秒数</td></tr><tr><td>Guest-ms</td><td>任务和子线程在虚拟机(running a virtual processor)使用的毫秒数</td></tr><tr><td>Command</td><td>当前进程对应的命令</td></tr></table>

</li>
</ol>
</li>
</ol>
<ul>
<li><p>上下文切换<br><a href="https://www.jianshu.com/p/8c026542d121" target="_blank" rel="external">文档参考</a><br>现在linux是大多基于抢占式，CPU给每个任务一定的服务时间，当时间片轮转的时候，需要把当前状态保存下来，同时加载下一个任务，这个过程叫做上下文切换。时间片轮转的方式，使得多个任务利用一个CPU执行成为可能，但是保存现场和加载现场，也带来了性能消耗。<br>对于抢占式操作系统，引起上下文切换的原因大致有几下几种：  </p>
<ul>
<li>当前任务的时间片用完之后，系统CPU正常调度下一个任务  </li>
<li>当前任务碰到IO阻塞，调度线程将挂起此任务，继续下一个任务  </li>
<li>多个任务抢占锁资源，当前任务没有抢到，被调度器挂起，继续下一个任务  </li>
<li>用户代码挂起当前任务，让出CPU时间  </li>
<li>硬件中断  </li>
</ul>
<p>监测Linux的应用的时候，当CPU的利用率非常高，但是系统的性能却上不去的时候，不妨监控一下线程/进程的切换，看看是不是context switching导致的overhead过高。常用命令：<code>pidstat</code>，<code>vmstat</code>  </p>
</li>
<li><p>运行队列<br><a href="https://blog.csdn.net/qq_21127313/article/details/54706233" target="_blank" rel="external">文档参考</a>  </p>
<ol>
<li>run-queue：活动（正在运行）和排队的进程数。每个CPU都会维持一个运行队列，理想情况下，调度器会不断让队列中的进程运行。进程不是处在sleep状态就是runable状态。如果CPU过载，就会出现调度器跟不上系统的要求，导致可运行的进程会填满队列。队列愈大，程序执行时间就愈长。</li>
<li>对于每一个CPU来说运行队列最好不要超过3。如果是双核CPU就不要超过6。如果队列长期保持在3以上，说明任何一个进程运行时都不能马上得到cpu的响应，这时可能需要考虑升级cpu。另外满负荷运行cpu的使用率最好是user空间保持在<code>65%～70%</code>，system空间保持在<code>30%</code>，空闲保持在<code>0%~5%</code>。  </li>
</ol>
</li>
<li><p>进程调度<br><a href="https://blog.csdn.net/lishichengyan/article/details/78327220" target="_blank" rel="external">文档参考1</a>，<a href="https://blog.csdn.net/codetz/article/details/51254914" target="_blank" rel="external">文档参考2</a>  </p>
<ol>
<li>CPU调度也叫进程调度。分为：短程调度、中程调度、长程调度。  </li>
<li><p>CPU调度发生的情况：  </p>
<ul>
<li>从运行状态切换到等待状态  </li>
<li>从运行状态切换到就绪状态  </li>
<li>从等待切换到准备就绪  </li>
<li>终止  </li>
</ul>
</li>
<li><p>非抢占式(nonpreemptive)和抢占式(preemptive)调度。前者是指让程序一直运行着，直到它自己出异常；后者允许其他程序抢占现在正在运行的程序。  </p>
</li>
<li>上下文切换。  </li>
</ol>
</li>
<li><p>系统调用<br><a href="https://blog.csdn.net/wrx1721267632/article/details/50547565" target="_blank" rel="external">文档参考1</a>，<a href="https://www.jianshu.com/p/4c8a1242082a" target="_blank" rel="external">文档参考2</a>，<a href="https://blog.csdn.net/jeanter/article/details/51776320" target="_blank" rel="external">文档参考3</a><br> 当用户态的进程调用一个系统调用时，CPU从用户态切换到内核态并开始执行一个内核函数。Linux通过由向量为128（0x80）的编程异常实现CPU由用户态到内核态的转换。  </p>
</li>
</ul>
<h4 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h4><ul>
<li><p>虚拟内存<br><a href="https://blog.csdn.net/youbingchen/article/details/52166318" target="_blank" rel="external">文档参考1</a>，<a href="https://www.cnblogs.com/shijingjing07/p/5611579.html" target="_blank" rel="external">文档参考2</a>  </p>
<ol>
<li>每个进程都有自己独立的内存空间，各个进程的内存空间具有类似的结构。  </li>
<li>Linux内存管理采用的是页式管理，使用的是多级页表，动态地址转换机构与主存、辅存共同实现虚拟内存。  </li>
<li>一个新进程建立的时候，将会建立起自己的内存空间，此进程的数据，代码等从磁盘拷贝到自己的进程空间，哪些数据在哪里，都由进程控制表中的task_struct记录，task_struct中记录中一条链表，记录中内存空间的分配情况，哪些地址有数据，哪些地址无数据，哪些可读，哪些可写，都可以通过这个链表记录。  </li>
<li>每个进程已经分配的内存空间，都与对应的磁盘空间映射。  </li>
<li>对于32位系统，寻址指针为4字节，对应的虚拟地址空间为0-2^32，即0-4G；对于64位系统，寻址指针为8字节，对应的虚拟地址空间为0-2^64，即0-16G。这个地址空间是虚拟的，并非实际存在的。  </li>
</ol>
</li>
<li><p>SWAP换入换出<br><a href="https://blog.csdn.net/jltxgcy/article/details/74783698" target="_blank" rel="external">文档参考</a><br>内存页面分为用户页面和内核页面。<br>关于SWAP的设置，Oracle官方推荐：<br>RAM|Swap Space<br>—|—<br>Up to 512 MB|2 times the size of RAM<br>Between 1024 MB and 2048 MB|1.5 times the size of RAM<br>Between 2049 MB and 8192 MB|Equal to the size of RAM<br>More than 8192 MB|0.75 times the size of RAM</p>
</li>
<li><p>内存寻址<br><a href="http://blog.nsfocus.net/memory-addressing-mode/" target="_blank" rel="external">文档参考1</a>，<a href="https://baike.baidu.com/item/%E5%86%85%E5%AD%98%E5%AF%BB%E5%9D%80/1012006" target="_blank" rel="external">文档参考2</a><br>内存寻址是指CPU允许支持的内存大小。双通道内存技术其实是一种内存控制和管理技术，它依赖于芯片组的内存控制器发生作用，在理论上能够使两条同等规格内存所提供的带宽增长一倍。计算机管理内存的基本方式有两种：段式管理和页式管理。  </p>
</li>
<li><p>内存管理<br><a href="https://baike.baidu.com/item/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/5633616?fr=aladdin" target="_blank" rel="external">文档参考</a><br>内存管理是指软件运行时对计算机内存资源的分配和使用的技术。其最主要的目的是如何高效，快速的分配，并且在适当的时候释放和回收内存资源。  </p>
</li>
<li><p>Buffer Cache<br><a href="https://blog.csdn.net/qq_34649947/article/details/78774691" target="_blank" rel="external">文档参考</a><br>缓存区cache(磁盘缓存)和缓冲区buffer(内存缓存)都是临时存储区。不同点：  </p>
<ul>
<li>缓冲区buffer主要存在于RAM中，作为CPU暂时存储数据的区域  </li>
<li>高速缓存cache是一种高速存储区域，可以是主存或硬盘等其他独立存储区域的一部分  </li>
</ul>
</li>
<li><p>HugePages<br><a href="https://blog.csdn.net/hijk139/article/details/7656491" target="_blank" rel="external">文档参考</a><br>HugePages是linux内核的一个特性，使用hugepage可以用更大的内存页来取代传统的4K页面。优点有：  </p>
<ul>
<li>没有swap  </li>
<li>减轻快表压力  </li>
<li>减轻换页表的负载  </li>
<li>提高内存的性能，降低CPU负载  </li>
</ul>
</li>
<li><p>Kmsd<br><a href="https://www.cnblogs.com/ck1020/p/6770272.html" target="_blank" rel="external">文档参考</a><br>KSM是内核中的一种内存共享机制。在2.6.36版本的内核中引入，它会合并某些相同的页面以减少页面冗余，在内核中有一个KSM守护进程 ksmd,它定期扫描用户向它注册的内存区，寻找相同的页面，从而用一个添加写保护的页面来代替， 当有进程尝试写入的时候，会自动分配一个新页面，这点就是典型的COW机制。  </p>
</li>
<li><p>EPT<br><a href="https://www.cnblogs.com/ck1020/p/6043054.html" target="_blank" rel="external">文档参考</a><br>在虚拟化环境下，intel CPU在处理器级别加入了对内存虚拟化的支持。即扩展页表EPT，而AMD也有类似的成为NPT。  </p>
</li>
</ul>
<h4 id="I-0-磁盘"><a href="#I-0-磁盘" class="headerlink" title="I/0(磁盘)"></a>I/0(磁盘)</h4><ul>
<li><p>缺页中断<br><a href="https://baike.baidu.com/item/%E7%BC%BA%E9%A1%B5%E4%B8%AD%E6%96%AD/5029040?fr=aladdin" target="_blank" rel="external">文档参考</a><br>缺页中断是要访问的页不在主存，需要操作系统将其调入主存后再进行访问。在这个时候，被内存映射的文件实际上成了一个分页交换文件。  </p>
<ul>
<li>软性页缺失指页缺失发生时，相关的页已经被加载进内存，但是没有向MMU注册的情况。操作系统只需要在MMU中注册相关页对应的物理地址即可。  </li>
<li>硬性页缺失是指相关的页在页缺失发生时未被加载进内存的情况，这时操作系统需要：  <ol>
<li>寻找到一个空闲的页。或者把另外一个使用中的页写到磁盘上（如果其在最后一次写入后发生了变化的话），并注销在MMU内的记录；</li>
<li>将数据读入被选定的页  </li>
<li>向MMU注册该页  </li>
</ol>
</li>
</ul>
</li>
<li><p>IOPS<br><a href="http://blog.51cto.com/wushank/1708168" target="_blank" rel="external">文档参考1</a>，<a href="https://zhuanlan.zhihu.com/p/34895884" target="_blank" rel="external">文档参考2</a><br>IOPS(Input/Output Per Second)即每秒的输入输出量(或读写次数)，是衡量磁盘性能的主要指标之一。IOPS是指单位时间内系统能处理的I/O请求数量，一般以每秒处理的I/O请求数量为单位。  </p>
<ul>
<li>顺序IO指读取和写入操作基于逻辑块逐个连续访问来自相邻地址的数据。在顺序IO访问中，HDD所需的磁道搜索时间显着减少，因为读/写磁头可以以最小的移动访问下一个块。  <ul>
<li>数据备份和日志记录等业务是顺序IO业务。  </li>
</ul>
</li>
<li>随机IO指读写操作时间连续，但访问地址不连续，随机分布在磁盘LUN的地址空间中。  <ul>
<li>产生随机IO的业务有OLTP服务，SQL，即时消息服务等  </li>
</ul>
</li>
</ul>
</li>
<li><p>IO调度<br><a href="https://www.cnblogs.com/albertrui/p/8867559.html" target="_blank" rel="external">文档参考1</a>，<a href="https://www.cnblogs.com/cutepig/p/3403711.html" target="_blank" rel="external">文档参考2</a>  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#查看当前系统支持的IO调度算法</span></div><div class="line">dmesg | grep -i scheduler</div><div class="line">[    0.852570] io scheduler noop registered</div><div class="line">[    0.852575] io scheduler deadline registered (default)</div><div class="line">[    0.852614] io scheduler cfq registered</div><div class="line">[    0.852619] io scheduler mq-deadline registered</div><div class="line">[    0.852624] io scheduler kyber registered</div></pre></td></tr></table></figure>
<ul>
<li><p>IO调度算法  </p>
<ul>
<li><p>CFQ(完全公平排队I/O调度程序)<br>特点：  </p>
<ul>
<li>在最新的内核版本和发行版中,都选择CFQ做为默认的I/O调度器。  </li>
<li>CFQ试图均匀地分布对I/O带宽的访问,避免进程被饿死并实现较低的延迟,是deadline和as调度器的折中。  </li>
<li>CFQ对于多媒体应用(video,audio)和桌面系统是最好的选择。  </li>
<li>CFQ赋予I/O请求一个优先级，而I/O优先级请求独立于进程优先级，高优先级的进程的读写不能自动地继承高的I/O优先级。  </li>
</ul>
<p>工作原理：  </p>
<ul>
<li>CFQ为每个进程/线程，单独创建一个队列来管理该进程所产生的请求，也就是说每个进程一个队列,各队列之间的调度使用时间片来调度，以此来保证每个进程都能被很好的分配到I/O带宽。I/O调度器每次执行一个进程的4次请求。  </li>
</ul>
</li>
<li><p>NOOP(电梯式调度程序)<br>特点：  </p>
<ul>
<li>在Linux2.4或更早的版本的调度程序，那时只有这一种I/O调度算法。  </li>
<li>NOOP实现了一个简单的FIFO队列，它像电梯的工作方法一样对I/O请求进行组织，当有一个新的请求到来时，它将请求合并到最近的请求之后，以此来保证请求同一介质。  </li>
<li>NOOP倾向饿死读而利于写。  </li>
<li>NOOP对于闪存设备,RAM,嵌入式系统是最好的选择。  </li>
</ul>
<p>电梯算法饿死读请求的解释：</p>
<ul>
<li>因为写请求比读请求更容易。  </li>
<li>写请求通过文件系统cache，不需要等一次写完成，就可以开始下一次写操作，写请求通过合并，堆积到I/O队列中。  </li>
<li>读请求需要等到它前面所有的读操作完成，才能进行下一次读操作。在读操作之间有几毫秒时间，而写请求在这之间就到来，饿死了后面的读请求。  </li>
</ul>
</li>
<li>Deadline(截止时间调度程序)<br>特点：  <ul>
<li>通过时间以及硬盘区域进行分类，这个分类和合并要求类似于noop的调度程序。  </li>
<li>Deadline确保了在一个截止时间内服务请求，这个截止时间是可调整的，而默认读期限短于写期限。这样就防止了写操作因为不能被读取而饿死的现象。  </li>
<li>Deadline对数据库环境(ORACLE RAC,MYSQL等)是最好的选择。  </li>
</ul>
</li>
<li>AS(预料I/O调度程序)<br>特点：  <ul>
<li>本质上与Deadline一样，但在最后一次读操作后，要等待6ms，才能继续进行对其它I/O请求进行调度。  </li>
<li>可以从应用程序中预订一个新的读请求，改进读操作的执行，但以一些写操作为代价。  </li>
<li>它会在每个6ms中插入新的I/O操作，而会将一些小写入流合并成一个大写入流，用写入延时换取最大的写入吞吐量。  </li>
<li>AS适合于写入较多的环境，比如文件服务器。  </li>
<li>AS对数据库环境表现很差。  </li>
</ul>
</li>
</ul>
</li>
<li><p>virtio<br><a href="https://www.cnblogs.com/bakari/p/8309638.html" target="_blank" rel="external">文档参考</a><br>一种 I/O 半虚拟化解决方案，是一套通用 I/O 设备虚拟化的程序，是对半虚拟化 Hypervisor 中的一组通用 I/O 设备的抽象。提供了一套上层应用与各 Hypervisor虚拟化设备（KVM，Xen，VMware等）之间的通信框架和编程接口，减少跨平台所带来的兼容性问题，大大提高驱动程序开发效率。  </p>
</li>
<li><p>VFS<br><a href="https://baike.baidu.com/item/VFS/7519887?fr=aladdin" target="_blank" rel="external">文档参考1</a>，<a href="http://blog.jobbole.com/105537/" target="_blank" rel="external">文档参考2</a><br>VFS(virtual File System)，也称为虚拟文件系统交换层(Virtual Filesystem Switch)的作用就是采用标准的Unix系统调用读写位于不同物理介质上的不同文件系统，即为各类文件系统提供了一个统一的操作界面和应用编程接口。VFS是一个可以让<code>open()</code>、<code>read()</code>、<code>write()</code>等系统调用不用关心底层的存储介质和文件系统类型就可以工作的粘合层。  </p>
</li>
</ul>
</li>
<li><p>iostat  </p>
<table><tr><td>命令</td><td>参数</td><td>描述</td></tr><tr><td rowspan="13">iostat -x</td><td>rrqm/s</td><td>每秒这个设备相关的读取请求有多少被Merge了(当系统调用需要读取数据的时候，VFS将请求发到各个FS，如果FS发现不同的读取请求读取的是相同Block的数据，FS会将这个请求合并Merge)</td></tr><tr><td>wrqm/s</td><td>每秒这个设备相关的写入请求有多少被Merge了</td></tr><tr><td>r/s</td><td>每秒读取的扇区数</td></tr><tr><td>w/s</td><td>每秒写入的扇区数</td></tr><tr><td>rkB/s</td><td>每秒读K字节数，是 rsect/s 的一半，因为每扇区大小为512字节。(需要计算)</td></tr><tr><td>wkB/s</td><td>每秒写K字节数。是 wsect/s 的一半。(需要计算)</td></tr><tr><td>avgrq-sz</td><td>平均每次设备I/O操作的数据大小(扇区)。delta(rsect+wsect)/delta(rio+wio)</td></tr><tr><td>avgqu-sz</td><td>平均I/O队列长度。即 delta(aveq)/s/1000(因为aveq的单位为毫秒)</td></tr><tr><td>await</td><td>平均每次设备I/O操作的等待时间(毫秒)。即 delta(ruse+wuse)/delta(rio+wio)</td></tr><tr><td>r_await</td><td>发送给要服务的设备的读取请求的平均时间(毫秒)。这包括队列中请求所花费的时间和服务它们所花费的时间。</td></tr><tr><td>w_await</td><td>发送给要服务的设备的写入请求的平均时间(毫秒)。这包括队列中请求所花费的时间和服务它们所花费的时间。</td></tr><tr><td>svctm</td><td>平均每次设备I/O操作的服务时间(毫秒)</td></tr><tr><td>%util</td><td>一秒中有百分之多少的时间用于 I/O 操作，即被io消耗的cpu百分比</td></tr></table>
</li>
<li><p>iotop(yum安装)  </p>
<ul>
<li>左右箭头：改变排序方式，默认是按IO排序  </li>
<li>r：改变排序顺序  </li>
<li>o：只显示有IO输出的进程  </li>
<li>p：进程/线程的显示方式的切换  </li>
<li>a：显示累积使用量  </li>
<li>q：退出  </li>
</ul>
</li>
</ul>
<h4 id="I-O-网络"><a href="#I-O-网络" class="headerlink" title="I/O(网络)"></a>I/O(网络)</h4><ul>
<li><p>TCP三次握手四次挥手<br><a href="https://blog.csdn.net/qzcsu/article/details/72861891" target="_blank" rel="external">文档参考</a>  </p>
<p>最开始的时候客户端和服务器都是处于CLOSED状态。主动打开连接的为客户端，被动打开连接的是服务器。  </p>
<ol>
<li>TCP服务器进程先创建传输控制块TCB，时刻准备接受客户进程的连接请求，此时服务器就进入了LISTEN(监听)状态；  </li>
<li>TCP客户进程也是先创建传输控制块TCB，然后向服务器发出连接请求报文，这时报文首部中的同部位SYN=1，同时选择一个初始序列号 seq=x ，此时TCP客户端进程进入了 SYN-SENT(同步已发送状态)状态。TCP规定，SYN报文段(SYN=1的报文段)不能携带数据，但需要消耗掉一个序号。  </li>
<li>TCP服务器收到请求报文后，如果同意连接，则发出确认报文。确认报文中应该 ACK=1，SYN=1，确认号是ack=x+1，同时也要为自己初始化一个序列号 seq=y，此时TCP服务器进程进入了SYN-RCVD(同步收到)状态。这个报文也不能携带数据，但是同样要消耗一个序号。  </li>
<li>TCP客户进程收到确认后，还要向服务器给出确认。确认报文的ACK=1，ack=y+1，自己的序列号seq=x+1，此时TCP连接建立，客户端进入ESTABLISHED(已建立连接)状态。TCP规定，ACK报文段可以携带数据，但是如果不携带数据则不消耗序号。  </li>
<li>当服务器收到客户端的确认后也进入ESTABLISHED状态，此后双方就可以开始通信了。<br><img src="https://note.youdao.com/yws/api/personal/file/35AAA3BE7E634F1CAFA9AA2D33544E69?method=download&amp;shareKey=1e2d9363595b8789c48b8fc0c00b7569" alt="TCP三次握手">  </li>
</ol>
<p>数据传输完毕后，双方都可释放连接。最开始的时候，客户端和服务器都是处于ESTABLISHED状态，然后客户端主动关闭，服务器被动关闭。   </p>
<ol>
<li>客户端进程发出连接释放报文，并且停止发送数据。释放数据报文首部，FIN=1，其序列号为seq=u(等于前面已经传送过来的数据的最后一个字节的序号加1)，此时客户端进入FIN-WAIT-1(终止等待1)状态。TCP规定，FIN报文段即使不携带数据，也要消耗一个序号。  </li>
<li>服务器收到连接释放报文，发出确认报文ACK=1、ack=u+1，并且带上自己的序列号seq=v，此时服务端就进入了CLOSE-WAIT(关闭等待)状态。TCP服务器通知高层的应用进程，客户端向服务器的方向就释放了，这时候处于半关闭状态，即客户端已经没有数据要发送了，但是服务器若发送数据，客户端依然要接受。这个状态还要持续一段时间，也就是整个CLOSE-WAIT状态持续的时间。  </li>
<li>客户端收到服务器的确认请求后，此时客户端就进入FIN-WAIT-2(终止等待2)状态，等待服务器发送连接释放报文(在这之前还需要接受服务器发送的最后的数据)。  </li>
<li>服务器将最后的数据发送完毕后，就向客户端发送连接释放报文FIN=1、ack=u+1，由于在半关闭状态，服务器很可能又发送了一些数据，假定此时的序列号为seq=w，此时服务器就进入了LAST-ACK(最后确认)状态，等待客户端的确认。  </li>
<li>客户端收到服务器的连接释放报文后，必须发出确认ACK=1、ack=w+1，而自己的序列号是seq=u+1，此时客户端就进入了TIME-WAIT(时间等待)状态。注意此时TCP连接还没有释放，必须经过2*MSL(最长报文段寿命)的时间后，当客户端撤销相应的TCB后，才进入CLOSED状态。  </li>
<li>服务器只要收到了客户端发出的确认，立即进入CLOSED状态。同样撤销TCB后，就结束了这次的TCP连接。可以看到，服务器结束TCP连接的时间要比客户端早一些。<br><img src="https://note.youdao.com/yws/api/personal/file/9E8B256246D74619AA37B5FFA4AC3AF6?method=download&amp;shareKey=fd03ef9a64d60ff4d98fe6191e857987" alt="TCP四次挥手">  </li>
</ol>
</li>
<li><p>TCP状态变迁<br><a href="https://blog.csdn.net/zjsyhjh/article/details/37056829" target="_blank" rel="external">文档参考</a><br><img src="https://note.youdao.com/yws/api/personal/file/922023EB6468470289645AB3FECF9964?method=download&amp;shareKey=a06e231294004af73c176e9e6a4caa3f" alt="TCP状态变迁图">  </p>
<ul>
<li><p>三次握手:  </p>
<ul>
<li>LISTEN：表示服务器的某个SOCKET处于监听状态，可以进行连接了。  </li>
<li>SYN_SENT：表示客户端的某个SOCKET与服务器进行connect时，首先发送SYN报文，然后进入SYN_SENT状态，等待服务器发送ACK+SYN报文。  </li>
<li>SYN_RECV：表示服务器收到客户端发送的SYN报文，然后向客户端发送SYN+ACK报文，随后服务器进入SYN_RECV状态。  </li>
<li>ESTABLISHED：表示连接已经建立，当客户端在SYN_SENT状态时，收到服务器发送的ACK+SYN报文之后，然后进行第三次握手，客户端发送ACK报文，然后进入ESTABLISHED状态，当处于SYN_RECV状态的服务器收到客户端发送的ACK报文之后，也进入ESTABLISHED状态，然后连接建立。  </li>
</ul>
</li>
<li><p>四次挥手：</p>
<ul>
<li>FIN_WAIT_1：表示客户端SOCKET想主动关闭连接，于是向服务器发送FIN报文，然后进入FIN_WAIT_1状态。  </li>
<li>FIN_WAIT_2：表示客户端收到服务器发来的ACK报文，此时客户端进入FIN_WAIT_2状态，此时客户端这边的连接已经关闭，但服务器端的连接还没关闭，也就是服务器还可以继续向客户端发送数据。  </li>
<li>CLOSING：这种状态表示此时双方刚好可能都在关闭连接，即客户端向服务器发送FIN报文，进入FIN_WAIT_1状态后，没有收到服务器发来的ACK报文，反而受到服务器发来的FIN报文，说明此时客户端和服务器同时发起关闭连接，随后，客户端进入CLOSING状态。  </li>
<li>TIME_WAIT：表示收到了服务器发来的FIN报文，然后客户端发送ACK报文，随后进入TIME_WAIT状态，等待2MSL之后进入CLOSED状态。  </li>
<li>CLOSE_WAIT：表示当服务器收到客户端发来的FIN报文之后，发送ACK报文，随后服务器进入CLOSE_WAIT状态。  </li>
<li>LAST_ACK：表示服务器主动关闭连接，向客户端发送FIN报文后，随即进入LAST_ACK状态，如果收到了客户端发来的ACK报文之后，就进入CLOSED状态。  </li>
</ul>
</li>
</ul>
<p>为何TIME_WAIT需要等2MSL时间才能回到CLOSED状态：<br>如果网络不可靠，那么就无法保证最后客户端发送的ACK报文服务器端一定能够收到，因此处于LAST_ACK状态的服务器可能会因为超时而未收到ACK报文，而重新向客户端发送FIN报文，TIME_WAIT的作用就是用来客户端重新发送可能丢失的ACK报文。  </p>
</li>
<li><p>TCP队列<br><a href="https://yq.aliyun.com/articles/4252" target="_blank" rel="external">文档参考</a>  </p>
<ul>
<li>半连接队列：保存SYN_RECV状态的连接。队列长度由net.ipv4.tcp_max_syn_backlog设置  </li>
<li>accept队列：保存ESTABLISHED状态的连接。队列长度为min(net.core.somaxconn,backlog)。其中backlog是我们创建ServerSocket(intport,int backlog)时指定的参数，最终会传递给listen方法。  </li>
</ul>
</li>
<li><p>IO模型<br><a href="https://blog.csdn.net/xiexievv/article/details/44976215" target="_blank" rel="external">文档参考</a>  </p>
<ul>
<li>blocking IO  </li>
<li>nonblocking IO  </li>
<li>IO multiplexing  </li>
<li>signal driven IO(不常用)  </li>
<li>asynchronous IO  </li>
</ul>
</li>
<li><p>网卡Bonding模式<br><a href="https://blog.csdn.net/wuweilong/article/details/39720571" target="_blank" rel="external">文档参考</a>  </p>
<ul>
<li>Mode 0(balance-rr) Round-robin策略，这个模式具备负载均衡和容错能力  </li>
<li>Mode 1(active-backup) 主备策略，在绑定中只有一个网卡被激活，其他处于备份状态  </li>
<li>Mode 2(balance-xor) XOR策略，通过源MAC地址与目的MAC地址做异或操作选择slave网卡  </li>
<li>Mode 3 (broadcast) 广播，在所有的网卡上传送所有的报文  </li>
<li>Mode 4 (802.3ad) IEEE 802.3ad动态链路聚合。创建共享相同的速率和双工模式的聚合组  </li>
<li>Mode 5 (balance-tlb) 适配器传输负载均衡  </li>
<li>Mode 6 (balance-alb) 适配器适应性负载均衡  </li>
</ul>
</li>
<li><p>Bridge<br><a href="https://blog.csdn.net/acs713/article/details/42967191" target="_blank" rel="external">文档参考</a><br>计算机内部一般有系统总线来连接内部所有的硬件设备。一个典型的系统总线是PCI(Peripheral Component Interconnect)总线。其他类型的用得较多的总线还有ISA,EISA,MCA,SCSI,和USB。<br>一个计算机有多个不同类型的总线，这些总线由桥(bridge)链接起来。有以下两种高速总线处理到达或出自内存芯片的数据传输：  </p>
<ol>
<li>前端总线FSB：连接CPU和RAM控制器  </li>
<li>后端总线：连接CPU和外部硬件设备CACHE  </li>
</ol>
</li>
<li><p>网络管理  </p>
<ul>
<li><p>iftop(yum安装)  </p>
<ul>
<li>TX：发送流量  </li>
<li>RX：接收流量  </li>
<li>TOTAL：总流量  </li>
<li>Cumm：运行iftop到目前时间的总流量  </li>
<li>peak：流量峰值  </li>
<li>rates：分别表示过去 2s 10s 40s 的平均流量  </li>
</ul>
</li>
<li><p>tcpdump<br><a href="http://www.itshouce.com.cn/linux/linux-tcpdump.html" target="_blank" rel="external">文档参考</a>  </p>
<ul>
<li>抓取回环网口的包：<code>tcpdump -i lo</code>  </li>
<li>防止包截断：<code>tcpdump -s0</code>  </li>
<li>以数字显示主机及端口：<code>tcpdump -n</code>  </li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="内核-Shell"><a href="#内核-Shell" class="headerlink" title="内核/Shell"></a>内核/Shell</h4><ul>
<li><p>内核定制<br><a href="https://www.linuxidc.com/Linux/2014-03/97851.htm" target="_blank" rel="external">文档参考1</a>，<a href="https://blog.csdn.net/lixiangminghate/article/details/55224412" target="_blank" rel="external">文档参考2</a>，<a href="http://www.myir-tech.com/customize_linux.asp" target="_blank" rel="external">文档参考3</a><br>linux系统的启动流程：POST自检过程(BIOS) –&gt;如果有多块磁盘，需要在BIOS上选择启动磁盘 –&gt;引导MBR(bootloader引导程序) –&gt; 加载initrd文件 –&gt;执行进程init –&gt;显示欢迎界面<br>Linux系统定制的目的和意义：  </p>
<ul>
<li>系统小型化  </li>
<li>提高实时性  </li>
<li>对特殊硬件的支持  </li>
<li>提高系统的可靠性  </li>
</ul>
</li>
<li><p>Linux内核参数优化<br><a href="https://blog.csdn.net/menxu_work/article/details/51140572" target="_blank" rel="external">文档参考</a>  </p>
<ul>
<li><p><code>sysctl -a</code> 查看所有系统变量<br><code>/proc/sys</code>下内核文件与配置文件sysctl.conf中变量存在着对应关系  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#最大的待发送TCP数据缓冲区空间</span></div><div class="line">net.inet.tcp.sendspace=65536</div><div class="line"></div><div class="line"><span class="comment">#最大的接受TCP缓冲区空间</span></div><div class="line">net.inet.tcp.recvspace=65536</div><div class="line"></div><div class="line"><span class="comment">#最大的接受UDP缓冲区大小</span></div><div class="line">net.inet.udp.sendspace=65535</div><div class="line"></div><div class="line"><span class="comment">#最大的发送UDP数据缓冲区大小</span></div><div class="line">net.inet.udp.maxdgram=65535</div><div class="line"></div><div class="line"><span class="comment">#本地套接字连接的数据发送空间</span></div><div class="line">net.local.stream.sendspace=65535</div><div class="line"></div><div class="line"><span class="comment">#加快网络性能的协议</span></div><div class="line">net.inet.tcp.rfc1323=1</div><div class="line">net.inet.tcp.rfc1644=1</div><div class="line">net.inet.tcp.rfc3042=1</div><div class="line">net.inet.tcp.rfc3390=1</div><div class="line"></div><div class="line"><span class="comment">#最大的套接字缓冲区</span></div><div class="line">kern.ipc.maxsockbuf=2097152</div><div class="line"></div><div class="line"><span class="comment">#系统中允许的最多文件数量</span></div><div class="line">kern.maxfiles=65536</div><div class="line"></div><div class="line"><span class="comment">#每个进程能够同时打开的最大文件数量</span></div><div class="line">kern.maxfilesperproc=32768</div><div class="line"></div><div class="line"><span class="comment">#当一台计算机发起TCP连接请求时，系统会回应ACK应答数据包。该选项设置是否延迟ACK应答数据包，把它和包含数据的数据包一起发送，在高速网络和低负载的情况下会略微提高性能，但在网络连接较差的时候，对方计算机得不到应答会持续发起连接请求，反而会降低性能</span></div><div class="line">net.inet.tcp.delayed_ack=0</div><div class="line"></div><div class="line"><span class="comment">#屏蔽ICMP重定向功能</span></div><div class="line">net.inet.icmp.drop_redirect=1</div><div class="line">net.inet.icmp.log_redirect=1</div><div class="line">net.inet.ip.redirect=0</div><div class="line">net.inet6.ip6.redirect=0</div><div class="line"></div><div class="line"><span class="comment">#防止ICMP广播风暴</span></div><div class="line">net.inet.icmp.bmcastecho=0</div><div class="line">net.inet.icmp.maskrepl=0</div><div class="line"></div><div class="line"><span class="comment">#限制系统发送ICMP速率</span></div><div class="line">net.inet.icmp.icmplim=100</div><div class="line"></div><div class="line"><span class="comment">#安全参数，编译内核的时候加了options TCP_DROP_SYNFIN才可以用</span></div><div class="line">net.inet.icmp.icmplim_output=0</div><div class="line">net.inet.tcp.drop_synfin=1</div><div class="line"></div><div class="line"><span class="comment">#设置为1会帮助系统清除没有正常断开的TCP连接，这增加了一些网络带宽的使用，但是一些死掉的连接最终能被识别并清除。死的TCP连接是被拨号用户存取的系统的一个特别的问题，因为用户经常断开modem而不正确的关闭活动的连接</span></div><div class="line">net.inet.tcp.always_keepalive=1</div><div class="line"></div><div class="line"><span class="comment">#若看到net.inet.ip.intr_queue_drops这个在增加，就要调大net.inet.ip.intr_queue_maxlen，为0最好</span></div><div class="line">net.inet.ip.intr_queue_maxlen=1000</div><div class="line"></div><div class="line"><span class="comment">#防止DOS攻击，默认为30000</span></div><div class="line">net.inet.tcp.msl=7500</div><div class="line"></div><div class="line"><span class="comment">#接收到一个已经关闭的端口发来的所有包，直接drop，如果设置为1则是只针对TCP包</span></div><div class="line">net.inet.tcp.blackhole=2</div><div class="line"></div><div class="line"><span class="comment">#接收到一个已经关闭的端口发来的所有UDP包直接drop</span></div><div class="line">net.inet.udp.blackhole=1</div><div class="line"></div><div class="line"><span class="comment">#为网络数据连接时提供缓冲</span></div><div class="line">net.inet.tcp.inflight.enable=1</div><div class="line"></div><div class="line"><span class="comment">#如果打开的话每个目标地址一次转发成功以后它的数据都将被记录进路由表和arp数据表，节约路由的计算时间,但会需要大量的内核内存空间来保存路由表</span></div><div class="line">net.inet.ip.fastforwarding=0</div><div class="line"></div><div class="line"><span class="comment">#kernel编译打开options POLLING功能，高负载情况下使用低负载不推荐SMP不能和polling一起用</span></div><div class="line"><span class="comment">#kern.polling.enable=1</span></div><div class="line"></div><div class="line"><span class="comment">#并发连接数，默认为128，推荐在1024-4096之间，数字越大占用内存也越大</span></div><div class="line">kern.ipc.somaxconn=32768</div><div class="line"></div><div class="line"><span class="comment">#禁止用户查看其他用户的进程</span></div><div class="line">security.bsd.see_other_uids=0</div><div class="line"></div><div class="line"><span class="comment">#设置kernel安全级别</span></div><div class="line">kern.securelevel=0</div><div class="line"></div><div class="line"><span class="comment">#记录下任何TCP连接</span></div><div class="line">net.inet.tcp.log_in_vain=1</div><div class="line"></div><div class="line"><span class="comment">#记录下任何UDP连接</span></div><div class="line">net.inet.udp.log_in_vain=1</div><div class="line"></div><div class="line"><span class="comment">#防止不正确的udp包的攻击</span></div><div class="line">net.inet.udp.checksum=1</div><div class="line"></div><div class="line"><span class="comment">#防止DOS攻击</span></div><div class="line">net.inet.tcp.syncookies=1</div><div class="line"></div><div class="line"><span class="comment">#仅为线程提供物理内存支持，需要256兆以上内存</span></div><div class="line">kern.ipc.shm_use_phys=1</div><div class="line"></div><div class="line"><span class="comment"># 线程可使用的最大共享内存</span></div><div class="line">kern.ipc.shmmax=67108864</div><div class="line"></div><div class="line"><span class="comment"># 最大线程数量</span></div><div class="line">kern.ipc.shmall=32768</div><div class="line"></div><div class="line"><span class="comment"># 程序崩溃时不记录</span></div><div class="line">kern.coredump=0</div><div class="line"></div><div class="line"><span class="comment"># lo本地数据流接收和发送空间  </span></div><div class="line">net.local.stream.recvspace=65536</div><div class="line">net.local.dgram.maxdgram=16384</div><div class="line">net.local.dgram.recvspace=65536</div><div class="line"></div><div class="line"><span class="comment"># 数据包数据段大小，ADSL为1452</span></div><div class="line">net.inet.tcp.mssdflt=1460</div><div class="line"></div><div class="line"><span class="comment"># 为网络数据连接时提供缓冲  </span></div><div class="line">net.inet.tcp.inflight_enable=1</div><div class="line"></div><div class="line"><span class="comment"># 数据包数据段最小值，ADSL为1452</span></div><div class="line">net.inet.tcp.minmss=1460</div><div class="line"></div><div class="line"><span class="comment"># 本地数据最大数量</span></div><div class="line">net.inet.raw.maxdgram=65536</div><div class="line"></div><div class="line"><span class="comment"># 本地数据流接收空间</span></div><div class="line">net.inet.raw.recvspace=65536</div><div class="line"></div><div class="line"><span class="comment">#ipfw防火墙动态规则数量，默认为4096，增大该值可以防止某些病毒发送大量TCP连接，导致不能建立正常连接</span></div><div class="line">net.inet.ip.fw.dyn_max=65535</div><div class="line"></div><div class="line"><span class="comment">#设置ipf防火墙TCP连接空闲保留时间，默认8640000(120小时)</span></div><div class="line">net.inet.ipf.fr_tcpidletimeout=864000</div></pre></td></tr></table></figure>
</li>
<li><p>参考值(具体根据系统硬件配置对应值)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">/proc/sys/net/core/wmem_max</div><div class="line"><span class="comment"># 最大socket写buffer,可参考的优化值:873200</span></div><div class="line"></div><div class="line">/proc/sys/net/core/rmem_max</div><div class="line"><span class="comment"># 最大socket读buffer,可参考的优化值:873200</span></div><div class="line"></div><div class="line">/proc/sys/net/ipv4/tcp_wmem</div><div class="line"><span class="comment"># TCP写buffer,可参考的优化值: 8192 436600 873200</span></div><div class="line"></div><div class="line">/proc/sys/net/ipv4/tcp_rmem</div><div class="line"><span class="comment"># TCP读buffer,可参考的优化值: 32768 436600 873200</span></div><div class="line"></div><div class="line">/proc/sys/net/ipv4/tcp_mem</div><div class="line"><span class="comment"># 同样有3个值,意思是:</span></div><div class="line"><span class="comment"># net.ipv4.tcp_mem[0]:低于此值,TCP没有内存压力.</span></div><div class="line"><span class="comment"># net.ipv4.tcp_mem[1]:在此值下,进入内存压力阶段.</span></div><div class="line"><span class="comment"># net.ipv4.tcp_mem[2]:高于此值,TCP拒绝分配socket.</span></div><div class="line"><span class="comment"># 上述内存单位是页,而不是字节.可参考的优化值是:786432 1048576 1572864</span></div><div class="line"></div><div class="line">/proc/sys/net/core/netdev_max_backlog</div><div class="line"><span class="comment"># 进入包的最大设备队列.默认是300,对重负载服务器而言,该值太低,可调整到1000.</span></div><div class="line"></div><div class="line">/proc/sys/net/core/somaxconn</div><div class="line"><span class="comment"># listen()的默认参数,挂起请求的最大数量.默认是128.对繁忙的服务器,增加该值有助于网络性能.可调整到256.</span></div><div class="line"></div><div class="line">/proc/sys/net/core/optmem_max</div><div class="line"><span class="comment"># socket buffer的最大初始化值,默认10K.</span></div><div class="line"></div><div class="line">/proc/sys/net/ipv4/tcp_max_syn_backlog</div><div class="line"><span class="comment"># 进入SYN包的最大请求队列.默认1024.对重负载服务器,增加该值显然有好处.可调整到2048.</span></div><div class="line"></div><div class="line">/proc/sys/net/ipv4/tcp_retries2</div><div class="line"><span class="comment"># TCP失败重传次数,默认值15,意味着重传15次才彻底放弃.可减少到5,以尽早释放内核资源.</span></div><div class="line"></div><div class="line">/proc/sys/net/ipv4/tcp_keepalive_time</div><div class="line">/proc/sys/net/ipv4/tcp_keepalive_intvl</div><div class="line">/proc/sys/net/ipv4/tcp_keepalive_probes</div><div class="line"><span class="comment"># 这3个参数与TCP KeepAlive有关.默认值是:</span></div><div class="line"><span class="comment"># tcp_keepalive_time = 7200 seconds (2 hours)</span></div><div class="line"><span class="comment"># tcp_keepalive_probes = 9</span></div><div class="line"><span class="comment"># tcp_keepalive_intvl = 75 seconds</span></div><div class="line"><span class="comment"># 意思是如果某个TCP连接在idle 2个小时后,内核才发起probe.如果probe 9次(每次75秒)不成功,内核才彻底放弃,认为该连接已失效.对服务器而言,显然上述值太大. 可调整到:</span></div><div class="line"><span class="comment"># /proc/sys/net/ipv4/tcp_keepalive_time 1800</span></div><div class="line"><span class="comment"># /proc/sys/net/ipv4/tcp_keepalive_intvl 30</span></div><div class="line"><span class="comment"># /proc/sys/net/ipv4/tcp_keepalive_probes 3</span></div><div class="line"></div><div class="line">/proc/sys/net/ipv4/ip_local_port_range</div><div class="line"><span class="comment"># 指定端口范围的一个配置,默认是32768 61000,已够大.</span></div><div class="line"></div><div class="line">net.ipv4.tcp_syncookies = 1</div><div class="line"><span class="comment"># 表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭</span></div><div class="line"></div><div class="line">net.ipv4.tcp_tw_reuse = 1</div><div class="line"><span class="comment"># 表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭</span></div><div class="line"></div><div class="line">net.ipv4.tcp_tw_recycle = 1</div><div class="line"><span class="comment"># 表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭</span></div><div class="line"></div><div class="line">net.ipv4.tcp_fin_timeout = 30</div><div class="line"><span class="comment"># 表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间</span></div><div class="line"></div><div class="line">net.ipv4.tcp_keepalive_time = 1200</div><div class="line"><span class="comment"># 表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟</span></div><div class="line"></div><div class="line">net.ipv4.ip_local_port_range = 1024 65000</div><div class="line"><span class="comment"># 表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为1024到65000</span></div><div class="line"></div><div class="line">net.ipv4.tcp_max_syn_backlog = 8192</div><div class="line"><span class="comment"># 表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数</span></div><div class="line"></div><div class="line">net.ipv4.tcp_max_tw_buckets = 5000</div><div class="line"><span class="comment"># 表示系统同时保持TIME_WAIT套接字的最大数量，如果超过这个数字，TIME_WAIT套接字将立刻被清除并打印警告信息。默认为180000，改为 5000。对于Apache、Nginx等服务器，上几行的参数可以很好地减少TIME_WAIT套接字数量，但是对于Squid，效果却不大。此项参数可以控制TIME_WAIT套接字的最大数量，避免Squid服务器被大量的TIME_WAIT套接字拖死</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>脚本编程  </p>
<ul>
<li><a href="http://www.runoob.com/linux/linux-comm-awk.html" target="_blank" rel="external">awk参考</a>  </li>
<li><a href="http://man.linuxde.net/sed" target="_blank" rel="external">sed参考</a>  </li>
<li><a href="http://www.runoob.com/linux/linux-shell.html" target="_blank" rel="external">shell参考</a>  </li>
<li><a href="http://www.runoob.com/python/python-tutorial.html" target="_blank" rel="external">python参考</a>  </li>
<li><a href="http://www.runoob.com/php/php-tutorial.html" target="_blank" rel="external">php参考</a>  </li>
<li><a href="http://www.runoob.com/perl/perl-tutorial.html" target="_blank" rel="external">perl参考</a>  </li>
<li><a href="http://www.runoob.com/ruby/ruby-tutorial.html" target="_blank" rel="external">ruby参考</a>  </li>
<li><a href="http://www.runoob.com/lua/lua-tutorial.html" target="_blank" rel="external">lua参考</a>  </li>
</ul>
</li>
<li><p>系统监控<br>在工作中我使用的是Zabbix做系统监控，<a href="https://www.zabbix.com/" target="_blank" rel="external">参考zabbix官网</a><br><img src="https://note.youdao.com/yws/api/personal/file/01ED5C8C063A4E06A9D67414E2B23D2D?method=download&amp;shareKey=fd7008621aae7a9506586165af188fd2" alt="zabbix dashboard">  </p>
</li>
</ul>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/07/27/运维知识体系之操作系统层/">http://www.yfshare.vip/2018/07/27/运维知识体系之操作系统层/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;到目前为止，也工作了好几年了吧。曾经某次听赵班长的公开课，听着听着发现，越听越懵…有种啥也不会的感觉..-_-!!!&lt;br&gt;但是呢，这些东西也确实是在工作中用到过，只是比较零碎。某些名词也确实很熟悉，但是呢，比如你现在问我里面具体的细节，我会用一脸懵逼来回应你，哈哈。&lt;br&gt;这些天抽空对着赵班长总结的表格，尝试在网上收集了些资料，整理出下面的文章。如果有不对的地方，欢迎大家指点。在整理这些东西的过程中，也是对我自己所掌握知识的一种回顾吧。让我们为了自己心中所想，一起努力吧！&lt;br&gt;
    
    </summary>
    
      <category term="运维知识体系" scheme="http://www.yfshare.vip/categories/%E8%BF%90%E7%BB%B4%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
    
      <category term="Kernel" scheme="http://www.yfshare.vip/tags/Kernel/"/>
    
      <category term="CPU" scheme="http://www.yfshare.vip/tags/CPU/"/>
    
      <category term="Memory" scheme="http://www.yfshare.vip/tags/Memory/"/>
    
      <category term="I/O" scheme="http://www.yfshare.vip/tags/I-O/"/>
    
  </entry>
  
  <entry>
    <title>部署jenkins项目</title>
    <link href="http://www.yfshare.vip/2018/07/04/%E9%83%A8%E7%BD%B2jenkins%E9%A1%B9%E7%9B%AE/"/>
    <id>http://www.yfshare.vip/2018/07/04/部署jenkins项目/</id>
    <published>2018-07-04T14:56:08.000Z</published>
    <updated>2018-07-10T15:29:10.107Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Jenkins持续集成工具，也玩了不少遍，但很少分享这类文档，今天抽空整理了下文档，和大家分享，哈哈<br><a id="more"></a></p>
<p>回想一下我们之前的发布流程：</p>
<ol>
<li>本地把项目打包  </li>
<li>通过FTP等工具，传输到服务器  </li>
<li>关闭tomcat，把打包的项目放到webapp目录下  </li>
<li>启动tomcat<br>如果每次都这么搞的话，不仅慢，而且容易出错  </li>
</ol>
<p>有了jenkins以后，发布流程：  </p>
<ol>
<li>用户在jenkins上点击某个按钮进行发布  </li>
<li>jenkins收到发布命令  </li>
<li>jenkins从GIT上把源代码download下来  </li>
<li>jenkins根据你设置的mvn命令进行打包  </li>
<li>jenkins把你打包的好的war/jar工程传输到tomcat的webapps目录下  </li>
<li>tomcat启动  </li>
</ol>
<p>对于程序员而言，只要做两件事：  </p>
<ol>
<li>在jenkins上配置某个项目的部署流程  </li>
<li>在jenkins上点击某个项目的部署按钮，进行一键部署  </li>
</ol>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><p>环境：<br>　　　Centos 7.5<br>　　　nexus 3.12.0<br>　　　jenkins 2.128<br>　　　maven 3.5.3  </p>
<table>
<thead>
<tr>
<th>项目</th>
<th>IP</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>jenkins</td>
<td>192.168.1.60</td>
<td>基于docker部署</td>
</tr>
<tr>
<td>maven</td>
<td>192.168.1.60</td>
<td>和jenkins集成在一起</td>
</tr>
<tr>
<td>nexus3_oss</td>
<td>192.168.1.61</td>
<td>基于docker部署</td>
</tr>
</tbody>
</table>
<h4 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h4><p>安装docker环境<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># yum install -y https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm</span></div><div class="line">[root@localhost ~]<span class="comment"># yum install -y docker-ce</span></div></pre></td></tr></table></figure></p>
<p>docker-compose  </p>
<ul>
<li><p>jenkins  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat jenkins-docker-compose.yml </span></div><div class="line">version: <span class="string">'3'</span></div><div class="line">services:</div><div class="line">  jenkins:</div><div class="line">    image: yfshare/jenkins:2.128</div><div class="line">    container_name: jenkins</div><div class="line">    ports:</div><div class="line">      - 8080:8080</div><div class="line">      - 50000:50000</div><div class="line">    hostname: jenkins.example.com</div><div class="line">    environment:</div><div class="line">      JAVA_OPTS: <span class="string">'-Xms1500m -Xmx1500m -XX:MaxPermSize=512m-Djava.awt.headless=true'</span></div><div class="line">    extra_hosts:</div><div class="line">      jenkins.example.com: 127.0.0.1</div><div class="line">    volumes:</div><div class="line">      - /data/docker_mount/jenkins_home:/var/jenkins_home</div><div class="line">      - /data/docker_mount/maven_repository:/data/maven/repository</div><div class="line">      - /etc/localtime:/etc/localtime:ro</div><div class="line">    restart: always</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
</li>
<li><p>nexus3_oss  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat nexus3-docker-compose.yml</span></div><div class="line">version: <span class="string">'3'</span></div><div class="line">services:</div><div class="line">  jenkins:</div><div class="line">    image: sonatype/nexus3:3.12.0</div><div class="line">    container_name: nexus3</div><div class="line">    ports:</div><div class="line">      - 8081:8081</div><div class="line">    volumes:</div><div class="line">      - /data/docker_mount/nexus-data:/nexus-data</div><div class="line">      - /etc/localtime:/etc/localtime:ro</div><div class="line">    restart: always</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>应用环境部署<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># docker-compose -f jenkins-docker-compose.yml up -d</span></div><div class="line">[root@localhost ~]<span class="comment"># docker-compose -f nexus3-docker-compose.yml up -d</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># docker ps -a</span></div><div class="line">CONTAINER ID        IMAGE                     COMMAND                  CREATED             STATUS                  PORTS                                              NAMES</div><div class="line">56e49974e39d        yfshare/jenkins:2.128     <span class="string">"/sbin/tini -- /usr/…"</span>   2 days ago          Up 42 hours             0.0.0.0:8080-&gt;8080/tcp, 0.0.0.0:50000-&gt;50000/tcp   jenkins</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># docker exec -it jenkins /bin/bash</span></div><div class="line">root@jenkins:/<span class="comment"># ps -ef |grep -i jenkins | grep -iv grep</span></div><div class="line">root         1     0  0 Jul05 ?        00:00:01 /sbin/tini -- /usr/<span class="built_in">local</span>/bin/jenkins.sh</div><div class="line">root         5     1  0 Jul05 ?        00:02:04 java -Duser.home=/var/jenkins_home -Xms1500m -Xmx1500m -XX:MaxPermSize=512m -Djava.awt.headless=<span class="literal">true</span> -jar /usr/share/jenkins/jenkins.war</div><div class="line">root@jenkins:/<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># docker ps -a</span></div><div class="line">CONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS              PORTS                    NAMES</div><div class="line">28751b5a7cdc        sonatype/nexus3:3.12.0   <span class="string">"sh -c $&#123;SONATYPE_DI…"</span>   20 hours ago        Up 19 hours         0.0.0.0:8081-&gt;8081/tcp   nexus3</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h5 id="访问Dashboard"><a href="#访问Dashboard" class="headerlink" title="访问Dashboard"></a>访问Dashboard</h5><p>打开nexus3_oss，访问<a href="http://192.168.1.61:8081" target="_blank" rel="external">http://192.168.1.61:8081</a><br>默认的账户密码为：<code>admin</code>/<code>admin123</code><br><img src="https://note.youdao.com/yws/api/personal/file/97C59350D1AD4FBCA3F211FAF8CB2CC1?method=download&amp;shareKey=0cbc6712ff451180a39d2087bd8df453" alt="nexus3_oss_dashboard">  </p>
<p><code>Online - Remote Available</code>表示nexus仓库正在向nexus远端中央库下载公共依赖包<br><code>Online - Ready to Connect</code>表示nexus仓库当前没有下载任务(向远端nexus中央库)<br><img src="https://note.youdao.com/yws/api/personal/file/854205C4CFCF4A40834C3DE98D687CF3?method=download&amp;shareKey=bed0eb3704e242c38c48a214147f5434" alt="nexus3_oss_dashboard">  </p>
<p>打开jenkins，访问<a href="http://192.168.1.60:8080" target="_blank" rel="external">http://192.168.1.60:8080</a><br>登录密码在日志中查找，在初始化jenkins时也会用到<br><img src="https://note.youdao.com/yws/api/personal/file/7C8C219890AF41679B4859B2FE80BA1E?method=download&amp;shareKey=74e9e2a4ccf14ea86cc02b0bf4ffa882" alt="jenkins_login">  </p>
<p>jenkins安装<code>maven Integration</code>插件，可以配置全局Maven Options<br>“系统管理” –“系统设置” –“Maven项目配置”<br><code>-Xms1024m -Xmx1024m -XX:MaxPermSize=512m</code><br><img src="https://note.youdao.com/yws/api/personal/file/FA529CED364544FEAE47848F09B33157?method=download&amp;shareKey=5342c404e556a95a6b54cfc8e0be0998" alt="maven_option">  </p>
<h4 id="编译项目"><a href="#编译项目" class="headerlink" title="编译项目"></a>编译项目</h4><p>登录jenkins后，点击“新建任务”，然后配置jenkins<br><img src="https://note.youdao.com/yws/api/personal/file/C80C1B7DD57342CBB448CA68EDDA4D37?method=download&amp;shareKey=f83b7fe00795afc7f5fd0080ffedd85b" alt="jenkins_CreateJob"><br><img src="https://note.youdao.com/yws/api/personal/file/9640A76362DF4195ABC95E5E40B47F38?method=download&amp;shareKey=1255e6b6f247182a8b49e2016ccbd518" alt="jenkins_CreateJob">  </p>
<p>在Git上添加相应的账户，Jenkins需要通过此账户从git上clone代码进行编译<br><img src="https://note.youdao.com/yws/api/personal/file/82FAFD7C7096416A9C5AAE9B3873E6A2?method=download&amp;shareKey=012e0b7dc33c9c566d98cae5a9483436" alt="jenkins_CreateJob"><br><img src="https://note.youdao.com/yws/api/personal/file/5FA3ED9850EA4E8DA563E6E21DC157E8?method=download&amp;shareKey=334c78005fae7fad91e47852f3c6d03a" alt="jenkins_CreateJob"><br><img src="https://note.youdao.com/yws/api/personal/file/3EAD197C7BEB4805A03DA51DD30E880C?method=download&amp;shareKey=f964b78ca0039257b5bf711a16e0678f" alt="jenkins_CreateJob"><br><img src="https://note.youdao.com/yws/api/personal/file/A2B447C6ABD54CC2826692759C74AC39?method=download&amp;shareKey=7a3a7d795ac3fdf8832e1e8b295e34d5" alt="jenkins_CreateJob">  </p>
<p>Jenkins配置完成后，就可以编译项目了  </p>
<h5 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q &amp; A"></a>Q &amp; A</h5><p>在编译过程中，会遇到各种依赖问题，需要找开发童鞋沟通获取相应的依赖包<br>总结遇到的错误有（部分）：  </p>
<ol>
<li><p>从Maven私服(nexus)正常下载依赖包  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[INFO] Scanning <span class="keyword">for</span> projects...</div><div class="line">Downloading from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/org/springframework/boot/spring-boot-starter-parent/1.5.1.RELEASE/spring-boot-starter-parent-1.5.1.RELEASE.pom</div><div class="line">Downloaded from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/org/springframework/boot/spring-boot-starter-parent/1.5.1.RELEASE/spring-boot-starter-parent-1.5.1.RELEASE.pom (7.4 kB at 986 B/s)</div><div class="line">Downloading from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/org/springframework/boot/spring-boot-dependencies/1.5.1.RELEASE/spring-boot-dependencies-1.5.1.RELEASE.pom</div><div class="line">Downloaded from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/org/springframework/boot/spring-boot-dependencies/1.5.1.RELEASE/spring-boot-dependencies-1.5.1.RELEASE.pom (89 kB at 12 kB/s)</div><div class="line">Downloading from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/com/fasterxml/jackson/jackson-bom/2.8.6/jackson-bom-2.8.6.pom</div><div class="line">Downloaded from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/com/fasterxml/jackson/jackson-bom/2.8.6/jackson-bom-2.8.6.pom (10 kB at 7.8 kB/s)</div></pre></td></tr></table></figure>
</li>
<li><p>在编译时遇到依赖关系  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># mvn -X package -P pre clean install -Dmaven.test.skip=true</span></div><div class="line">[INFO] Scanning <span class="keyword">for</span> projects...</div><div class="line">[INFO] </div><div class="line">[INFO] ---------------------&lt; com.recycle:recycle-common &gt;---------------------</div><div class="line">[INFO] Building recycle-common 1.0-SNAPSHOT</div><div class="line">[INFO] --------------------------------[ jar ]---------------------------------</div><div class="line">[WARNING] The POM <span class="keyword">for</span> fakepath:json-lib:jar:jdk15:2.4 is missing, no dependency information available</div><div class="line">Downloading from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/ctc-smscloud/jsonhttp/1.0/jsonhttp-1.0.pom</div><div class="line">Downloaded from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/ctc-smscloud/jsonhttp/1.0/jsonhttp-1.0.pom (391 B at 1.8 kB/s)</div><div class="line">Downloading from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/ctc-smscloud/jsonhttp/1.0/jsonhttp-1.0.jar</div><div class="line">Downloaded from deploymentRepo: http://192.168.1.61:8081/repository/maven-public/ctc-smscloud/jsonhttp/1.0/jsonhttp-1.0.jar (5.1 kB at 212 kB/s)</div><div class="line">[INFO] ------------------------------------------------------------------------</div><div class="line">[INFO] BUILD FAILURE</div><div class="line">[INFO] ------------------------------------------------------------------------</div><div class="line">[INFO] Total time: 3.857 s</div><div class="line">[INFO] Finished at: 2018-06-28T09:58:07Z</div><div class="line">[INFO] ------------------------------------------------------------------------</div><div class="line">[WARNING] The requested profile <span class="string">"pre"</span> could not be activated because it does not exist.</div><div class="line">[ERROR] Failed to execute goal on project recycle-common: Could not resolve dependencies <span class="keyword">for</span> project com.recycle:recycle-common:jar:1.0-SNAPSHOT: Failure to find fakepath:json-lib:jar:jdk15:2.4 <span class="keyword">in</span> http://192.168.1.61:8081/repository/maven-public/ was cached <span class="keyword">in</span> the <span class="built_in">local</span> repository, resolution will not be reattempted until the update interval of deploymentRepo has elapsed or updates are forced -&gt; [Help 1]</div><div class="line">[ERROR] </div><div class="line">[ERROR] To see the full stack trace of the errors, re-run Maven with the <span class="_">-e</span> switch.</div><div class="line">[ERROR] Re-run Maven using the -X switch to <span class="built_in">enable</span> full debug logging.</div><div class="line">[ERROR] </div><div class="line">[ERROR] For more information about the errors and possible solutions, please <span class="built_in">read</span> the following articles:</div><div class="line">[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException</div></pre></td></tr></table></figure>
</li>
</ol>
<p>与开发童鞋沟通获取相应的依赖包上传到nexus仓库  </p>
<p>上传到nexus命令<br>需要先安装Maven和配置settings.xml(<code>maven/conf/settings.xml</code>)<br>settings.xml文件配置 <a href="https://note.youdao.com/share/?id=de325335990c1dda2b48dff6cba36e0c&amp;type=note#/" target="_blank" rel="external">参考这里</a>  </p>
<p>通过报错可以看到，缺少json-lib-2.4-jdk15.jar这个依赖jar包，且json-lib-2.4-jdk15.jar这个依赖包存放的路径为：<code>fakepath/json-lib/2.4/json-lib-2.4-jdk15.jar</code><br>手动上传到nexus仓库需要各个参数指定jar的文件名，如下：<br><img src="https://note.youdao.com/yws/api/personal/file/C0222A4B0CC44D6681E444A4A2A65991?method=download&amp;shareKey=d191776a99e98854fa268cf927e4090e" alt="nexus_jar包命名规范"><br><code>Dclassifier</code>字段有的jar依赖包没有就不需要指定该参数<br><code>DgroupId</code>字段表示jar包的目录路径，如果有多级目录写法如上<br><code>Durl</code>字段为上传到nexus仓库的路径<br><code>deploymentRepo</code>字段为maven setting.xml里定义的nexus仓库的密码，具体见settings.xml文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn deploy:deploy-file -DgroupId=fakepath -DartifactId=json-lib -Dversion=2.4 -Dclassifier=jdk15 -Dpackaging=jar -Dfile=/data/code/json-lib-2.4-jdk15.jar -Durl=http://192.168.1.61:8081/repository/maven-releases/ -DrepositoryId=<span class="string">"deploymentRepo"</span></div></pre></td></tr></table></figure></p>
<p>上传到nexus私服后，再去maven仓库目录删除对应出错的依赖jar包目录后，再次编译即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># cd /data/docker_mount/maven_repository</span></div><div class="line"><span class="comment"># rm -rf fakepath/json-lib/</span></div></pre></td></tr></table></figure></p>
<p>编译时再遇到jar包依赖解决方法如上，找开发童鞋获取相应的jar依赖包并上传到nexus仓库。这个上传到nexus仓库开发写好pom.xml文件后应该可以自动上传的，而不需要我们手动上传到nexus仓库  </p>
<p>如果不想通过jenkins来测试jar包是否存在依赖问题，可以配置好maven后并在该服务器上手动执行如下命令测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> <span class="variable">$WORKSPACE</span>/recycle-back/</div><div class="line">mvn clean -P pre</div><div class="line">mvn package -P pre clean install -Dmaven.test.skip=<span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>附上一张jenkins编译失败的图片：<br><img src="https://note.youdao.com/yws/api/personal/file/C5BE4325907640F2A04900991B67BEB3?method=download&amp;shareKey=ecc35dd5eb2d4a7dc5bff8ff76f9f814" alt="jenkins_build_fail">  </p>
<h5 id="编译成功"><a href="#编译成功" class="headerlink" title="编译成功"></a>编译成功</h5><p>披荆斩棘，经过九九八十一难后，jenkins编译成功啦，结果如下<br><img src="https://note.youdao.com/yws/api/personal/file/8079B3B04F1748859525928C21A16BD8?method=download&amp;shareKey=bef4cd9d6de736e8de03baeecbe090de" alt="jenkins_built_result">  </p>
<p>找到jenkins的$WORKSPACE 目录，进入到项目里面的可以看到编译成功后的jar包文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ls recycle-*/target/*.jar | grep -iv 'dubbo-privider'</span></div><div class="line">recycle-activity/target/recycle-activity.jar</div><div class="line">recycle-common/target/recycle-common-1.0-SNAPSHOT.jar</div><div class="line">recycle-front/target/recycle-front.jar</div><div class="line">recycle-message/target/recycle-message.jar</div><div class="line">recycle-product/target/recycle-product.jar</div><div class="line">recycle-risk/target/recycle-risk.jar</div><div class="line">recycle-task/target/recycle-task.jar</div><div class="line">recycle-trade/target/recycle-trade.jar</div><div class="line">recycle-user/target/recycle-user.jar</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure></p>
<h4 id="项目发布"><a href="#项目发布" class="headerlink" title="项目发布"></a>项目发布</h4><p><img src="https://note.youdao.com/yws/api/personal/file/CCFC6463CAB24CB48333BA23A7DEA36B?method=download&amp;shareKey=679ae369e6fd8cee53e1438e3a6bec39" alt="Jenkins_ExecuteShell"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">BUILD_ID=DONTKILLME</div><div class="line"></div><div class="line"><span class="built_in">cd</span> <span class="variable">$WORKSPACE</span>/king-back/</div><div class="line">mvn clean -P pre</div><div class="line">mvn package -P pre clean install -Dmaven.test.skip=<span class="literal">true</span></div><div class="line">result=$?</div><div class="line"><span class="keyword">if</span> [ <span class="variable">$result</span> == <span class="string">'0'</span> ];<span class="keyword">then</span></div><div class="line">find . -type f -iname <span class="string">"king*.jar"</span> | egrep -iv <span class="string">'common|dubbo-privider|api'</span> | xargs -i scp &#123;&#125; user@ip:/data/king/project/</div><div class="line">find . -type f -iname <span class="string">"king*.war"</span> | egrep -iv <span class="string">'common|dubbo-privider|api'</span> | xargs -i scp &#123;&#125; user@ip:/data/king/project/</div><div class="line"></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep 'king-front.jar' |grep -v grep |awk '&#123;print \$2&#125;' |xargs -i -i kill &#123;&#125;"</span></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep 'king-mis.war' |grep -v grep |awk '&#123;print \$2&#125;' |xargs -i kill &#123;&#125;"</span></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep 'king-task.jar' |grep -v grep |awk '&#123;print \$2&#125;' |xargs -i kill &#123;&#125;"</span></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep 'king-trade.jar' |grep -v grep |awk '&#123;print \$2&#125;' |xargs -i kill &#123;&#125;"</span></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep 'king-risk.jar' |grep -v grep |awk '&#123;print \$2&#125;' |xargs -i kill &#123;&#125;"</span></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep 'king-user.jar' |grep -v grep |awk '&#123;print \$2&#125;' |xargs -i kill &#123;&#125;"</span></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep 'king-activity.jar' |grep -v grep |awk '&#123;print \$2&#125;' |xargs -i kill &#123;&#125;"</span></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep 'king-product.jar' |grep -v grep |awk '&#123;print \$2&#125;' |xargs -i kill &#123;&#125;"</span></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep 'king-message.jar' |grep -v grep |awk '&#123;print \$2&#125;' |xargs -i kill &#123;&#125;"</span></div><div class="line"></div><div class="line">ssh -fn user@ip <span class="string">"nohup java -jar -Xms350m -Xmx350m /data/king/project/king-message.jar &gt;/dev/null 2&gt;&amp;1 &amp;"</span></div><div class="line">ssh -fn user@ip <span class="string">"nohup java -jar -Xms350m -Xmx350m /data/king/project/king-user.jar &gt;/dev/null 2&gt;&amp;1 &amp;"</span></div><div class="line">ssh -fn user@ip <span class="string">"nohup java -jar -Xms350m -Xmx350m /data/king/project/king-trade.jar &gt;/dev/null 2&gt;&amp;1 &amp;"</span></div><div class="line">ssh -fn user@ip <span class="string">"nohup java -jar -Xms350m -Xmx350m /data/king/project/king-risk.jar &gt;/dev/null 2&gt;&amp;1 &amp;"</span></div><div class="line">ssh -fn user@ip <span class="string">"nohup java -jar -Xms350m -Xmx350m /data/king/project/king-task.jar &gt;/dev/null 2&gt;&amp;1 &amp;"</span></div><div class="line">ssh -fn user@ip <span class="string">"nohup java -jar -Xms350m -Xmx350m /data/king/project/king-product.jar &gt;/dev/null 2&gt;&amp;1 &amp;"</span></div><div class="line">ssh -fn user@ip <span class="string">"nohup java -jar -Xms350m -Xmx350m /data/king/project/king-activity.jar &gt;/dev/null 2&gt;&amp;1 &amp;"</span></div><div class="line">ssh -fn user@ip <span class="string">"nohup java -jar -Xms600m -Xmx600m /data/king/project/king-mis.war &gt;/dev/null 2&gt;&amp;1 &amp;"</span></div><div class="line">ssh -fn user@ip <span class="string">"nohup java -jar -Xms350m -Xmx350m /data/king/project/king-front.jar &gt;/dev/null 2&gt;&amp;1 &amp;"</span></div><div class="line"></div><div class="line">ssh -fn user@ip <span class="string">"ps -ef | grep -i king | egrep -iv 'grep|color'"</span></div><div class="line"><span class="keyword">else</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">'编译失败'</span></div><div class="line">    <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure></p>
<p><img src="https://note.youdao.com/yws/api/personal/file/0D70F4B55CAF4B78A88930AD14298D45?method=download&amp;shareKey=dbcaa6ff3eae1b55c9fbd16e77f55f8e" alt="jenkins_build_fail"><br><img src="https://note.youdao.com/yws/api/personal/file/1A91736DAF704FFE80F2576ACF0C1CED?method=download&amp;shareKey=cdff65123ea737392cc440fe4fc912d7" alt="jenkins_build_success">  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/07/04/部署jenkins项目/">http://www.yfshare.vip/2018/07/04/部署jenkins项目/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Jenkins持续集成工具，也玩了不少遍，但很少分享这类文档，今天抽空整理了下文档，和大家分享，哈哈&lt;br&gt;
    
    </summary>
    
      <category term="Jenkins" scheme="http://www.yfshare.vip/categories/Jenkins/"/>
    
    
      <category term="Jenkins" scheme="http://www.yfshare.vip/tags/Jenkins/"/>
    
      <category term="docker" scheme="http://www.yfshare.vip/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>部署Zabbix 3.4</title>
    <link href="http://www.yfshare.vip/2018/06/30/%E9%83%A8%E7%BD%B2Zabbix-3-4/"/>
    <id>http://www.yfshare.vip/2018/06/30/部署Zabbix-3-4/</id>
    <published>2018-06-30T12:30:00.000Z</published>
    <updated>2019-03-14T14:02:49.878Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>虽然zabbix已经玩了好多遍了，但每次重新部署时，还得到处找，今天抽空整理下文档，以后就可以直接复制粘贴了，哈哈<br><a id="more"></a></p>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><p>环境：<br>　　centos 7.4<br>　　zabbix 3.4.11<br>　　mysql 5.6<br>　　php 5.4<br>　　nginx 12.2  </p>
<p>zabbix 3.4环境要求：<br>参考：<a href="https://www.zabbix.com/documentation/3.4/manual/installation/requirements" target="_blank" rel="external">zabbix requirements</a>  </p>
<ul>
<li>MySQL 5.0.3 - 5.7.x</li>
<li>PHP 5.4.0 or later</li>
</ul>
<h4 id="安装yum源"><a href="#安装yum源" class="headerlink" title="安装yum源"></a>安装yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># wget https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm</span></div><div class="line">[root@localhost ~]<span class="comment"># wget https://repo.mysql.com//mysql80-community-release-el7-1.noarch.rpm</span></div><div class="line"></div><div class="line"><span class="comment">#如果网络不好，可以用epel源自带的php5.4</span></div><div class="line">[root@localhost ~]<span class="comment"># wget https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></div><div class="line">[root@localhost ~]<span class="comment"># wget https://jaist.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/3.4.11/zabbix-3.4.11.tar.gz</span></div><div class="line">[root@localhost ~]<span class="comment"># yum -y install epel-release-latest-7.noarch.rpm mysql80-community-release-el7-1.noarch.rpm webtatic-release.rpm</span></div></pre></td></tr></table></figure>
<h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># yum -y install yum-utils gcc gcc-c++ make libxml2 libxml2-devel libjpeg-devel libpng-devel bzip2-devel libcurl-devel gd-devel net-snmp-devel libevent-devel</span></div></pre></td></tr></table></figure>
<h4 id="部署PHP"><a href="#部署PHP" class="headerlink" title="部署PHP"></a>部署PHP</h4><p>如果能使用webtatic源的话，可以安装高版本的PHP。这里用不了webtatic的yum源。-_-!!!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#安装php5.4</span></div><div class="line">[root@localhost ~]<span class="comment"># yum -y install php php-mysql php-gd libjpeg* php-imap php-odbc libmcrypt libmcrypt-devel php-fpm php-cli php-bcmath php-mbstring php-xml</span></div><div class="line"><span class="comment">#安装php70w  </span></div><div class="line">[root@localhost ~]<span class="comment"># yum install php70w php70w-cli php70w-common php70w-fpm php70w-gd php70w-devel php70w-imap php70w-mysql php70w-odbc php70w-bcmath php70w-mbstring php70w-xml</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#配置PHP  </span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/max_execution_time/s/30/300/' /etc/php.ini</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/post_max_size/s/8/16/' /etc/php.ini</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/max_input_time/s/60/300/' /etc/php.ini</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/^;date.timezone/adate.timezone \= \"Asia\/Shanghai\"' /etc/php.ini</span></div><div class="line"><span class="comment">#yum安装的php下面配置不需要修改</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/run\/php-fpm.pid/s/^;//g' /etc/php-fpm.d/www.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/^;pm.min_spare_servers/s/^;//g' /etc/php-fpm.d/www.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/^;pm.max_spare_servers/s/^;//g' /etc/php-fpm.d/www.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/^;pm.start_servers/s/^;//g' /etc/php-fpm.d/www.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># systemctl enable php-fpm</span></div><div class="line">[root@localhost ~]<span class="comment"># systemctl start php-fpm</span></div></pre></td></tr></table></figure>
<h4 id="部署Mysql-5-6"><a href="#部署Mysql-5-6" class="headerlink" title="部署Mysql 5.6"></a>部署Mysql 5.6</h4><p>这里也操作了mysql迁移DATA目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># yum-config-manager --disable mysql80-community</span></div><div class="line">[root@localhost ~]<span class="comment"># yum-config-manager --enable mysql56-community</span></div><div class="line">[root@localhost ~]<span class="comment"># yum install -y mysql-community-server.x86_64 mysql-community-devel.x86_64 mysql-community-common.x86_64 mysql-community-client.x86_64</span></div><div class="line">[root@localhost ~]<span class="comment"># systemctl enable mysqld</span></div><div class="line">[root@localhost ~]<span class="comment"># systemctl start mysqld</span></div></pre></td></tr></table></figure></p>
<h5 id="迁移mysql-data目录"><a href="#迁移mysql-data目录" class="headerlink" title="迁移mysql data目录"></a>迁移mysql data目录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># mysql -u root</span></div><div class="line">mysql&gt; use mysql</div><div class="line">mysql&gt; update user <span class="built_in">set</span> password=password(<span class="string">'123456'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</div><div class="line">mysql&gt; SELECT Host,User,password_expired FROM user;</div><div class="line">mysql&gt; update user <span class="built_in">set</span> host=<span class="string">'192.168.%.%'</span>,password_expired=<span class="string">'N'</span> <span class="built_in">where</span> host=<span class="string">'127.0.0.1'</span>;</div><div class="line">mysql&gt; grant all privileges on *.* to <span class="string">'root'</span>@<span class="string">'localhost'</span> identified by <span class="string">'123456'</span> with grant option;</div><div class="line">mysql&gt; grant all privileges on *.* to <span class="string">'root'</span>@<span class="string">'192.168.%.%'</span> identified by <span class="string">'123456'</span> with grant option;</div><div class="line">mysql&gt; flush privileges;</div><div class="line">mysql&gt; commit;</div><div class="line">mysql&gt; show global variables like <span class="string">"%datadir%"</span>;</div><div class="line">+---------------+-----------------+</div><div class="line">| Variable_name | Value           |</div><div class="line">+---------------+-----------------+</div><div class="line">| datadir       | /var/lib/mysql/ |</div><div class="line">+---------------+-----------------+</div><div class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; quit</div><div class="line">[root@localhost ~]<span class="comment"># systemctl stop mysqld</span></div><div class="line">[root@localhost ~]<span class="comment"># mkdir -p /data</span></div><div class="line">[root@localhost ~]<span class="comment"># mv /var/lib/mysql /data/mysql_data</span></div><div class="line">[root@localhost ~]<span class="comment"># grep -iv '#' /etc/my.cnf | grep -iv '^$'</span></div><div class="line">[mysqld]</div><div class="line"><span class="comment">#修改为新目录</span></div><div class="line">datadir=/data/mysql_data</div><div class="line">socket=/data/mysql_data/mysql.sock</div><div class="line">symbolic-links=0</div><div class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </div><div class="line">[mysqld_safe]</div><div class="line"><span class="built_in">log</span>-error=/var/<span class="built_in">log</span>/mysqld.log</div><div class="line">pid-file=/var/run/mysqld/mysqld.pid</div><div class="line"><span class="comment">#添加</span></div><div class="line">[client]</div><div class="line">socket=/data/mysql_data/mysql.sock</div><div class="line">[root@localhost ~]<span class="comment"># systemctl start mysqld</span></div></pre></td></tr></table></figure>
<h4 id="部署zabbix"><a href="#部署zabbix" class="headerlink" title="部署zabbix"></a>部署zabbix</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># useradd -s /sbin/nologin zabbix</span></div><div class="line">[root@localhost ~]<span class="comment"># tar -zxf zabbix-3.4.11.tar.gz</span></div><div class="line">[root@localhost ~]<span class="comment"># cd zabbix-3.4.11</span></div><div class="line">[root@localhost zabbix-3.4.11]<span class="comment"># ./configure --prefix=/usr/local/zabbix --enable-server --enable-agent --with-mysql --with-net-snmp --with-libcurl --with-libxml2</span></div><div class="line">[root@localhost zabbix-3.4.11]<span class="comment"># make &amp;&amp; make install</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#在编译zabbix-server时，`--enable-java`需要安装下面这个依赖包  </span></div><div class="line">[root@localhost ~]<span class="comment"># yum install -y java*</span></div></pre></td></tr></table></figure>
<h5 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># mysql -uroot -p123456</span></div><div class="line">mysql&gt; create database zabbix default charset utf8;</div><div class="line">mysql&gt; grant all privileges on zabbix.* to zbxuser@localhost identified by <span class="string">'zbxpass'</span>;</div><div class="line">mysql&gt; grant all privileges on zabbix.* to zbxuser@<span class="string">'192.168.%.%'</span> identified by <span class="string">'zbxpass'</span>;</div><div class="line">mysql&gt; flush privileges;</div><div class="line">mysql&gt; commit;</div><div class="line">mysql&gt; quit</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cd zabbix-3.4.11</span></div><div class="line">[root@localhost zabbix-3.4.11]<span class="comment"># mysql -uzbxuser -pzbxpass zabbix &lt; database/mysql/schema.sql</span></div><div class="line">[root@localhost zabbix-3.4.11]<span class="comment"># mysql -uzbxuser -pzbxpass zabbix &lt; database/mysql/images.sql</span></div><div class="line">[root@localhost zabbix-3.4.11]<span class="comment"># mysql -uzbxuser -pzbxpass zabbix &lt; database/mysql/data.sql</span></div></pre></td></tr></table></figure>
<h5 id="配置zabbix"><a href="#配置zabbix" class="headerlink" title="配置zabbix"></a>配置zabbix</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># sed -i '/LogFile/s/tmp/var\/log\/zabbix/' /usr/local/zabbix/etc/zabbix_server.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/^DBUser\=/s/root/zbxuser/' /usr/local/zabbix/etc/zabbix_server.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/# DBPassword/aDBPassword=zbxpass' /usr/local/zabbix/etc/zabbix_server.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/# DBPort/aDBPort=3306' /usr/local/zabbix/etc/zabbix_server.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/^Timeout/s/4/30/' /usr/local/zabbix/etc/zabbix_server.conf</span></div><div class="line"><span class="comment">#如果修改了数据库的data目录，也需要修改zabbix server配置文件</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/^# DBSocket/aDBSocket=/data/mysql_data/mysql.sock' /usr/local/zabbix/etc/zabbix_server.conf</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># sed -i '/^Server/s/127.0.0.1/192.168.1.202/g' /usr/local/zabbix/etc/zabbix_agentd.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i "/^ServerActive/s/127.0.0.1/192.168.1.202:10051/g" /usr/local/zabbix/etc/zabbix_agentd.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i "/^Hostname/s/Zabbix server/192.168.1.202/g" /usr/local/zabbix/etc/zabbix_agentd.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># sed -i '/^LogFile/s/tmp/var\/log\/zabbix/' /usr/local/zabbix/etc/zabbix_agentd.conf</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># ln -s /usr/local/zabbix/sbin/* /usr/local/sbin/</span></div><div class="line">[root@localhost ~]<span class="comment"># ln -s /usr/local/zabbix/bin/* /usr/local/sbin/</span></div><div class="line">[root@localhost ~]<span class="comment"># mkdir -p /var/log/zabbix</span></div><div class="line">[root@localhost ~]<span class="comment"># touch /var/log/zabbix/&#123;zabbix_agentd.log,zabbix_server.log&#125;</span></div><div class="line">[root@localhost ~]<span class="comment"># chown zabbix:zabbix /var/log/zabbix/ -R</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/zabbix/sbin/zabbix_server -c /usr/local/zabbix/etc/zabbix_server.conf</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/zabbix/sbin/zabbix_agentd -c /usr/local/zabbix/etc/zabbix_agentd.conf</span></div><div class="line"></div><div class="line"><span class="comment">#或者用启动脚本启动，zabbix源码自带启动脚本  </span></div><div class="line">[root@localhost ~]<span class="comment"># cp -a zabbix-3.4.11/misc/init.d/fedora/core/zabbix_* /etc/init.d/</span></div><div class="line">[root@localhost ~]<span class="comment"># chmod +x /etc/init.d/zabbix_*</span></div><div class="line">[root@localhost ~]<span class="comment"># /etc/init.d/zabbix_server restart</span></div><div class="line">[root@localhost ~]<span class="comment"># /etc/init.d/zabbix_agentd restart</span></div></pre></td></tr></table></figure>
<h4 id="部署Nginx"><a href="#部署Nginx" class="headerlink" title="部署Nginx"></a>部署Nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># yum install -y nginx</span></div><div class="line">[root@localhost ~]<span class="comment"># mkdir /usr/share/nginx/html/zabbix</span></div><div class="line">[root@localhost ~]<span class="comment"># cd zabbix-3.4.11</span></div><div class="line">[root@localhost zabbix-3.4.11]<span class="comment"># cp -a frontends/php/* /usr/share/nginx/html/zabbix/</span></div><div class="line">[root@localhost ~]<span class="comment"># chown zabbix:zabbix /usr/share/nginx/html/zabbix/ -R</span></div><div class="line">[root@localhost ~]<span class="comment"># chmod o+w /usr/share/nginx/html/zabbix/conf -R</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat /etc/nginx/conf.d/zabbix.conf </span></div><div class="line">server &#123;</div><div class="line">	listen	80;</div><div class="line">	server_name 192.168.1.202;</div><div class="line">	root /usr/share/nginx/html;</div><div class="line"></div><div class="line">	access_log /var/<span class="built_in">log</span>/nginx/zabbix_access.log main;</div><div class="line">	error_log /var/<span class="built_in">log</span>/nginx/zabbix_error.log warn;</div><div class="line"></div><div class="line">	location /zabbix &#123;</div><div class="line">                index index.php;</div><div class="line">                try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</div><div class="line">        &#125;</div><div class="line">        location ~ ^(.+.php)(.*)$ &#123;</div><div class="line">                fastcgi_buffer_size 128k;</div><div class="line">                fastcgi_buffers 32 32k;</div><div class="line">                fastcgi_split_path_info ^(.+.php)(.*)$;</div><div class="line">                include fastcgi.conf;</div><div class="line">                fastcgi_pass  127.0.0.1:9000;</div><div class="line">                fastcgi_index index.php;</div><div class="line">                fastcgi_param  PATH_INFO          <span class="variable">$fastcgi_path_info</span>;</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line">[root@localhost ~]<span class="comment"># systemctl enable nginx</span></div><div class="line">[root@localhost ~]<span class="comment"># systemctl start nginx</span></div></pre></td></tr></table></figure>
<h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><p><img src="https://note.youdao.com/yws/api/personal/file/A597A39410474658A3313ADC3EDF68E4?method=download&amp;shareKey=480d9268f2992b63b82774adf23e4502" alt="zabbix_install">  </p>
<p>如果点”next step”没有反应，需要检查下<code>/var/lib/php/session</code>权限，如果没有这个目录就新建一个并授权777<br><img src="https://note.youdao.com/yws/api/personal/file/9C64C8CEBAA6455BBC13A5447D304C5A?method=download&amp;shareKey=6cbd04ad3bdd9ff34c6e333ea90e388c" alt="zabbix_install"><br><img src="https://note.youdao.com/yws/api/personal/file/BAA9FD90A2AA411D97BBC7C1C134308B?method=download&amp;shareKey=79ef66cf8aa8f17476559c4603b94a2f" alt="zabbix_install"><br><img src="https://note.youdao.com/yws/api/personal/file/81B49818E1554BE4B84AC75F80018219?method=download&amp;shareKey=50231b404b3f603fc8abc470d354d113" alt="zabbix_install"><br><img src="https://note.youdao.com/yws/api/personal/file/0D5392E253F8418A84A09558CB0C0164?method=download&amp;shareKey=a2a2cc826de97085201ccf7b8e29044a" alt="zabbix_install"><br><img src="https://note.youdao.com/yws/api/personal/file/7986498043F648D4AD3B5DA79791B31A?method=download&amp;shareKey=41c5881257604b0f1c51285b661f4898" alt="zabbix_install"><br><img src="https://note.youdao.com/yws/api/personal/file/FE90EDE6BBD64BE48D7A7538E74CCE84?method=download&amp;shareKey=a40d636aa98ae67f6028c03553410e21" alt="zabbix_login"><br><img src="https://note.youdao.com/yws/api/personal/file/12E0CD54864D4D95B4436999407B41E8?method=download&amp;shareKey=d8af7d7866ebb11b58ade11c56a4c397" alt="zabbix_dashboard">  </p>
<p>附件：<br><a href="https://note.youdao.com/yws/api/personal/file/CA54F4C49CC446C08B157ABC07E178DB?method=download&amp;shareKey=e118ac9cb68feebe28e0d35d11ae7a13" target="_blank" rel="external">epel-release-latest-7.noarch</a><br><a href="https://note.youdao.com/yws/api/personal/file/AEDAB38F808A4441BAA8B02D75C8E004?method=download&amp;shareKey=96b2d60bdb51bcef8a20ad6f53a3065a" target="_blank" rel="external">mysql80-community-release-el7-1.noarch</a><br><a href="http://note.youdao.com/noteshare?id=46f5f435bf9273ef9c6ac0a4f4d0ad4f&amp;sub=BE91DBE3A81A4021BFA3359028178F77" target="_blank" rel="external">webtatic-release</a><br><a href="https://note.youdao.com/yws/api/personal/file/9DEDA9CC216A459FB00A3138E7D31738?method=download&amp;shareKey=c1a862025490a298da625b9203bb8892" target="_blank" rel="external">zabbix-3.4.11.tar.gz</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/06/30/部署Zabbix-3-4/">http://www.yfshare.vip/2018/06/30/部署Zabbix-3-4/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽然zabbix已经玩了好多遍了，但每次重新部署时，还得到处找，今天抽空整理下文档，以后就可以直接复制粘贴了，哈哈&lt;br&gt;
    
    </summary>
    
      <category term="Monitor" scheme="http://www.yfshare.vip/categories/Monitor/"/>
    
    
      <category term="Zabbix" scheme="http://www.yfshare.vip/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Ansible部署Jenkins环境</title>
    <link href="http://www.yfshare.vip/2018/06/21/Ansible%E9%83%A8%E7%BD%B2Jenkins%E7%8E%AF%E5%A2%83/"/>
    <id>http://www.yfshare.vip/2018/06/21/Ansible部署Jenkins环境/</id>
    <published>2018-06-21T15:00:00.000Z</published>
    <updated>2018-06-21T15:41:34.465Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>本文是基于Ansible批量部署Jenkins环境<br><a id="more"></a><br>支持部署的环境：  </p>
<ul>
<li>基于docker的Jenkins基础环境</li>
<li>Maven</li>
<li>Nodejs</li>
<li>基于docker的Nexus3基础环境</li>
<li>docker基础环境</li>
</ul>
<h4 id="工具包测试环境信息"><a href="#工具包测试环境信息" class="headerlink" title="工具包测试环境信息"></a>工具包测试环境信息</h4><table>
<thead>
<tr>
<th>环境</th>
<th>ip</th>
</tr>
</thead>
<tbody>
<tr>
<td>Jenkins</td>
<td>192.168.1.201</td>
</tr>
<tr>
<td>Maven</td>
<td>192.168.1.202</td>
</tr>
<tr>
<td>Nodejs</td>
<td>192.168.1.203</td>
</tr>
<tr>
<td>Nexus3</td>
<td>192.168.1.206</td>
</tr>
</tbody>
</table>
<h4 id="工具版本信息"><a href="#工具版本信息" class="headerlink" title="工具版本信息"></a>工具版本信息</h4><table>
<thead>
<tr>
<th>工具</th>
<th>版本</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>centos</td>
<td>7.4</td>
<td>7版本的系统对docker性能支持更好</td>
</tr>
<tr>
<td>Ansible</td>
<td>2.5.2</td>
<td>因有些语法较新，需要ansible大于2.4</td>
</tr>
<tr>
<td>docker-ce</td>
<td>latest</td>
<td>-</td>
</tr>
<tr>
<td>Jenkins</td>
<td>2.128</td>
<td>-</td>
</tr>
<tr>
<td>Maven</td>
<td>3.5.3</td>
<td>-</td>
</tr>
<tr>
<td>Nodejs</td>
<td>v8.11.2</td>
<td>-</td>
</tr>
<tr>
<td>Nexus3_oss</td>
<td>3.12.0</td>
<td>-</td>
</tr>
</tbody>
</table>
<h4 id="Ansible工具包内容"><a href="#Ansible工具包内容" class="headerlink" title="Ansible工具包内容"></a>Ansible工具包内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># tree jenkins</span></div><div class="line">jenkins</div><div class="line">├── 01-install-jenkins.yml</div><div class="line">├── 02-clean-jenkins.yml</div><div class="line">├── 03-install-maven.yml</div><div class="line">├── 04-install-nodejs.yml</div><div class="line">├── 05-install-nexus3.yml</div><div class="line">├── 06-clean-nexus3.yml</div><div class="line">├── 07-install-docker.yml</div><div class="line">├── hosts</div><div class="line">├── pics</div><div class="line">│   ├── jenkins_dashboard.png</div><div class="line">│   └── nexus3_dashboard.png</div><div class="line">├── README.md</div><div class="line">└── roles</div><div class="line">    ├── clean-jenkins</div><div class="line">    │   ├── files</div><div class="line">    │   │   └── jenkins-docker-compose.yml.j2</div><div class="line">    │   └── tasks</div><div class="line">    │       └── main.yml</div><div class="line">    ├── clean-nexus3</div><div class="line">    │   ├── files</div><div class="line">    │   │   └── nexus3-docker-compose.yml.j2</div><div class="line">    │   └── tasks</div><div class="line">    │       └── main.yml</div><div class="line">    ├── common</div><div class="line">    │   ├── files</div><div class="line">    │   │   └── epel-release-latest-7.noarch.rpm</div><div class="line">    │   ├── tasks</div><div class="line">    │   │   └── main.yml</div><div class="line">    │   └── templates</div><div class="line">    │       ├── 20-nproc.conf</div><div class="line">    │       └── limits.conf</div><div class="line">    ├── docker</div><div class="line">    │   ├── files</div><div class="line">    │   │   ├── daemon.json</div><div class="line">    │   │   ├── docker-ce.repo</div><div class="line">    │   │   ├── docker-compose</div><div class="line">    │   │   └── docker.service</div><div class="line">    │   └── tasks</div><div class="line">    │       └── main.yml</div><div class="line">    ├── jdk</div><div class="line">    │   ├── files</div><div class="line">    │   │   ├── java.sh</div><div class="line">    │   │   └── jdk-8u171-linux-x64.tar.gz</div><div class="line">    │   └── tasks</div><div class="line">    │       └── main.yml</div><div class="line">    ├── jenkins</div><div class="line">    │   ├── files</div><div class="line">    │   │   ├── jenkins_2.128.tar.gz</div><div class="line">    │   │   └── jenkins-docker-compose.yml.j2</div><div class="line">    │   └── tasks</div><div class="line">    │       └── main.yml</div><div class="line">    ├── maven</div><div class="line">    │   ├── files</div><div class="line">    │   │   ├── apache-maven-3.5.3-bin.tar.gz</div><div class="line">    │   │   └── maven.sh</div><div class="line">    │   └── tasks</div><div class="line">    │       └── main.yml</div><div class="line">    ├── nexus3</div><div class="line">    │   ├── files</div><div class="line">    │   │   ├── nexus3-docker-compose.yml.j2</div><div class="line">    │   │   └── nexus_oss_3.12.0.tar.gz</div><div class="line">    │   └── tasks</div><div class="line">    │       └── main.yml</div><div class="line">    └── nodejs</div><div class="line">        ├── files</div><div class="line">        │   ├── nodejs.sh</div><div class="line">        │   └── node-v8.11.2-linux-x64.tar.xz</div><div class="line">        └── tasks</div><div class="line">            └── main.yml</div><div class="line"></div><div class="line">30 directories, 39 files</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>工具包大小：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># du -sh jenkins</span></div><div class="line">1.5G	jenkins</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<h4 id="工具包README"><a href="#工具包README" class="headerlink" title="工具包README"></a>工具包README</h4><p>本工具测试环境为：centos 7.4<br>Author：Jack_wang<br>Blog：<a href="http://www.yfshare.vip">http://www.yfshare.vip</a>  </p>
<h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><ol>
<li>ansible当前服务器自己root互信  </li>
<li>ansible服务器和其他所有各个节点root互信<br>命令: <code>ssh-copy-id -i ~/.ssh/id_rsa.pub root@ip</code>  </li>
</ol>
<p>注：ansible需要使用2.4以上的版本，因有些语法2.4以下不支持.<br>当前ansible版本为2.5.2。  </p>
<h5 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum -y install https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm</div><div class="line">yum -y install ansible</div></pre></td></tr></table></figure>
<p>注：这里安装ansible-2.5.2时，yum源里会缺少python-babel-0.9.6-8.el7.noarch.rpm包，可以在<a href="https://pkgs.org/download/python-b" target="_blank" rel="external">https://pkgs.org/download/python-b</a><br>abel这里下载.在当前目录也提供了该依赖包.<br>按要求修改hosts文件相关参数<br>操作步骤：  </p>
<ol>
<li>ansible-playbook -i hosts 01-install-jenkins.yml   #部署jenkins环境，docker镜像里集成maven  </li>
<li>ansible-playbook -i hosts 03-install-maven.yml     #部署maven环境  </li>
<li>ansible-playbook -i hosts 04-install-nodejs.yml    #部署nodejs环境  </li>
<li>ansible-playbook -i hosts 05-install-nexus3.yml    #部署nexus3-OSS环境  </li>
<li>ansible-playbook -i hosts 07-install-docker.yml    #部署docker-ce基础环境  </li>
</ol>
<p>部署成功后，可执行下面命令查看结果：<br>Jenkins：访问<a href="http://ip:8080" target="_blank" rel="external">http://ip:8080</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker ps <span class="_">-a</span> |grep -i <span class="string">'jenkins'</span></div></pre></td></tr></table></figure></p>
<p>Maven：<br>执行<code>mvn -v</code>  </p>
<p>Nodejs：<br>执行<code>node -v</code>  </p>
<p>nexus3：访问<a href="http://ip:8081" target="_blank" rel="external">http://ip:8081</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker ps <span class="_">-a</span> |grep -i <span class="string">'nexus'</span></div></pre></td></tr></table></figure></p>
<h5 id="卸载jenkins"><a href="#卸载jenkins" class="headerlink" title="卸载jenkins"></a>卸载jenkins</h5><p>按要求修改hosts文件相关参数<br>操作步骤：  </p>
<ol>
<li>ansible-playbook -i hosts 02-clean-jenkins.yml    #卸载jenkins  </li>
</ol>
<h5 id="卸载nexus3-oss"><a href="#卸载nexus3-oss" class="headerlink" title="卸载nexus3_oss"></a>卸载nexus3_oss</h5><p>按要求修改hosts文件相关参数<br>操作步骤：  </p>
<ol>
<li>ansible-playbook -i hosts 06-clean-nexus3.yml     #卸载nexus3</li>
</ol>
<p><img src="https://note.youdao.com/yws/api/personal/file/94440E3553464D6BAB6149486E74FE3B?method=download&amp;shareKey=39982b3d8a9b1c638cb6b37a16e2e72d" alt="jenkins_dashboard"><br><img src="https://note.youdao.com/yws/api/personal/file/352F095BF60249FDA6C6875E06688DD4?method=download&amp;shareKey=272cdc4d1c77ae74361b506ce6f502e2" alt="nexus3_dashboard">  </p>
<p>附件：<br><a href="https://pan.baidu.com/s/11SS6moEencz_4rcwtGQdeA" target="_blank" rel="external">jenkins_ansible_2.128.tar.gz百度网盘，密码：dxng</a>  </p>
<hr>
<p>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/06/21/Ansible部署Jenkins环境/">http://www.yfshare.vip/2018/06/21/Ansible部署Jenkins环境/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文是基于Ansible批量部署Jenkins环境&lt;br&gt;
    
    </summary>
    
      <category term="Jenkins" scheme="http://www.yfshare.vip/categories/Jenkins/"/>
    
    
      <category term="Jenkins" scheme="http://www.yfshare.vip/tags/Jenkins/"/>
    
      <category term="Ansible" scheme="http://www.yfshare.vip/tags/Ansible/"/>
    
      <category term="Maven" scheme="http://www.yfshare.vip/tags/Maven/"/>
    
      <category term="Nodejs" scheme="http://www.yfshare.vip/tags/Nodejs/"/>
    
  </entry>
  
</feed>
