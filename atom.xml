<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jack Wang Blog</title>
  <subtitle>Goals determine what you are going to be</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.yfshare.vip/"/>
  <updated>2018-02-23T13:28:20.285Z</updated>
  <id>http://www.yfshare.vip/</id>
  
  <author>
    <name>Jack Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>部署TLS k8s</title>
    <link href="http://www.yfshare.vip/2018/02/23/%E9%83%A8%E7%BD%B2TLS-k8s/"/>
    <id>http://www.yfshare.vip/2018/02/23/部署TLS-k8s/</id>
    <published>2018-02-23T12:44:12.000Z</published>
    <updated>2018-02-23T13:28:20.285Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Kubernetes是一个开源的，用于管理云平台中多个主机上的容器化的应用，Kubernetes的目标是让部署容器化的应用简单并且高效(powerful)，Kubernetes提供了应用部署，规划，更新，维护的一种机制。Kubernetes一个核心的特点就是能够自主的管理容器来保证云平台中的容器按照用户的期望状态运行。<br><a id="more"></a><br>环境：<br>　　　Centos 7.4.1708<br>　　　dockers 18.02.0-ce-rc1<br>　　　kubernetes v1.9.2<br>　　　etcd 3.2.15  </p>
<p>k8s下载地址：<a href="https://github.com/kubernetes/kubernetes/releases" target="_blank" rel="external">https://github.com/kubernetes/kubernetes/releases</a><br><a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.9.md#v192" target="_blank" rel="external">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.9.md#v192</a>  </p>
<h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><p>同步时间，所有节点均操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime -a</span></div><div class="line"><span class="comment"># ntpdate s1a.time.edu.cn</span></div><div class="line"><span class="comment"># crontab -l</span></div><div class="line">* */3 * * * ntpdate s1a.time.edu.cn &amp;&gt; /dev/null</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>设置主机名<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># hostname master1.example.com</span></div><div class="line">[root@master2 ~]<span class="comment"># hostname master2.example.com</span></div><div class="line">[root@master3 ~]<span class="comment"># hostname master3.example.com</span></div><div class="line">[root@node1 ~]<span class="comment"># hostname node1.example.com</span></div><div class="line">[root@node2 ~]<span class="comment"># hostname node2.example.com</span></div><div class="line"></div><div class="line"><span class="comment">#三个节点均做hosts解析</span></div><div class="line"><span class="comment"># tail -5 /etc/hosts</span></div><div class="line">192.168.1.195 master1.example.com master1</div><div class="line">192.168.1.196 master2.example.com master2</div><div class="line">192.168.1.197 master3.example.com master3</div><div class="line">192.168.1.198 node1.example.com node1</div><div class="line">192.168.1.199 node2.example.com node2</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>关闭防火墙和Selinux，所有节点都操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">iptables -F</div><div class="line">systemctl stop firewalld</div><div class="line">systemctl <span class="built_in">disable</span> firewalld</div><div class="line">setenforce 0</div></pre></td></tr></table></figure></p>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><table>
<thead>
<tr>
<th>角色</th>
<th>IP</th>
<th>组件</th>
</tr>
</thead>
<tbody>
<tr>
<td>Master1</td>
<td>192.168.1.195</td>
<td>etcd、kube-apiserver、kube-controller-manager、kube-scheduler、Flannel</td>
</tr>
<tr>
<td>Master2</td>
<td>192.168.1.196</td>
<td>etcd</td>
</tr>
<tr>
<td>Master3</td>
<td>192.168.1.197</td>
<td>etcd</td>
</tr>
<tr>
<td>Node1</td>
<td>192.168.1.198</td>
<td>kubelet、kube-proxy、docker、Flannel</td>
</tr>
<tr>
<td>Node2</td>
<td>192.168.1.199</td>
<td>kubelet、kube-proxy、docker、Flannel</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>名称</th>
<th>网段/地址</th>
<th>参数</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>Service_CIDR</td>
<td>172.16.0.0/16</td>
<td><code>--service-cluster-ip-range</code></td>
<td>服务 网段</td>
</tr>
<tr>
<td>Cluster_CIDR</td>
<td>172.30.0.0/16</td>
<td><code>--cluster-cidr</code></td>
<td>POD 网段</td>
</tr>
<tr>
<td>CLUSTER_KUBERNETES_SVC_IP</td>
<td>172.16.0.1</td>
<td>-</td>
<td>kubernetes 服务IP，SERVICE_CIDR 中第一个IP</td>
</tr>
<tr>
<td>CLUSTER_DNS_SVC_IP</td>
<td>172.16.0.2</td>
<td>-</td>
<td>集群DNS 服务IP，SERVICE_CIDR 中第二个IP</td>
</tr>
<tr>
<td>NODE_PORT_RANGE</td>
<td>8400-9000</td>
<td>服务端口 范围</td>
</tr>
<tr>
<td>CLUSTER_DNS_DOMAIN</td>
<td>-</td>
<td><code>cluster.local.</code></td>
<td>集群DNS域名</td>
</tr>
<tr>
<td>FLANNEL_ETCD_PREFIX</td>
<td>-</td>
<td><code>/kubernetes/network</code></td>
<td>flanneld 网络配置前缀</td>
</tr>
</tbody>
</table>
<p>安装Docker<br>在node1/node2这2个节点都安装docker引擎<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">yum remove docker docker-common docker-selinux docker-engine -y</div><div class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</div><div class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</div><div class="line">yum-config-manager --enable docker-ce-edge</div><div class="line">yum-config-manager --enable docker-ce-test</div><div class="line">yum install docker-ce -y</div><div class="line">systemctl <span class="built_in">enable</span> docker</div><div class="line">systemctl start docker</div></pre></td></tr></table></figure></p>
<h4 id="创建-CA-证书和秘钥"><a href="#创建-CA-证书和秘钥" class="headerlink" title="创建 CA 证书和秘钥"></a>创建 CA 证书和秘钥</h4><p>kubernetes 系统各组件需要使用 TLS 证书对通信进行加密，这里使用 CloudFlare 的 PKI 工具集 cfssl 来生成 Certificate Authority (CA) 证书和秘钥文件，CA 是自签名的证书，用来签名后续创建的其它 TLS 证书  </p>
<h5 id="安装-CFSSL"><a href="#安装-CFSSL" class="headerlink" title="安装 CFSSL"></a>安装 CFSSL</h5><p>cfssl下载地址：<a href="https://github.com/cloudflare/cfssl/releases" target="_blank" rel="external">https://github.com/cloudflare/cfssl/releases</a><br><a href="https://note.youdao.com/yws/api/personal/file/E9CE8AF7520D47F69337DCE8F6DBAC9E?method=download&amp;shareKey=240e513d965d3476e1aeaae363ca8689" target="_blank" rel="external">cfssl R1.2工具包本地下载</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 -O /usr/local/bin/cfssl</span></div><div class="line">[root@master1 ~]<span class="comment"># wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -O /usr/local/bin/cfssljson</span></div><div class="line">[root@master1 ~]<span class="comment"># wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -O /usr/local/bin/cfssl-certinfo</span></div><div class="line">[root@master1 ~]<span class="comment"># chmod +x /usr/local/bin/cfssl*</span></div><div class="line">[root@master1 ~]<span class="comment"># mkdir ssl &amp;&amp; cd ssl</span></div><div class="line"></div><div class="line">[root@master1 ssl]<span class="comment"># cfssl print-defaults config &gt; config.json</span></div><div class="line">[root@master1 ssl]<span class="comment"># cfssl print-defaults csr &gt; csr.json</span></div></pre></td></tr></table></figure></p>
<h5 id="创建-CA-Certificate-Authority"><a href="#创建-CA-Certificate-Authority" class="headerlink" title="创建 CA (Certificate Authority)"></a>创建 CA (Certificate Authority)</h5><table>
<thead>
<tr>
<th>证书名称</th>
<th>配置文件</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>ca.pem</td>
<td>ca-config.json</td>
<td>CA 配置文件</td>
</tr>
<tr>
<td>etcd.pem</td>
<td>ca-csr.json</td>
<td>CA 证书</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cat ca-config.json </span></div><div class="line">&#123;</div><div class="line">  <span class="string">"signing"</span>: &#123;</div><div class="line">    <span class="string">"default"</span>: &#123;</div><div class="line">      <span class="string">"expiry"</span>: <span class="string">"8760h"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"profiles"</span>: &#123;</div><div class="line">      <span class="string">"kubernetes"</span>: &#123;</div><div class="line">        <span class="string">"usages"</span>: [</div><div class="line">            <span class="string">"signing"</span>,</div><div class="line">            <span class="string">"key encipherment"</span>,</div><div class="line">            <span class="string">"server auth"</span>,</div><div class="line">            <span class="string">"client auth"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"expiry"</span>: <span class="string">"8760h"</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure>
<ul>
<li>ca-config.json：可以定义多个 profiles，分别指定不同的过期时间、使用场景等参数；后续在签名证书时使用某个 profile；</li>
<li>signing：表示该证书可用于签名其它证书；生成的 ca.pem 证书中 CA=TRUE；</li>
<li>server auth：表示 client 可以用该 CA 对 server 提供的证书进行验证；</li>
<li>client auth：表示 server 可以用该 CA 对 client 提供的证书进行验证；</li>
</ul>
<h5 id="创建-CA-证书签名请求"><a href="#创建-CA-证书签名请求" class="headerlink" title="创建 CA 证书签名请求"></a>创建 CA 证书签名请求</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cat ca-csr.json </span></div><div class="line">&#123;</div><div class="line">  <span class="string">"CN"</span>: <span class="string">"kubernetes"</span>,</div><div class="line">  <span class="string">"key"</span>: &#123;</div><div class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</div><div class="line">    <span class="string">"size"</span>: 2048</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"names"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</div><div class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</div><div class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure>
<ul>
<li>“CN”：Common Name，kube-apiserver 从证书中提取该字段作为请求的用户名 (User Name)；浏览器使用该字段验证网站是否合法；</li>
<li>“O”：Organization，kube-apiserver 从证书中提取该字段作为请求用户所属的组 (Group)；</li>
</ul>
<h5 id="生成-CA-证书和私钥"><a href="#生成-CA-证书和私钥" class="headerlink" title="生成 CA 证书和私钥"></a>生成 CA 证书和私钥</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span></div><div class="line"></div><div class="line">[root@master1 ssl]<span class="comment"># ls ca*</span></div><div class="line">ca-config.json  ca.csr  ca-csr.json  ca-key.pem  ca.pem</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h5 id="分发证书"><a href="#分发证书" class="headerlink" title="分发证书"></a>分发证书</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># mkdir -p /etc/kubernetes/ssl</span></div><div class="line">[root@master1 ssl]<span class="comment"># cp ca* /etc/kubernetes/ssl</span></div><div class="line">[root@master1 ssl]<span class="comment"># ls /etc/kubernetes/ssl/</span></div><div class="line">ca-config.json  ca.csr  ca-csr.json  ca-key.pem  ca.pem</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># ssh root@192.168.1.196 "mkdir -p /etc/kubernetes/ssl"</span></div><div class="line">[root@master1 ssl]<span class="comment"># scp /etc/kubernetes/ssl/ca* root@192.168.1.196:/etc/kubernetes/ssl/</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># ssh root@192.168.1.197 "mkdir -p /etc/kubernetes/ssl"</span></div><div class="line">[root@master1 ssl]<span class="comment"># scp /etc/kubernetes/ssl/ca* root@192.168.1.197:/etc/kubernetes/ssl/</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># ssh root@192.168.1.198 "mkdir -p /etc/kubernetes/ssl"</span></div><div class="line">[root@master1 ssl]<span class="comment"># scp /etc/kubernetes/ssl/ca* root@192.168.1.198:/etc/kubernetes/ssl/</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># ssh root@192.168.1.199 "mkdir -p /etc/kubernetes/ssl"</span></div><div class="line">[root@master1 ssl]<span class="comment"># scp /etc/kubernetes/ssl/ca* root@192.168.1.199:/etc/kubernetes/ssl/</span></div></pre></td></tr></table></figure>
<h4 id="部署高可用-etcd-集群"><a href="#部署高可用-etcd-集群" class="headerlink" title="部署高可用 etcd 集群"></a>部署高可用 etcd 集群</h4><p>需要关闭 selinux，关闭防火墙，ntpdate 时间同步<br>kuberntes 系统使用 etcd 存储所有数据，这里和kuberntes master安装到一起<br>三个etcd分别取名为：etcd1、etcd2、etcd3  </p>
<table>
<thead>
<tr>
<th>集群名称</th>
<th>IP</th>
<th>集群地址</th>
</tr>
</thead>
<tbody>
<tr>
<td>etcd1</td>
<td>192.168.1.195</td>
<td><a href="https://192.168.1.195:2379" target="_blank" rel="external">https://192.168.1.195:2379</a></td>
</tr>
<tr>
<td>etcd2</td>
<td>192.168.1.196</td>
<td><a href="https://192.168.1.196:2379" target="_blank" rel="external">https://192.168.1.196:2379</a></td>
</tr>
<tr>
<td>etcd3</td>
<td>192.168.1.197</td>
<td><a href="https://192.168.1.197:2379" target="_blank" rel="external">https://192.168.1.197:2379</a></td>
</tr>
</tbody>
</table>
<h5 id="安装-Etcd"><a href="#安装-Etcd" class="headerlink" title="安装 Etcd"></a>安装 Etcd</h5><p><strong>三个节点master均安装</strong><br>etcd下载地址：<a href="https://github.com/coreos/etcd/releases" target="_blank" rel="external">https://github.com/coreos/etcd/releases</a><br><a href="https://note.youdao.com/yws/api/personal/file/A48C40B53E5442D0A87D037CF9683155?method=download&amp;shareKey=1925129c3689f9cf58802e996e8103bb" target="_blank" rel="external">etcd-v3.2.15本地下载</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># wget https://github.com/coreos/etcd/releases/download/v3.2.15/etcd-v3.2.15-linux-amd64.tar.gz</span></div><div class="line">[root@master1 ~]<span class="comment"># tar -zxf etcd-v3.2.15-linux-amd64.tar.gz</span></div><div class="line">[root@master1 ~]<span class="comment"># cp -a etcd-v3.2.15-linux-amd64/etcd* /usr/local/bin/</span></div></pre></td></tr></table></figure></p>
<h5 id="创建-TLS-秘钥和证书"><a href="#创建-TLS-秘钥和证书" class="headerlink" title="创建 TLS 秘钥和证书"></a>创建 TLS 秘钥和证书</h5><p>为了保证通信安全，客户端(如 etcdctl) 与 etcd 集群、etcd 集群之间的通信需要使用 TLS 加密  </p>
<p>创建 etcd 证书签名请求<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># mkdir -p ssl/</span></div><div class="line">[root@master1 ~]<span class="comment"># cd ssl/</span></div><div class="line">[root@master1 ssl]<span class="comment"># cat etcd-csr.json </span></div><div class="line">&#123;</div><div class="line">  <span class="string">"CN"</span>: <span class="string">"etcd"</span>,</div><div class="line">  <span class="string">"hosts"</span>: [</div><div class="line">    <span class="string">"127.0.0.1"</span>,</div><div class="line">    <span class="string">"192.168.1.195"</span>,</div><div class="line">    <span class="string">"192.168.1.196"</span>,</div><div class="line">    <span class="string">"192.168.1.197"</span></div><div class="line">  ],</div><div class="line">  <span class="string">"key"</span>: &#123;</div><div class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</div><div class="line">    <span class="string">"size"</span>: 2048</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"names"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</div><div class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</div><div class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li>hosts 字段指定授权使用该证书的 etcd 节点 IP</li>
</ul>
<p>生成 etcd 证书和私钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem -ca-key=/etc/kubernetes/ssl/ca-key.pem -config=/etc/kubernetes/ssl/ca-config.json -profile=kubernetes etcd-csr.json | cfssljson -bare etcd</span></div><div class="line">[root@master1 ssl]<span class="comment"># ls etcd*</span></div><div class="line">etcd.csr  etcd-csr.json  etcd-key.pem  etcd.pem</div><div class="line">[root@master1 ssl]<span class="comment"># mkdir -p /etc/etcd/ssl</span></div><div class="line">[root@master1 ssl]<span class="comment"># cp etcd*.pem /etc/etcd/ssl/</span></div></pre></td></tr></table></figure></p>
<p>创建 etcd 的 systemd unit 文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># mkdir -p /var/lib/etcd</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># cat etcd.service </span></div><div class="line">[Unit]</div><div class="line">Description=Etcd Server</div><div class="line">After=network.target</div><div class="line">After=network-online.target</div><div class="line">Wants=network-online.target</div><div class="line">Documentation=https://github.com/coreos</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line">WorkingDirectory=/var/lib/etcd/</div><div class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/etcd \</div><div class="line">  --name=etcd1 \</div><div class="line">  --cert-file=/etc/etcd/ssl/etcd.pem \</div><div class="line">  --key-file=/etc/etcd/ssl/etcd-key.pem \</div><div class="line">  --peer-cert-file=/etc/etcd/ssl/etcd.pem \</div><div class="line">  --peer-key-file=/etc/etcd/ssl/etcd-key.pem \</div><div class="line">  --trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</div><div class="line">  --peer-trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</div><div class="line">  --initial-advertise-peer-urls=https://192.168.1.195:2380 \</div><div class="line">  --listen-peer-urls=https://192.168.1.195:2380 \</div><div class="line">  --listen-client-urls=https://192.168.1.195:2379,http://127.0.0.1:2379 \</div><div class="line">  --advertise-client-urls=https://192.168.1.195:2379 \</div><div class="line">  --initial-cluster-token=etcd-cluster-0 \</div><div class="line">  --initial-cluster=etcd1=https://192.168.1.195:2380,etcd2=https://192.168.1.196:2380,etcd3=https://192.168.1.197:2380 \</div><div class="line">  --initial-cluster-state=new \</div><div class="line">  --data-dir=/var/lib/etcd</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<ul>
<li>指定 etcd 的工作目录和数据目录为<code>/var/lib/etcd</code>，需在启动服务前创建这个目录</li>
<li><code>--name</code>为当前etcd的名称，<strong>每个etcd节点名字不能相同</strong></li>
<li><code>--initial-advertise-peer-urls</code>，<code>--listen-peer-urls</code>，<code>--listen-client-urls</code>，<code>--advertise-client-urls</code>这四个参数需要修改为<strong>当前节点的IP地址</strong>  </li>
<li><code>--initial-cluster</code>参数为，etcd集群所有节点的IP地址</li>
<li>为了保证通信安全，需要指定 etcd 的公私钥(<code>cert-file</code>和<code>key-file</code>)、Peers 通信的公私钥和 CA 证书(<code>peer-cert-file</code>、<code>peer-key-file</code>、<code>peer-trusted-ca-file</code>)、客户端的CA证书（<code>trusted-ca-file</code>）</li>
<li><code>--initial-cluster-state</code>值为 new 时，<code>--name</code> 的参数值必须位于 <code>--initial-cluster</code> 列表中</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># mv etcd.service /etc/systemd/system/</span></div></pre></td></tr></table></figure>
<p>分发etcd证书<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># ssh root@192.168.1.196 "mkdir -p /var/lib/etcd"</span></div><div class="line">[root@master1 ~]<span class="comment"># ssh root@192.168.1.196 "mkdir -p /etc/etcd/ssl"</span></div><div class="line">[root@master1 ~]<span class="comment"># scp /etc/etcd/ssl/etcd* root@192.168.1.196:/etc/etcd/ssl/</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># ssh root@192.168.1.197 "mkdir -p /var/lib/etcd"</span></div><div class="line">[root@master1 ~]<span class="comment"># ssh root@192.168.1.197 "mkdir -p /etc/etcd/ssl"</span></div><div class="line">[root@master1 ~]<span class="comment"># scp /etc/etcd/ssl/etcd* root@192.168.1.197:/etc/etcd/ssl/</span></div></pre></td></tr></table></figure>
<p>分发etcd.service<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># scp /etc/systemd/system/etcd.service root@192.168.1.196:/etc/systemd/system/</span></div><div class="line">[root@master1 ~]<span class="comment"># scp /etc/systemd/system/etcd.service root@192.168.1.197:/etc/systemd/system/</span></div></pre></td></tr></table></figure></p>
<p>启动 etcd 服务<br>依次启动所有节点的etcd服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div><div class="line">systemctl <span class="built_in">enable</span> etcd</div><div class="line">systemctl start etcd</div></pre></td></tr></table></figure></p>
<ul>
<li>最先启动的 etcd 进程会卡住一段时间，再等待其它节点上的 etcd 进程加入集群，这是正常现象</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># export ETCDCTL_API=3</span></div><div class="line">[root@master1 ~]<span class="comment"># etcdctl --cacert=/etc/kubernetes/ssl/ca.pem --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem --endpoints=https://192.168.1.195:2379,https://192.168.1.196:2379,https://192.168.1.197:2379 endpoint health</span></div><div class="line">https://192.168.1.197:2379 is healthy: successfully committed proposal: took = 1.631081ms</div><div class="line">https://192.168.1.195:2379 is healthy: successfully committed proposal: took = 1.187637ms</div><div class="line">https://192.168.1.196:2379 is healthy: successfully committed proposal: took = 1.461928ms</div></pre></td></tr></table></figure>
<h4 id="部署Flannel-网络"><a href="#部署Flannel-网络" class="headerlink" title="部署Flannel 网络"></a>部署Flannel 网络</h4><p>Flannel是 CoreOS 团队针对 Kubernetes 设计的一个覆盖网络（Overlay Network）工具，其目的在于帮助每一个使用 Kuberentes 的 CoreOS 主机拥有一个完整的子网。简单来说，它的功能是让集群中的不同节点主机创建的Docker容器都具有全集群唯一的虚拟IP地址，因为在默认的Docker配置中，每个节点上的Docker服务会分别负责所在节点容器的IP分配。这样会导致一个问题，不同节点上容器可能获得相同的内外IP地址。Flannel的设计目的就是为集群中的所有节点重新规划IP地址的使用规则，从而使得不同节点上的容器能够获得“同属一个内网”且”不重复的”IP地址，并让属于不同节点上的容器能够直接通过内网IP通信。   </p>
<p>Flannel通过Etcd服务维护了一张节点间的路由表<br>参考：<a href="http://dockone.io/article/618" target="_blank" rel="external">http://dockone.io/article/618</a>  </p>
<p>flannel下载地址：<a href="https://github.com/coreos/flannel/releases" target="_blank" rel="external">https://github.com/coreos/flannel/releases</a><br><a href="https://note.youdao.com/yws/api/personal/file/5447ED8CA54D48EF86FB0668FDE54DFF?method=download&amp;shareKey=a9a38141e456fc88a678fdc1309a3dc9" target="_blank" rel="external">flannel-v0.10.0本地下载</a>  </p>
<table>
<thead>
<tr>
<th>节点名称</th>
<th>节点IP</th>
<th>分配地址</th>
</tr>
</thead>
<tbody>
<tr>
<td>node1</td>
<td>192.168.1.198</td>
<td>172.30.57.0</td>
</tr>
<tr>
<td>node2</td>
<td>192.168.1.199</td>
<td>172.30.41.0</td>
</tr>
</tbody>
</table>
<p>在安装有cfssl工具的服务器上操作  </p>
<h5 id="创建-TLS-秘钥和证书-1"><a href="#创建-TLS-秘钥和证书-1" class="headerlink" title="创建 TLS 秘钥和证书"></a>创建 TLS 秘钥和证书</h5><p>etcd 集群启用了双向 TLS 认证，所以需要为 flanneld 指定与 etcd 集群通信的 CA 和秘钥  </p>
<p>创建 CA 配置文件<br>创建 flanneld 证书签名请求<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cat flanneld-csr.json </span></div><div class="line">&#123;</div><div class="line">  <span class="string">"CN"</span>: <span class="string">"flanneld"</span>,</div><div class="line">  <span class="string">"hosts"</span>: [],</div><div class="line">  <span class="string">"key"</span>: &#123;</div><div class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</div><div class="line">    <span class="string">"size"</span>: 2048</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"names"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</div><div class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</div><div class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li>hosts 字段为空  </li>
</ul>
<p>生成 flanneld 证书和私钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem -ca-key=/etc/kubernetes/ssl/ca-key.pem -config=/etc/kubernetes/ssl/ca-config.json -profile=kubernetes flanneld-csr.json | cfssljson -bare flanneld</span></div><div class="line">[root@master1 ssl]<span class="comment"># ls flanneld*</span></div><div class="line">flanneld.csr  flanneld-csr.json  flanneld-key.pem  flanneld.pem</div><div class="line">[root@master1 ssl]<span class="comment"># mkdir -p /etc/flanneld/ssl</span></div><div class="line">[root@master1 ssl]<span class="comment"># cp -a flanneld*.pem /etc/flanneld/ssl</span></div></pre></td></tr></table></figure></p>
<p>分发flanneld证书<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># ssh root@192.168.1.198 "mkdir -p /etc/flanneld/ssl"</span></div><div class="line">[root@master1 ssl]<span class="comment"># scp /etc/flanneld/ssl/flanneld* root@192.168.1.198:/etc/flanneld/ssl/</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># ssh root@192.168.1.199 "mkdir -p /etc/flanneld/ssl"</span></div><div class="line">[root@master1 ssl]<span class="comment"># scp /etc/flanneld/ssl/flanneld* root@192.168.1.199:/etc/flanneld/ssl/</span></div></pre></td></tr></table></figure>
<p>向 etcd 写入集群 Pod 网段信息<br>使用 etcd v2 API 写入配置<br>前面执行了<code>export ETCDCTL_API=3</code>，这个命令会调用<code>etcd v3 API</code>，所以需要重新打开一个xshell窗口，否则会报错<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># etcdctl --endpoints=https://192.168.1.195:2379,https://192.168.1.195:2379,https://192.168.1.195:2379 --ca-file=/etc/kubernetes/ssl/ca.pem --cert-file=/etc/flanneld/ssl/flanneld.pem --key-file=/etc/flanneld/ssl/flanneld-key.pem set /kubernetes/network/config '&#123;"Network":"'172.30.0.0/16'", "SubnetLen": 24, "Backend": &#123;"Type": "vxlan"&#125;&#125;'</span></div><div class="line">&#123;<span class="string">"Network"</span>:<span class="string">"172.30.0.0/16"</span>, <span class="string">"SubnetLen"</span>: 24, <span class="string">"Backend"</span>: &#123;<span class="string">"Type"</span>: <span class="string">"vxlan"</span>&#125;&#125;</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># etcdctl --endpoints=https://192.168.1.195:2379,https://192.168.1.195:2379,https://192.168.1.195:2379 --ca-file=/etc/kubernetes/ssl/ca.pem --cert-file=/etc/flanneld/ssl/flanneld.pem --key-file=/etc/flanneld/ssl/flanneld-key.pem get /kubernetes/network/config</span></div><div class="line">&#123;<span class="string">"Network"</span>:<span class="string">"172.30.0.0/16"</span>, <span class="string">"SubnetLen"</span>: 24, <span class="string">"Backend"</span>: &#123;<span class="string">"Type"</span>: <span class="string">"vxlan"</span>&#125;&#125;</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>安装和配置 flanneld<br>在node1/node2节点安装，master不安装flannel<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># wget https://github.com/coreos/flannel/releases/download/v0.10.0/flannel-v0.10.0-linux-amd64.tar.gz</span></div><div class="line">[root@node1 ~]<span class="comment"># mkdir flannel</span></div><div class="line">[root@node1 ~]<span class="comment"># tar -zxf flannel-v0.10.0-linux-amd64.tar.gz -C flannel</span></div><div class="line">[root@node1 ~]<span class="comment"># cp -a flannel/&#123;flanneld,mk-docker-opts.sh&#125; /usr/local/bin/</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># cat flanneld.service </span></div><div class="line">[Unit]</div><div class="line">Description=Flanneld overlay address etcd agent</div><div class="line">After=network.target</div><div class="line">After=network-online.target</div><div class="line">Wants=network-online.target</div><div class="line">After=etcd.service</div><div class="line">Before=docker.service</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/flanneld \</div><div class="line">  -etcd-cafile=/etc/kubernetes/ssl/ca.pem \</div><div class="line">  -etcd-certfile=/etc/flanneld/ssl/flanneld.pem \</div><div class="line">  -etcd-keyfile=/etc/flanneld/ssl/flanneld-key.pem \</div><div class="line">  -etcd-endpoints=https://192.168.1.195:2379,https://192.168.1.195:2379,https://192.168.1.195:2379 \</div><div class="line">  -etcd-prefix=/kubernetes/network</div><div class="line">ExecStartPost=/usr/<span class="built_in">local</span>/bin/mk-docker-opts.sh -k DOCKER_NETWORK_OPTIONS <span class="_">-d</span> /run/flannel/docker</div><div class="line">Restart=on-failure</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">RequiredBy=docker.service</div><div class="line">[root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<ul>
<li>mk-docker-opts.sh脚本将分配给 flanneld 的 Pod 子网网段信息写入到 /run/flannel/docker 文件中，后续 docker 启动时使用这个文件中参数值设置 docker0 网桥；</li>
<li>flanneld 使用系统缺省路由所在的接口和其它节点通信，对于有多个网络接口的机器（如，内网和公网），可以用 –iface 选项值指定通信接口(上面的 systemd unit 文件没指定这个选项)，如本着 Vagrant + Virtualbox，就要指定–iface=enp0s8；</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># cp flanneld.service /etc/systemd/system/</span></div></pre></td></tr></table></figure>
<p>启动 flanneld<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div><div class="line">systemctl <span class="built_in">enable</span> flanneld</div><div class="line">systemctl start flanneld</div></pre></td></tr></table></figure></p>
<h6 id="docker集成flanneld网络"><a href="#docker集成flanneld网络" class="headerlink" title="docker集成flanneld网络"></a>docker集成flanneld网络</h6><p>让docker0网卡使用flanneld网络网段地址<br><a href="https://note.youdao.com/yws/api/personal/file/2137351870BB4393A12F4BEC6388DA44?method=download&amp;shareKey=c2e7067c0a4236332b684c8de6881018" target="_blank" rel="external">docker.service-yum安装</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># grep -iv '#' /usr/lib/systemd/system/docker.service</span></div><div class="line">[Unit]</div><div class="line">Description=Docker Application Container Engine</div><div class="line">Documentation=https://docs.docker.com</div><div class="line">After=network-online.target firewalld.service</div><div class="line">Wants=network-online.target</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line"></div><div class="line"><span class="comment">#新增下面两个参数</span></div><div class="line">ExecStart=/usr/bin/dockerd <span class="variable">$DOCKER_NETWORK_OPTIONS</span></div><div class="line">EnvironmentFile=/run/flannel/docker</div><div class="line"></div><div class="line">ExecReload=/bin/<span class="built_in">kill</span> <span class="_">-s</span> HUP <span class="variable">$MAINPID</span></div><div class="line">LimitNOFILE=infinity</div><div class="line">LimitNPROC=infinity</div><div class="line">LimitCORE=infinity</div><div class="line">TimeoutStartSec=0</div><div class="line">Delegate=yes</div><div class="line">KillMode=process</div><div class="line">Restart=on-failure</div><div class="line">StartLimitBurst=3</div><div class="line">StartLimitInterval=60s</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">[root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># systemctl restart docker</span></div></pre></td></tr></table></figure>
<p>检查 flanneld 服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># ifconfig flannel.1</span></div><div class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</div><div class="line">        inet 172.30.57.0  netmask 255.255.255.255  broadcast 0.0.0.0</div><div class="line">        inet6 fe80::7890:e0ff:fe20:836e  prefixlen 64  scopeid 0x20&lt;link&gt;</div><div class="line">        ether 7a:90:e0:20:83:6e  txqueuelen 0  (Ethernet)</div><div class="line">        RX packets 0  bytes 0 (0.0 B)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 0  bytes 0 (0.0 B)</div><div class="line">        TX errors 0  dropped 8 overruns 0  carrier 0  collisions 0</div><div class="line"></div><div class="line">[root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li>其他节点安装flanneld同上</li>
</ul>
<p>检查分配给各 flanneld 的 Pod 网段信息<br>查看集群 Pod 网段(/16)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># etcdctl --endpoints=https://192.168.1.195:2379,https://192.168.1.195:2379,https://192.168.1.195:2379 --ca-file=/etc/kubernetes/ssl/ca.pem --cert-file=/etc/flanneld/ssl/flanneld.pem --key-file=/etc/flanneld/ssl/flanneld-key.pem get /kubernetes/network/config</span></div><div class="line">&#123;<span class="string">"Network"</span>:<span class="string">"172.30.0.0/16"</span>, <span class="string">"SubnetLen"</span>: 24, <span class="string">"Backend"</span>: &#123;<span class="string">"Type"</span>: <span class="string">"vxlan"</span>&#125;&#125;</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>查看已分配的 Pod 子网段列表(/24)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># etcdctl --endpoints=https://192.168.1.195:2379,https://192.168.1.195:2379,https://192.168.1.195:2379 --ca-file=/etc/kubernetes/ssl/ca.pem --cert-file=/etc/flanneld/ssl/flanneld.pem --key-file=/etc/flanneld/ssl/flanneld-key.pem ls /kubernetes/network/subnets</span></div><div class="line">/kubernetes/network/subnets/172.30.57.0-24</div></pre></td></tr></table></figure></p>
<p>查看某一 Pod 网段对应的 flanneld 进程监听的 IP 和网络参数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># etcdctl --endpoints=https://192.168.1.195:2379,https://192.168.1.195:2379,https://192.168.1.195:2379 --ca-file=/etc/kubernetes/ssl/ca.pem --cert-file=/etc</span></div><div class="line">/flanneld/ssl/flanneld.pem --key-file=/etc/flanneld/ssl/flanneld-key.pem get /kubernetes/network/subnets/172.30.57.0-24</div><div class="line">&#123;<span class="string">"PublicIP"</span>:<span class="string">"192.168.1.198"</span>,<span class="string">"BackendType"</span>:<span class="string">"vxlan"</span>,<span class="string">"BackendData"</span>:&#123;<span class="string">"VtepMAC"</span>:<span class="string">"7a:90:e0:20:83:6e"</span>&#125;&#125;</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>确保各节点间 Pod 网段能互联互通<br>在各节点上部署完 Flannel 后，查看已分配的 Pod 子网段列表(/24)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># etcdctl --endpoints=https://192.168.1.195:2379,https://192.168.1.195:2379,https://192.168.1.195:2379 --ca-file=/etc/kubernetes/ssl/ca.pem --cert-file=/etc</span></div><div class="line">/flanneld/ssl/flanneld.pem --key-file=/etc/flanneld/ssl/flanneld-key.pem ls /kubernetes/network/subnets</div><div class="line">/kubernetes/network/subnets/172.30.41.0-24</div><div class="line">/kubernetes/network/subnets/172.30.57.0-24</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>当前两个节点分配的 Pod 网段分别是：172.30.42.0-24、172.30.100.0-24<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># ip a | egrep -i 'docker0|flannel.1'</span></div><div class="line">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN </div><div class="line">    inet 172.30.57.1/24 brd 172.30.57.255 scope global docker0</div><div class="line">4: flannel.1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UNKNOWN </div><div class="line">    inet 172.30.57.0/32 scope global flannel.1</div><div class="line">[root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@node2 ~]<span class="comment"># ip a | egrep -i 'docker0|flannel.1'</span></div><div class="line">3: flannel.1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UNKNOWN </div><div class="line">    inet 172.30.42.0/32 scope global flannel.1</div><div class="line">4: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN </div><div class="line">    inet 172.30.42.1/24 brd 172.30.41.255 scope global docker0</div><div class="line">[root@node2 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>在各节点上分配 ping 这两个网段的网关地址，确保能通<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># ping 172.30.57.0 -c 4</span></div><div class="line">[root@node1 ~]<span class="comment"># ping 172.30.42.0 -c 4</span></div></pre></td></tr></table></figure></p>
<h4 id="部署-k8s-master-节点"><a href="#部署-k8s-master-节点" class="headerlink" title="部署 k8s master 节点"></a>部署 k8s master 节点</h4><p>kubernetes master 节点包含的组件:  </p>
<ul>
<li>kube-apiserver</li>
<li>kube-scheduler</li>
<li>kube-controller-manager</li>
</ul>
<p>这三个组件需要部署在同一台机器上  </p>
<ul>
<li><code>kube-scheduler</code>、<code>kube-controller-manager</code> 和 <code>kube-apiserver</code> 三者的功能紧密相关；</li>
<li>同时只能有一个 <code>kube-scheduler</code>、<code>kube-controller-manager</code> 进程处于工作状态，如果运行多个，则需要通过选举产生一个 leader；</li>
</ul>
<p>kubernetes发布版 tarball(下载脚本) 下载地址：<a href="https://github.com/kubernetes/kubernetes/releases" target="_blank" rel="external">https://github.com/kubernetes/kubernetes/releases</a><br>kubernetes CHANGELOG(server/client) 下载地址：<a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG.md" target="_blank" rel="external">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG.md</a>  </p>
<table>
<thead>
<tr>
<th>Service</th>
<th>通讯地址</th>
</tr>
</thead>
<tbody>
<tr>
<td>kube-apiserver</td>
<td>192.168.1.195:6443</td>
</tr>
<tr>
<td>kube-controll</td>
<td>127.0.0.1:10252</td>
</tr>
<tr>
<td>kube-schedule</td>
<td>127.0.0.1:10251</td>
</tr>
</tbody>
</table>
<p><a href="https://pan.baidu.com/s/1sngFMlZ" target="_blank" rel="external">百度网盘packages目录，密码：nwzk</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># wget https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz -O kubernetes-server-linux-amd64-v1.9.2.tar.gz</span></div><div class="line">[root@master1 ~]<span class="comment"># tar -zxf kubernetes-server-linux-amd64-v1.9.2.tar.gz</span></div><div class="line">[root@master1 ~]<span class="comment"># cd kubernetes</span></div><div class="line">[root@master1 kubernetes]<span class="comment"># tar -zxf kubernetes-src.tar.gz </span></div><div class="line">[root@master1 kubernetes]<span class="comment"># cp -r server/bin/&#123;kube-apiserver,kube-controller-manager,kube-scheduler,kubectl,kube-proxy,kubelet&#125; /usr/local/bin/</span></div></pre></td></tr></table></figure></p>
<h5 id="创建-kubernetes-证书"><a href="#创建-kubernetes-证书" class="headerlink" title="创建 kubernetes 证书"></a>创建 kubernetes 证书</h5><p>创建 kubernetes 证书签名请求<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># cd ~/ssl/</span></div><div class="line">[root@master1 ssl]<span class="comment"># cat kubernetes-csr.json</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"CN"</span>: <span class="string">"kubernetes"</span>,</div><div class="line">  <span class="string">"hosts"</span>: [</div><div class="line">    <span class="string">"127.0.0.1"</span>,</div><div class="line">    <span class="string">"192.168.1.195"</span>,</div><div class="line">    <span class="string">"172.16.0.1"</span>,</div><div class="line">    <span class="string">"kubernetes"</span>,</div><div class="line">    <span class="string">"kubernetes.default"</span>,</div><div class="line">    <span class="string">"kubernetes.default.svc"</span>,</div><div class="line">    <span class="string">"kubernetes.default.svc.cluster"</span>,</div><div class="line">    <span class="string">"kubernetes.default.svc.cluster.local"</span></div><div class="line">  ],</div><div class="line">  <span class="string">"key"</span>: &#123;</div><div class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</div><div class="line">    <span class="string">"size"</span>: 2048</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"names"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</div><div class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</div><div class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li><code>192.168.1.195</code>为当前部署的 master 机器 IP  </li>
<li><code>172.16.0.1</code>kubernetes 服务 IP (预分配，一般是 SERVICE_CIDR 中第一个IP)  </li>
<li>如果 hosts 字段不为空则需要指定授权使用该证书的 IP 或域名列表，所以上面分别指定了当前部署的 master 节点主机 IP；  </li>
<li>还需要添加 kube-apiserver 注册的名为 kubernetes 的服务 IP (Service Cluster IP)，一般是 kube-apiserver –service-cluster-ip-range 选项值指定的网段的第一个IP，如 “172.16.0.1”；  </li>
</ul>
<p>生成 kubernetes 证书和私钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># cd ssl/</span></div><div class="line">[root@master1 ssl]<span class="comment"># cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem -ca-key=/etc/kubernetes/ssl/ca-key.pem -config=/etc/kubernetes/ssl/ca-config.json -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes</span></div><div class="line">[root@master1 ssl]<span class="comment"># ls kubernetes*</span></div><div class="line">kubernetes.csr  kubernetes-csr.json  kubernetes-key.pem  kubernetes.pem</div><div class="line">[root@master1 ssl]<span class="comment"># mkdir -p /etc/kubernetes/ssl/</span></div><div class="line">[root@master1 ssl]<span class="comment"># mv kubernetes*.pem /etc/kubernetes/ssl/</span></div></pre></td></tr></table></figure></p>
<h5 id="配置和启动-kube-apiserver"><a href="#配置和启动-kube-apiserver" class="headerlink" title="配置和启动 kube-apiserver"></a>配置和启动 kube-apiserver</h5><p>创建 kube-apiserver 使用的客户端 token 文件<br>kubelet 首次启动时向 kube-apiserver 发送 TLS Bootstrapping 请求，kube-apiserver 验证 kubelet 请求中的 token 是否与它配置的 token.csv 一致，如果一致则自动为 kubelet生成证书和秘钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#生成TLS Bootstrapping 使用的 Token</span></div><div class="line">[root@master1 ~]<span class="comment"># head -c 16 /dev/urandom | od -An -t x | tr -d ' '</span></div><div class="line">6240b18d950d086ff9eb596e215d243f</div><div class="line">[root@master1 ssl]<span class="comment"># cat token.csv </span></div><div class="line">6240b18d950d086ff9eb596e215d243f,kubelet-bootstrap,10001,<span class="string">"system:kubelet-bootstrap"</span></div><div class="line">[root@master1 ssl]<span class="comment"># mv token.csv /etc/kubernetes/</span></div><div class="line">[root@master1 ssl]<span class="comment"># cat basic-auth.csv </span></div><div class="line">admin,admin@123,1</div><div class="line"><span class="built_in">readonly</span>,<span class="built_in">readonly</span>,2</div><div class="line">[root@master1 ssl]<span class="comment"># mv basic-auth.csv /etc/kubernetes/</span></div></pre></td></tr></table></figure></p>
<p>创建 kube-apiserver 的 systemd unit 文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cat kube-apiserver.service </span></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes API Server</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line">After=network.target</div><div class="line"></div><div class="line">[Service]</div><div class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-apiserver \</div><div class="line">  --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \</div><div class="line">  --advertise-address=192.168.1.195 \</div><div class="line">  --bind-address=192.168.1.195 \</div><div class="line">  --insecure-bind-address=192.168.1.195 \</div><div class="line">  --authorization-mode=RBAC \</div><div class="line">  --runtime-config=rbac.authorization.k8s.io/v1alpha1 \</div><div class="line">  --kubelet-https=<span class="literal">true</span> \</div><div class="line">  --token-auth-file=/etc/kubernetes/token.csv \</div><div class="line">  --service-cluster-ip-range=172.16.0.0/16 \</div><div class="line">  --service-node-port-range=8400-9000 \</div><div class="line">  --tls-cert-file=/etc/kubernetes/ssl/kubernetes.pem \</div><div class="line">  --tls-private-key-file=/etc/kubernetes/ssl/kubernetes-key.pem \</div><div class="line">  --client-ca-file=/etc/kubernetes/ssl/ca.pem \</div><div class="line">  --service-account-key-file=/etc/kubernetes/ssl/ca-key.pem \</div><div class="line">  --etcd-cafile=/etc/kubernetes/ssl/ca.pem \</div><div class="line">  --etcd-certfile=/etc/kubernetes/ssl/kubernetes.pem \</div><div class="line">  --etcd-keyfile=/etc/kubernetes/ssl/kubernetes-key.pem \</div><div class="line">  --etcd-servers=https://192.168.1.195:2379,https://192.168.1.196:2379,https://192.168.1.197:2379 \</div><div class="line">  --enable-swagger-ui=<span class="literal">true</span> \</div><div class="line">  --allow-privileged=<span class="literal">true</span> \</div><div class="line">  --apiserver-count=3 \</div><div class="line">  --audit-log-maxage=30 \</div><div class="line">  --audit-log-maxbackup=3 \</div><div class="line">  --audit-log-maxsize=100 \</div><div class="line">  --audit-log-path=/var/lib/audit.log \</div><div class="line">  --event-ttl=1h \</div><div class="line">  --v=2</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line">Type=notify</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li><code>--bind-address=192.168.1.195</code>为当前部署的 master 机器 IP，但不能为 <code>127.0.0.1</code>  </li>
<li><code>--insecure-bind-address=192.168.1.195</code>为当前部署的 master 机器 IP  </li>
<li><code>--service-cluster-ip-range</code> 指定 Service Cluster IP 地址段，该地址段不能路由可达  </li>
<li><code>--service-node-port-range=&quot;8400-9000&quot;</code> 指定 NodePort 的端口范围  </li>
<li><code>--etcd-servers=&quot;https://192.168.1.195:2379,https://192.168.1.195:2379,https://192.168.1.195:2379&quot;</code>为etcd 集群服务地址列表  </li>
<li>kube-apiserver 1.6 版本开始使用 etcd v3 API 和存储格式  </li>
<li><code>--authorization-mode=RBAC</code> 指定在安全端口使用 RBAC 授权模式，拒绝未通过授权的请求  </li>
<li>kube-scheduler、kube-controller-manager 一般和 kube-apiserver 部署在同一台机器上，它们使用非安全端口和 kube-apiserver通信  </li>
<li>kube-proxy、kubectl 通过在使用的证书里指定相关的 User、Group 来达到通过 RBAC 授权的目的  </li>
<li>如果使用了 kubelet TLS Boostrap 机制，则不能再指定<code>--kubelet-certificate-authority</code>，<code>--kubelet-client-certificate</code>和<code>--kubelet-client-key</code>选项，否则后续 kube-apiserver 校验 kubelet 证书时出现 ”x509: certificate signed by unknown authority“ 错误  </li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cp -a kube-apiserver.service /etc/systemd/system/</span></div></pre></td></tr></table></figure>
<p>启动kube-apiserver<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># systemctl daemon-reload</span></div><div class="line">[root@master1 ~]<span class="comment"># systemctl enable kube-apiserver</span></div><div class="line">[root@master1 ~]<span class="comment"># systemctl start kube-apiserver</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># netstat -tunlp |grep kube-apiserve</span></div><div class="line">tcp        0      0 192.168.1.195:6443      0.0.0.0:*               LISTEN      19206/kube-apiserve </div><div class="line">tcp        0      0 192.168.1.195:8080      0.0.0.0:*               LISTEN      19206/kube-apiserve </div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#不能有任何报错</span></div><div class="line">[root@master1 ~]<span class="comment"># systemctl status kube-apiserver</span></div><div class="line">● kube-apiserver.service - Kubernetes API Server</div><div class="line">   Loaded: loaded (/etc/systemd/system/kube-apiserver.service; enabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since Mon 2018-01-29 10:53:14 CST; 15min ago</div><div class="line">     Docs: https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line"> Main PID: 19206 (kube-apiserver)</div><div class="line">   CGroup: /system.slice/kube-apiserver.service</div><div class="line">           └─19206 /usr/<span class="built_in">local</span>/bin/kube-apiserver --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota --advertise-address=...</div><div class="line"></div><div class="line">Jan 29 11:08:14 master1.example.com kube-apiserver[19206]: I0129 11:08:14.947346   19206 wrap.go:42] PUT /apis/apiregistration.k8s.io/v1beta1/apiservices/v1beta...95:42960]</div><div class="line">Jan 29 11:08:14 master1.example.com kube-apiserver[19206]: I0129 11:08:14.947470   19206 wrap.go:42] PUT /apis/apiregistration.k8s.io/v1beta1/apiservices/v1beta...95:42960]</div><div class="line">Jan 29 11:08:14 master1.example.com kube-apiserver[19206]: I0129 11:08:14.948643   19206 wrap.go:42] PUT /apis/apiregistration.k8s.io/v1beta1/apiservices/v1beta...95:42960]</div><div class="line">Jan 29 11:08:14 master1.example.com kube-apiserver[19206]: I0129 11:08:14.997905   19206 wrap.go:42] GET /api/v1/services: (1.191044ms) 200 [[kube-apiserver/v1....95:42960]</div><div class="line">Jan 29 11:08:15 master1.example.com kube-apiserver[19206]: I0129 11:08:15.003220   19206 wrap.go:42] GET /api/v1/services: (1.016741ms) 200 [[kube-apiserver/v1....95:42960]</div><div class="line">Jan 29 11:08:15 master1.example.com kube-apiserver[19206]: I0129 11:08:15.054109   19206 wrap.go:42] GET /api/v1/namespaces/kube-system: (1.388292ms) 200 [[kube...95:42960]</div><div class="line">Jan 29 11:08:15 master1.example.com kube-apiserver[19206]: I0129 11:08:15.055377   19206 wrap.go:42] GET /api/v1/namespaces/kube-public: (1.053295ms) 200 [[kube...95:42960]</div><div class="line">Jan 29 11:08:15 master1.example.com kube-apiserver[19206]: I0129 11:08:15.405477   19206 wrap.go:42] GET /api/v1/namespaces/default: (1.48537ms) 200 [[kube-apis...95:42960]</div><div class="line">Jan 29 11:08:15 master1.example.com kube-apiserver[19206]: I0129 11:08:15.407091   19206 wrap.go:42] GET /api/v1/namespaces/default/services/kubernetes: (1.0559...95:42960]</div><div class="line">Jan 29 11:08:15 master1.example.com kube-apiserver[19206]: I0129 11:08:15.408295   19206 wrap.go:42] GET /api/v1/namespaces/default/endpoints/kubernetes: (971.4….195:42960</div><div class="line">]Hint: Some lines were ellipsized, use <span class="_">-l</span> to show <span class="keyword">in</span> full.</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h5 id="配置和启动-kube-controller-manager"><a href="#配置和启动-kube-controller-manager" class="headerlink" title="配置和启动 kube-controller-manager"></a>配置和启动 kube-controller-manager</h5><p>创建 kube-controller-manager 的 systemd unit 文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cat kube-controller-manager.service</span></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes Controller Manager</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line"></div><div class="line">[Service]</div><div class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-controller-manager \</div><div class="line">  --address=127.0.0.1 \</div><div class="line">  --master=http://192.168.1.195:8080 \</div><div class="line">  --allocate-node-cidrs=<span class="literal">true</span> \</div><div class="line">  --service-cluster-ip-range=172.16.0.0/16 \</div><div class="line">  --cluster-cidr=172.30.0.0/16 \</div><div class="line">  --cluster-name=kubernetes \</div><div class="line">  --cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem \</div><div class="line">  --cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem \</div><div class="line">  --service-account-private-key-file=/etc/kubernetes/ssl/ca-key.pem \</div><div class="line">  --root-ca-file=/etc/kubernetes/ssl/ca.pem \</div><div class="line">  --leader-elect=<span class="literal">true</span> \</div><div class="line">  --v=2</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li><code>--address</code>值必须为 127.0.0.1，因为当前 kube-apiserver 期望 scheduler 和 controller-manager 在同一台机器</li>
<li><code>--master=http://192.168.1.195:8080</code>：使用非安全 8080 端口与 kube-apiserver 通信</li>
<li><code>--cluster-cidr</code> 指定 Cluster 中 Pod 的 CIDR 范围，该网段在各 Node 间必须路由可达(flanneld保证)</li>
<li><code>--service-cluster-ip-range</code> 参数指定 Cluster 中 Service 的CIDR范围，该网络在各 Node 间必须路由不可达，必须和 kube-apiserver 中的参数一致</li>
<li><code>--cluster-signing-*</code> 指定的证书和私钥文件用来签名为 TLS BootStrap 创建的证书和私钥</li>
<li><code>--root-ca-file</code> 用来对 kube-apiserver 证书进行校验，指定该参数后，才会在Pod 容器的 ServiceAccount 中放置该 CA 证书文件</li>
<li><code>--leader-elect=true</code> 部署多台机器组成的 master 集群时选举产生一处于工作状态的 kube-controller-manager 进程</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cp kube-controller-manager.service /etc/systemd/system/</span></div></pre></td></tr></table></figure>
<p>启动 kube-controller-manager<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># systemctl daemon-reload</span></div><div class="line">[root@master1 ~]<span class="comment"># systemctl enable kube-controller-manager</span></div><div class="line">[root@master1 ~]<span class="comment"># systemctl start kube-controller-manager</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># netstat -tunlp | grep -i kube-controll</span></div><div class="line">tcp        0      0 127.0.0.1:10252         0.0.0.0:*               LISTEN      19300/kube-controll </div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># systemctl status kube-controller-manager</span></div><div class="line">● kube-controller-manager.service - Kubernetes Controller Manager</div><div class="line">   Loaded: loaded (/etc/systemd/system/kube-controller-manager.service; enabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since Thu 2018-02-01 14:57:01 CST; 41s ago</div><div class="line">     Docs: https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line"> Main PID: 7798 (kube-controller)</div><div class="line">   CGroup: /system.slice/kube-controller-manager.service</div><div class="line">           └─7798 /usr/<span class="built_in">local</span>/bin/kube-controller-manager --address=127.0.0.1 --master=http://192.168.1.195:8080 --allocate-node-cidrs=<span class="literal">true</span> --service-cluster-ip-range=172...</div><div class="line"></div><div class="line">Jan 29 11:10:14 master1.example.com kube-controller-manager[7798]: I0201 14:57:12.832889    7798 controller_utils.go:1019] Waiting <span class="keyword">for</span> caches to sync <span class="keyword">for</span> cidrall...ntroller</div><div class="line">Jan 29 11:10:14 master1.example.com kube-controller-manager[7798]: I0201 14:57:12.832920    7798 taint_controller.go:181] Starting NoExecuteTaintManager</div><div class="line">Jan 29 11:10:15 master1.example.com kube-controller-manager[7798]: I0201 14:57:12.932953    7798 controller_utils.go:1026] Caches are synced <span class="keyword">for</span> cidrallocator controller</div><div class="line">Jan 29 11:10:15 master1.example.com kube-controller-manager[7798]: I0201 14:57:13.549661    7798 resource_quota_controller.go:434] syncing resource quota control... &#123;apps v</div><div class="line">Jan 29 11:10:15 master1.example.com kube-controller-manager[7798]: I0201 14:57:13.549766    7798 controller_utils.go:1019] Waiting <span class="keyword">for</span> caches to sync <span class="keyword">for</span> resourc...ntroller</div><div class="line">Jan 29 11:10:15 master1.example.com kube-controller-manager[7798]: I0201 14:57:13.649852    7798 controller_utils.go:1026] Caches are synced <span class="keyword">for</span> resource quota controller</div><div class="line">Jan 29 11:10:15 master1.example.com kube-controller-manager[7798]: I0201 14:57:13.696714    7798 garbagecollector.go:182] syncing garbage collector with updated ...onregist</div><div class="line">Jan 29 11:10:15 master1.example.com kube-controller-manager[7798]: I0201 14:57:15.046578    7798 controller_utils.go:1019] Waiting <span class="keyword">for</span> caches to sync <span class="keyword">for</span> garbage...ntroller</div><div class="line">Jan 29 11:10:15 master1.example.com kube-controller-manager[7798]: I0201 14:57:15.146718    7798 controller_utils.go:1026] Caches are synced <span class="keyword">for</span> garbage collecto...ntroller</div><div class="line">Jan 29 11:10:15 master1.example.com kube-controller-manager[7798]: I0201 14:57:15.146731    7798 garbagecollector.go:219] synced garbage collector</div><div class="line">Hint: Some lines were ellipsized, use <span class="_">-l</span> to show <span class="keyword">in</span> full.</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h5 id="配置和启动-kube-scheduler"><a href="#配置和启动-kube-scheduler" class="headerlink" title="配置和启动 kube-scheduler"></a>配置和启动 kube-scheduler</h5><p>创建 kube-scheduler 的 systemd unit 文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cat kube-scheduler.service </span></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes Scheduler</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line"></div><div class="line">[Service]</div><div class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-scheduler \</div><div class="line">  --address=127.0.0.1 \</div><div class="line">  --master=http://192.168.1.195:8080 \</div><div class="line">  --leader-elect=<span class="literal">true</span> \</div><div class="line">  --v=2</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li><code>--address</code> 值必须为 127.0.0.1，因为当前 kube-apiserver 期望 scheduler 和 controller-manager 在同一台机器</li>
<li><code>--master=http:/192.168.1.195:8080</code>：使用非安全 8080 端口与 kube-apiserver 通信</li>
<li><code>--leader-elect=true</code>部署多台机器组成的 master 集群时选举产生一处于工作状态的 kube-controller-manager 进程</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cp -a kube-scheduler.service /etc/systemd/system/</span></div></pre></td></tr></table></figure>
<p>启动 kube-scheduler<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># systemctl daemon-reload</span></div><div class="line">[root@master1 ~]<span class="comment"># systemctl enable kube-scheduler</span></div><div class="line">[root@master1 ~]<span class="comment"># systemctl start kube-scheduler</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># systemctl status kube-scheduler</span></div><div class="line">● kube-scheduler.service - Kubernetes Scheduler</div><div class="line">   Loaded: loaded (/etc/systemd/system/kube-scheduler.service; enabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since Mon 2018-01-29 11:27:07 CST; 2min 34s ago</div><div class="line">     Docs: https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line"> Main PID: 19360 (kube-scheduler)</div><div class="line">   CGroup: /system.slice/kube-scheduler.service</div><div class="line">           └─19360 /usr/<span class="built_in">local</span>/bin/kube-scheduler --address=127.0.0.1 --master=http://192.168.1.195:8080 --leader-elect=<span class="literal">true</span> --v=2</div><div class="line"></div><div class="line">Jan 29 11:27:07 master1.example.com systemd[1]: Starting Kubernetes Scheduler...</div><div class="line">Jan 29 11:27:07 master1.example.com kube-scheduler[19360]: W0129 11:27:07.324795   19360 server.go:159] WARNING: all flags than --config are deprecated. Please ...ile ASAP.</div><div class="line">Jan 29 11:27:07 master1.example.com kube-scheduler[19360]: I0129 11:27:07.325298   19360 server.go:551] Version: v1.9.2</div><div class="line">Jan 29 11:27:07 master1.example.com kube-scheduler[19360]: I0129 11:27:07.325412   19360 factory.go:837] Creating scheduler from algorithm provider <span class="string">'DefaultProvider'</span></div><div class="line">Jan 29 11:27:07 master1.example.com kube-scheduler[19360]: I0129 11:27:07.325419   19360 factory.go:898] Creating scheduler with fit predicates <span class="string">'map[CheckNodeDi...&#123;&#125; NoDisk</span></div><div class="line">Jan 29 11:27:07 master1.example.com kube-scheduler[19360]: I0129 11:27:07.325564   19360 server.go:570] starting healthz server on 127.0.0.1:10251</div><div class="line">Jan 29 11:27:08 master1.example.com kube-scheduler[19360]: I0129 11:27:08.126353   19360 controller_utils.go:1019] Waiting for caches to sync for scheduler controller</div><div class="line">Jan 29 11:27:08 master1.example.com kube-scheduler[19360]: I0129 11:27:08.226450   19360 controller_utils.go:1026] Caches are synced for scheduler controller</div><div class="line">Jan 29 11:27:08 master1.example.com kube-scheduler[19360]: I0129 11:27:08.226468   19360 leaderelection.go:174] attempting to acquire leader lease...</div><div class="line">Jan 29 11:27:08 master1.example.com kube-scheduler[19360]: I0129 11:27:08.232415   19360 leaderelection.go:184] successfully acquired lease kube-system/kube-scheduler</div><div class="line">Hint: Some lines were ellipsized, use -l to show in full.</div><div class="line">[root@master1 ~]#</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># netstat -tunlp | grep -i kube-schedule</span></div><div class="line">tcp        0      0 127.0.0.1:10251         0.0.0.0:*               LISTEN      19360/kube-schedule </div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="部署-kubectl-client节点"><a href="#部署-kubectl-client节点" class="headerlink" title="部署 kubectl client节点"></a>部署 kubectl client节点</h4><p>kubernetes发布版 tarball(下载脚本) 下载地址：<a href="https://github.com/kubernetes/kubernetes/releases" target="_blank" rel="external">https://github.com/kubernetes/kubernetes/releases</a><br>kubernetes CHANGELOG(server/client) 下载地址：<a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG.md" target="_blank" rel="external">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG.md</a><br><a href="https://pan.baidu.com/s/1sngFMlZ" target="_blank" rel="external">百度网盘packages目录，密码：nwzk</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># wget https://dl.k8s.io/v1.9.2/kubernetes-client-linux-amd64.tar.gz -O kubernetes-client-linux-amd64-v1.9.2.tar.gz</span></div><div class="line">[root@master1 ~]<span class="comment"># tar -zxf kubernetes-client-linux-amd64-v1.9.2.tar.gz</span></div><div class="line">[root@master1 ~]<span class="comment"># cp -a kubernetes/client/bin/kube* /usr/local/bin/</span></div></pre></td></tr></table></figure></p>
<h5 id="创建-admin-证书"><a href="#创建-admin-证书" class="headerlink" title="创建 admin 证书"></a>创建 admin 证书</h5><p>kubectl 与 kube-apiserver 的安全端口通信，需要为安全通信提供 TLS 证书和秘钥  </p>
<p>创建 admin 证书签名请求<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cat admin-csr.json</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"CN"</span>: <span class="string">"admin"</span>,</div><div class="line">  <span class="string">"hosts"</span>: [],</div><div class="line">  <span class="string">"key"</span>: &#123;</div><div class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</div><div class="line">    <span class="string">"size"</span>: 2048</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"names"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</div><div class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"O"</span>: <span class="string">"system:masters"</span>,</div><div class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li><code>kube-apiserver</code> 使用 <code>RBAC</code> 对客户端(如 <code>kubelet</code>、<code>kube-proxy</code>、<code>Pod</code>)请求进行授权  </li>
<li><code>kube-apiserver</code> 预定义了一些 <code>RBAC</code> 使用的 <code>RoleBindings</code>，如 <code>cluster-admin</code> 将 Group <code>system:masters</code> 与 Role <code>cluster-admin</code> 绑定，该 Role 授予了调用<code>kube-apiserver</code> <strong>所有 API</strong>的权限  </li>
<li>O 指定该证书的 Group 为 <code>system:masters</code>，<code>kubelet</code> 使用该证书访问 <code>kube-apiserver</code> 时 ，由于证书被 CA 签名，所以认证通过，同时由于证书用户组为经过预授权的 <code>system:masters</code>，所以被授予访问所有 API 的权限  </li>
<li>hosts 属性值为空列表  </li>
</ul>
<p>生成admin证书和私钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem -ca-key=/etc/kubernetes/ssl/ca-key.pem -config=/etc/kubernetes/ssl/ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin</span></div><div class="line">[root@master1 ssl]<span class="comment"># ls admin*</span></div><div class="line">admin.csr  admin-csr.json  admin-key.pem  admin.pem</div><div class="line">[root@master1 ssl]<span class="comment"># mv admin*.pem /etc/kubernetes/ssl/</span></div></pre></td></tr></table></figure></p>
<p>创建 kubectl kubeconfig 文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 设置集群参数</span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl config set-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=true --server=https://192.168.1.195:6443</span></div><div class="line"><span class="comment"># 设置客户端认证参数</span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl config set-credentials admin --client-certificate=/etc/kubernetes/ssl/admin.pem --embed-certs=true --client-key=/etc/kubernetes/ssl/admin-key.pem</span></div><div class="line"><span class="comment"># 设置上下文参数</span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl config set-context kubernetes --cluster=kubernetes --user=admin</span></div><div class="line"><span class="comment"># 设置默认上下文</span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl config use-context kubernetes</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># ls ~/.kube/</span></div><div class="line">config</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<ul>
<li>设置集群参数和客户端认证参数时 <code>--embed-certs</code> 都为 <code>true</code>，这会将 <code>certificate-authority</code>、<code>client-certificate</code> 和 <code>client-key</code> 指向的证书文件内容写入到生成的 <code>kube-proxy.kubeconfig</code> 文件中  </li>
<li><code>kube-proxy.pem</code> 证书中 CN 为 <code>system:kube-proxy</code>，<code>kube-apiserver</code> 预定义的 RoleBinding <code>cluster-admin</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code> 绑定，该 Role 授予了调用 <code>kube-apiserver</code> Proxy 相关 API 的权限  </li>
<li><code>admin.pem</code> 证书 O 字段值为 <code>system:masters</code>，<code>kube-apiserver</code> 预定义的 RoleBinding <code>cluster-admin</code> 将 Group <code>system:masters</code> 与 Role <code>cluster-admin</code> 绑定，该 Role 授予了调用<code>kube-apiserver</code> 相关 API 的权限  </li>
<li>生成的 kubeconfig 被保存到 <code>~/.kube/config</code> 文件  </li>
</ul>
<p>分发 kubeconfig 文件<br>将 <code>~/.kube/config</code> 文件拷贝到运行 kubelet 命令的机器的 <code>~/.kube/</code> 目录下</p>
<p>其他服务器部署kubectl-client工具<br>先在需要解压安装kubernetes-client-linux-amd64-v1.9.2.tar.gz<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># ssh root@192.168.1.196 "mkdir -p /etc/kubernetes/ssl/"</span></div><div class="line">[root@master1 ~]<span class="comment"># scp /etc/kubernetes/ssl/admin* root@192.168.1.196:/etc/kubernetes/ssl/</span></div><div class="line">[root@master1 ~]<span class="comment"># ssh root@192.168.1.196 "mkdir -p ~/.kube/"</span></div><div class="line">[root@master1 ~]<span class="comment"># scp ~/.kube/config root@192.168.1.196:~/.kube/</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@master2 ~]<span class="comment"># kubectl get componentstatuses</span></div><div class="line">NAME                 STATUS    MESSAGE              ERROR</div><div class="line">controller-manager   Healthy   ok                   </div><div class="line">scheduler            Healthy   ok                   </div><div class="line">etcd-0               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">etcd-1               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">etcd-2               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">[root@master2 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>如果遇到下面的错误，需要检查kubectl是否可以与api-server通讯<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># kubectl get componentstatuses</span></div><div class="line">The connection to the server localhost:8080 was refused - did you specify the right host or port?</div></pre></td></tr></table></figure></p>
<h6 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h6><p>查看k8s 查看各组件信息<br>需要先安装kubectl命令(kubernetes-client)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get componentstatuses</span></div><div class="line">NAME                 STATUS    MESSAGE              ERROR</div><div class="line">controller-manager   Healthy   ok                   </div><div class="line">scheduler            Healthy   ok                   </div><div class="line">etcd-0               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">etcd-1               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">etcd-2               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>或<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl -s http://192.168.1.195:8080 get componentstatuses</span></div><div class="line">NAME                 STATUS    MESSAGE              ERROR</div><div class="line">scheduler            Healthy   ok                   </div><div class="line">controller-manager   Healthy   ok                   </div><div class="line">etcd-2               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">etcd-1               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">etcd-0               Healthy   &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;   </div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>查看k8s svc地址(服务虚拟IP)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get svc kubernetes</span></div><div class="line">NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</div><div class="line">kubernetes   ClusterIP   172.16.0.1   &lt;none&gt;        443/TCP   1d</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>或<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get service</span></div><div class="line">NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</div><div class="line">kubernetes   ClusterIP   172.16.0.1   &lt;none&gt;        443/TCP   1d</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>查看集群信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl cluster-info</span></div><div class="line">Kubernetes master is running at https://192.168.1.195:6443</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<h4 id="部署-K8S-Node-节点"><a href="#部署-K8S-Node-节点" class="headerlink" title="部署 K8S Node 节点"></a>部署 K8S Node 节点</h4><p>kubernetes Node 节点包含如下组件：  </p>
<ul>
<li>flanneld</li>
<li>docker</li>
<li>kubelet</li>
<li>kube-proxy</li>
</ul>
<h5 id="安装和配置-kubelet"><a href="#安装和配置-kubelet" class="headerlink" title="安装和配置 kubelet"></a>安装和配置 kubelet</h5><p>kubelet 启动时向 <code>kube-apiserver</code> 发送 <code>TLS bootstrapping</code> 请求，需要先将 <code>bootstrap token</code> 文件中的 <code>kubelet-bootstrap</code> 用户赋予 <code>system:node-bootstrapper</code> 角色，然后 kubelet 才有权限创建认证请求(certificatesigningrequests)  </p>
<p><strong>kubelet 和kube-proxy 在node1/node2上部署</strong><br><a href="https://pan.baidu.com/s/1sngFMlZ" target="_blank" rel="external">百度网盘packages目录，密码：nwzk</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># wget https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz -O kubernetes-server-linux-amd64-v1.9.2.tar.gz</span></div><div class="line">[root@node1 ~]<span class="comment"># tar -zxf kubernetes-server-linux-amd64-v1.9.2.tar.gz</span></div><div class="line">[root@node1 ~]<span class="comment"># cp -a kubernetes/server/bin/&#123;kube-proxy,kubelet&#125; /usr/local/bin/</span></div></pre></td></tr></table></figure></p>
<p>把在安装有cfssl 工具的服务器(这里是在master1)上生成的admin相关证书和key拷贝到node1上<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># ssh root@192.168.1.198 "mkdir -p /etc/kubernetes/ssl/"</span></div><div class="line">[root@master1 ~]<span class="comment"># scp /etc/kubernetes/ssl/admin* root@192.168.1.198:/etc/kubernetes/ssl/</span></div><div class="line">[root@master1 ~]<span class="comment"># ssh root@192.168.1.198 "mkdir -p ~/.kube/"</span></div><div class="line">[root@master1 ~]<span class="comment"># scp ~/.kube/config root@192.168.1.198:~/.kube/</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#如果kubectl命令没有，需要安装kubernetes-client-linux-amd64-v1.9.2.tar.gz</span></div><div class="line"><span class="comment">#如果有多个节点，这条命令只执行一次</span></div><div class="line">[root@node1 ~]<span class="comment"># kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --user=kubelet-bootstrap</span></div></pre></td></tr></table></figure>
<ul>
<li><code>--user=kubelet-bootstrap</code> 是master服务器文件 <code>/etc/kubernetes/token.csv</code> 中指定的用户名，同时也写入了文件 <code>/etc/kubernetes/bootstrap.kubeconfig</code> </li>
</ul>
<p>如果报下面错误，需要先安装kubectl工具，参考上面操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@node2 ~]<span class="comment"># kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --user=kubelet-bootstrap</span></div><div class="line">The connection to the server localhost:8080 was refused - did you specify the right host or port?</div><div class="line">[root@node2 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>创建 kubelet bootstrapping kubeconfig 文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 设置集群参数</span></div><div class="line">[root@node1 ~]<span class="comment"># kubectl config set-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=true --server=https://192.168.1.195:6443 --kubeconfig=bootstrap.kubeconfig</span></div><div class="line"><span class="comment"># 设置客户端认证参数</span></div><div class="line">[root@node1 ~]<span class="comment"># kubectl config set-credentials kubelet-bootstrap --token=6240b18d950d086ff9eb596e215d243f --kubeconfig=bootstrap.kubeconfig</span></div><div class="line"><span class="comment"># 设置上下文参数</span></div><div class="line">[root@node1 ~]<span class="comment"># kubectl config set-context default --cluster=kubernetes --user=kubelet-bootstrap --kubeconfig=bootstrap.kubeconfig</span></div><div class="line"><span class="comment"># 设置默认上下文</span></div><div class="line">[root@node1 ~]<span class="comment"># kubectl config use-context default --kubeconfig=bootstrap.kubeconfig</span></div><div class="line">[root@node1 ~]<span class="comment"># ls bootstrap.kubeconfig </span></div><div class="line">bootstrap.kubeconfig</div><div class="line">[root@node1 ~]<span class="comment"># mv bootstrap.kubeconfig /etc/kubernetes/</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># mkdir -p /var/lib/kubelet</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># cat kubelet.service </span></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes Kubelet</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line">After=docker.service</div><div class="line">Requires=docker.service</div><div class="line"></div><div class="line">[Service]</div><div class="line">WorkingDirectory=/var/lib/kubelet</div><div class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kubelet \</div><div class="line">  --address=192.168.1.198 \</div><div class="line">  --hostname-override=192.168.1.198 \</div><div class="line">  --pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest \</div><div class="line">  --experimental-bootstrap-kubeconfig=/etc/kubernetes/bootstrap.kubeconfig \</div><div class="line">  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \</div><div class="line">  --require-kubeconfig \</div><div class="line">  --cert-dir=/etc/kubernetes/ssl \</div><div class="line">  --cluster-dns=172.16.0.2 \</div><div class="line">  --cluster-domain=cluster.local. \</div><div class="line">  --hairpin-mode promiscuous-bridge \</div><div class="line">  --allow-privileged=<span class="literal">true</span> \</div><div class="line">  --serialize-image-pulls=<span class="literal">false</span> \</div><div class="line">  --logtostderr=<span class="literal">true</span> \</div><div class="line">  --v=2</div><div class="line"><span class="comment">#kubelet cAdvisor 默认在所有接口监听 4194 端口的请求, 以下iptables限制内网访问</span></div><div class="line">ExecStartPost=/sbin/iptables -A INPUT <span class="_">-s</span> 172.30.0.0/16 -p tcp --dport 4194 -j ACCEPT</div><div class="line">ExecStartPost=/sbin/iptables -A INPUT <span class="_">-s</span> 172.16.0.0/16 -p tcp --dport 4194 -j ACCEPT</div><div class="line">ExecStartPost=/sbin/iptables -A INPUT <span class="_">-s</span> 192.168.0.0/16 -p tcp --dport 4194 -j ACCEPT</div><div class="line">ExecStartPost=/sbin/iptables -A INPUT -p tcp --dport 4194 -j DROP</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">[root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<ul>
<li><code>--address</code> 不能设置为 <code>127.0.0.1</code>，否则后续 Pods 访问 kubelet 的 API 接口时会失败，因为 Pods 访问的 127.0.0.1 指向自己而不是 kubelet。<code>--address</code>设置为当前部署的节点 IP  </li>
<li>如果设置了 <code>--hostname-override</code> 选项，则 kube-proxy 也需要设置该选项，否则会出现找不到 Node 的情况。<code>--hostname-override</code>设置为当前部署的节点 IP  </li>
<li><code>--cluster-dns</code>设置为集群 DNS 服务 IP (从 SERVICE_CIDR 中预分配)，此环境中使用的 SERVICE_CIDR为172.16.0.0/16，可在master的kube-apiserver配置文件中看到  </li>
<li><code>--cluster-domain</code>设置为集群 DNS 域名  </li>
<li><code>--experimental-bootstrap-kubeconfig</code> 指向 bootstrap kubeconfig 文件，kubelet 使用该文件中的用户名和 token 向 kube-apiserver 发送 TLS Bootstrapping 请求  </li>
<li>管理员通过了 CSR 请求后，kubelet 自动在 <code>--cert-dir</code> 目录创建证书和私钥文件(<code>kubelet-client.crt</code> 和 <code>kubelet-client.key</code>)，然后写入 <code>--kubeconfig</code> 文件(自动创建 <code>--kubeconfig</code> 指定的文件)  </li>
<li>建议在 <code>--kubeconfig</code> 配置文件中指定 <code>kube-apiserver</code> 地址，如果未指定 <code>--api-servers</code> 选项，则必须指定 <code>--require-kubeconfig</code> 选项后才从配置文件中读取 kue-apiserver 的地址，否则 kubelet 启动后将找不到 kube-apiserver (日志中提示未找到 API Server），<code>kubectl get nodes</code> 不会返回对应的 Node 信息  </li>
<li><code>--cluster-dns</code> 指定 kubedns 的 Service IP(可以先分配，后续创建 kubedns 服务时指定该 IP)，<code>--cluster-domain</code> 指定域名后缀，这两个参数同时指定后才会生效  </li>
<li>kubelet cAdvisor 默认在<strong>所有接口</strong>监听 4194 端口的请求，对于有外网的机器来说不安全，<code>ExecStartPost</code> 选项指定的 iptables 规则只允许内网机器访问 4194 端口  </li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># mv kubelet.service /etc/systemd/system/kubelet.service</span></div></pre></td></tr></table></figure>
<p>启动 kubelet<br>v1.8版后，需要手动绑定 system:nodes组到 system:node的clusterrole<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#kubelet-node-clusterbinding为名称，可自定义。如果有多个节点加入，名称不能相同</span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl create clusterrolebinding kubelet-node-clusterbinding --clusterrole=system:node --user=system:node:192.168.1.198</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#启动kubelet需要关闭swap分区  </span></div><div class="line">[root@node1 ~]<span class="comment"># swapoff -a</span></div><div class="line">[root@node1 ~]<span class="comment"># systemctl daemon-reload</span></div><div class="line">[root@node1 ~]<span class="comment"># systemctl enable kubelet</span></div><div class="line">[root@node1 ~]<span class="comment"># systemctl start kubelet</span></div></pre></td></tr></table></figure>
<p>需要关闭swap分区，否则会报下面的错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Feb  1 16:56:59 k8s-4 kubelet: error: failed to run Kubelet: Running with swap on is not supported, please <span class="built_in">disable</span> swap! or <span class="built_in">set</span> --fail-swap-on flag to false. /proc/swaps contained: [Filename<span class="comment">#011#011#011#011Type#011#011Size#011Used#011Priority /dev/dm-1 partition#0112097148#01116#011-1]</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># systemctl status kubelet</span></div><div class="line">● kubelet.service - Kubernetes Kubelet</div><div class="line">   Loaded: loaded (/etc/systemd/system/kubelet.service; enabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since Thu 2018-02-01 16:41:49 CST; 7min ago</div><div class="line">     Docs: https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line">  Process: 30456 ExecStartPost=/sbin/iptables -A INPUT -p tcp --dport 4194 -j DROP (code=exited, status=0/SUCCESS)</div><div class="line">  Process: 30452 ExecStartPost=/sbin/iptables -A INPUT <span class="_">-s</span> 192.168.0.0/16 -p tcp --dport 4194 -j ACCEPT (code=exited, status=0/SUCCESS)</div><div class="line">  Process: 30451 ExecStartPost=/sbin/iptables -A INPUT <span class="_">-s</span> 172.16.0.0/16 -p tcp --dport 4194 -j ACCEPT (code=exited, status=0/SUCCESS)</div><div class="line">  Process: 30446 ExecStartPost=/sbin/iptables -A INPUT <span class="_">-s</span> 172.30.0.0/16 -p tcp --dport 4194 -j ACCEPT (code=exited, status=0/SUCCESS)</div><div class="line"> Main PID: 30445 (kubelet)</div><div class="line">   Memory: 11.7M</div><div class="line">   CGroup: /system.slice/kubelet.service</div><div class="line">           └─30445 /usr/<span class="built_in">local</span>/bin/kubelet --address=192.168.1.198 --hostname-override=192.168.1.198 --pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infr...</div><div class="line"></div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: I0201 16:41:49.807803   30445 controller.go:114] kubelet config controller: starting controller</div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: I0201 16:41:49.807806   30445 controller.go:118] kubelet config controller: validating combination of defaults and flags</div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: I0201 16:41:49.812805   30445 mount_linux.go:202] Detected OS with systemd</div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: W0201 16:41:49.812875   30445 cni.go:171] Unable to update cni config: No networks found <span class="keyword">in</span> /etc/cni/net.d</div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: I0201 16:41:49.815926   30445 server.go:182] Version: v1.9.2</div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: I0201 16:41:49.815950   30445 feature_gate.go:220] feature gates: &amp;&#123;&#123;&#125; map[]&#125;</div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: W0201 16:41:49.816011   30445 server.go:280] --require-kubeconfig is deprecated. Set --kubeconfig without usi...ubeconfig.</div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: I0201 16:41:49.816019   30445 plugins.go:101] No cloud provider specified.</div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: I0201 16:41:49.816025   30445 server.go:303] No cloud provider specified: <span class="string">""</span> from the config file: <span class="string">""</span></div><div class="line">Feb 01 16:41:49 node1.example.com kubelet[30445]: I0201 16:41:49.816036   30445 bootstrap.go:58] Using bootstrap kubeconfig to generate TLS client cert, key an...onfig file</div><div class="line">Hint: Some lines were ellipsized, use <span class="_">-l</span> to show <span class="keyword">in</span> full.</div><div class="line">[root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h6 id="Q-amp-A-master日志报RBAC-DENY-user-“kubelet-bootstrap”-groups错误"><a href="#Q-amp-A-master日志报RBAC-DENY-user-“kubelet-bootstrap”-groups错误" class="headerlink" title="Q&amp;A master日志报RBAC DENY: user “kubelet-bootstrap” groups错误"></a>Q&amp;A master日志报RBAC DENY: user “kubelet-bootstrap” groups错误</h6><p>启动kubelet服务后，需要看master的kube-apiserver日志(/var/log/messages)中没有如下报错，才算启动成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Feb  1 03:41:53 master1 kube-apiserver: I0201 16:41:53.245112    8202 rbac.go:116] RBAC DENY: user <span class="string">"kubelet-bootstrap"</span> groups [<span class="string">"system:kubelet-bootstrap"</span> <span class="string">"system:authentica</span></div><div class="line">ted"] cannot <span class="string">"create"</span> resource <span class="string">"certificatesigningrequests.certificates.k8s.io/nodeclient"</span> cluster-wide</div></pre></td></tr></table></figure></p>
<p>如果在启动node时，master的/var/log/messages日志报上面的错误，原因如下：<br>1.8版本之前，开启<code>rbac</code>后，apiserver默认绑定<code>system:nodes</code>组到<code>system:node</code>的clusterrole。但v1.8之后，此绑定默认不存在，<strong>需要手工绑定</strong>，否则kubelet启动后会报认证错误，使用kubectl get nodes查看无法成为Ready状态。  </p>
<p>默认角色与默认角色绑定<br>API Server会创建一组默认的ClusterRole和<code>ClusterRoleBinding</code>对象。这些默认对象中有许多包含<code>system:前缀</code>，表明这些资源由Kubernetes基础组件“拥有”。 对这些资源的修改可能导致非功能性集群(<code>non-functional cluster</code>)<br>这个角色定义了kubelets的权限。如果这个角色被修改，可能会导致kubelets无法正常工作。<br>所有默认的<code>ClusterRole</code>和<code>ClusterRoleBinding</code>对象都会被标记为<code>kubernetes.io/bootstrapping=rbac-defaults</code>  </p>
<p><code>kubectl get clusterrolebinding</code>和<code>kubectl get clusterrole</code>可以查看系统中的角色与角色绑定<br><code>kubectl get clusterrolebindings system:node -o yaml</code>或<code>kubectl describe clusterrolebindings system:node</code>查看<code>system:node</code>角色绑定的详细信息  </p>
<p>查看 system:node 角色绑定的详细信息<br>system:node角色默认绑定为空<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl describe clusterrolebindings system:node</span></div><div class="line">Name:         system:node</div><div class="line">Labels:       kubernetes.io/bootstrapping=rbac-defaults</div><div class="line">Annotations:  rbac.authorization.kubernetes.io/autoupdate=<span class="literal">true</span></div><div class="line">Role:</div><div class="line">  Kind:  ClusterRole</div><div class="line">  Name:  system:node</div><div class="line">Subjects:</div><div class="line">  Kind  Name  Namespace</div><div class="line">  ----  ----  ---------</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>在整个集群范围内将 system:node ClusterRole 授予用户<code>system:node:192.168.1.198</code>或组<code>system:nodes</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl describe clusterrolebindings kubelet-node-clusterbinding  </span></div><div class="line">Name:         kubelet-node-clusterbinding</div><div class="line">Labels:       &lt;none&gt;</div><div class="line">Annotations:  &lt;none&gt;</div><div class="line">Role:</div><div class="line">  Kind:  ClusterRole</div><div class="line">  Name:  system:node</div><div class="line">Subjects:</div><div class="line">  Kind  Name                       Namespace</div><div class="line">  ----  ----                       ---------</div><div class="line">  User  system:node:192.168.1.198  </div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<h5 id="通过-kubelet-的-TLS-证书请求"><a href="#通过-kubelet-的-TLS-证书请求" class="headerlink" title="通过 kubelet 的 TLS 证书请求"></a>通过 kubelet 的 TLS 证书请求</h5><p>kubelet 首次启动时向 kube-apiserver 发送证书签名请求，必须通过后 kubernetes 系统才会将该 Node 加入到集群  </p>
<p>查看未授权的 CSR 请求:<br>下面如果没有获取到也代表kubelet没有启动成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get csr</span></div><div class="line">NAME                                                   AGE       REQUESTOR           CONDITION</div><div class="line">node-csr-DeFIxWS7IZimyAUaZGtIh8q4sp_CiNHL2bO1cwEm26U   9m        kubelet-bootstrap   Pending</div><div class="line">[root@master1 ~]<span class="comment"># </span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl get nodes</span></div><div class="line">No resources found.</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>通过 CSR 请求:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl certificate approve node-csr-DeFIxWS7IZimyAUaZGtIh8q4sp_CiNHL2bO1cwEm26U</span></div><div class="line">certificatesigningrequest <span class="string">"node-csr-DeFIxWS7IZimyAUaZGtIh8q4sp_CiNHL2bO1cwEm26U"</span> approved</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get csr</span></div><div class="line">NAME                                                   AGE       REQUESTOR           CONDITION</div><div class="line">node-csr-DeFIxWS7IZimyAUaZGtIh8q4sp_CiNHL2bO1cwEm26U   13m       kubelet-bootstrap   Approved,Issued</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>自动生成了 kubelet kubeconfig 文件和公私钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># ls -l /etc/kubernetes/kubelet.kubeconfig</span></div><div class="line">-rw------- 1 root root 2280 Jan 31 19:19 /etc/kubernetes/kubelet.kubeconfig</div><div class="line">[root@node1 ~]<span class="comment"># ls -l /etc/kubernetes/ssl/kubelet*</span></div><div class="line">-rw-r--r-- 1 root root 1046 Jan 31 19:19 /etc/kubernetes/ssl/kubelet-client.crt</div><div class="line">-rw------- 1 root root  227 Jan 31 19:18 /etc/kubernetes/ssl/kubelet-client.key</div><div class="line">-rw-r--r-- 1 root root 1115 Jan 31 19:15 /etc/kubernetes/ssl/kubelet.crt</div><div class="line">-rw------- 1 root root 1675 Jan 31 19:15 /etc/kubernetes/ssl/kubelet.key</div><div class="line">[root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>如果节点状态变为Ready才算成功，查看日志都已经正常<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get nodes</span></div><div class="line">NAME            STATUS    ROLES     AGE       VERSION</div><div class="line">192.168.1.198   Ready     &lt;none&gt;    25m       v1.9.2</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>参考：<a href="http://blog.csdn.net/zhaihaifei/article/details/79098564" target="_blank" rel="external">http://blog.csdn.net/zhaihaifei/article/details/79098564</a>  </p>
<h6 id="多个Node节点加入"><a href="#多个Node节点加入" class="headerlink" title="多个Node节点加入"></a>多个Node节点加入</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl describe clusterrolebindings kubelet-node199-clusterbinding  </span></div><div class="line">Name:         kubelet-node199-clusterbinding</div><div class="line">Labels:       &lt;none&gt;</div><div class="line">Annotations:  &lt;none&gt;</div><div class="line">Role:</div><div class="line">  Kind:  ClusterRole</div><div class="line">  Name:  system:node</div><div class="line">Subjects:</div><div class="line">  Kind  Name                       Namespace</div><div class="line">  ----  ----                       ---------</div><div class="line">  User  system:node:192.168.1.199  </div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get nodes</span></div><div class="line">NAME            STATUS    ROLES     AGE       VERSION</div><div class="line">192.168.1.198   Ready     &lt;none&gt;    3h        v1.9.2</div><div class="line">192.168.1.199   Ready     &lt;none&gt;    2m        v1.9.2</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h5 id="配置-kube-proxy"><a href="#配置-kube-proxy" class="headerlink" title="配置 kube-proxy"></a>配置 kube-proxy</h5><p>创建 kube-proxy 证书<br>创建 kube-proxy 证书签名请求<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cat kube-proxy-csr.json </span></div><div class="line">&#123;</div><div class="line">  <span class="string">"CN"</span>: <span class="string">"system:kube-proxy"</span>,</div><div class="line">  <span class="string">"hosts"</span>: [],</div><div class="line">  <span class="string">"key"</span>: &#123;</div><div class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</div><div class="line">    <span class="string">"size"</span>: 2048</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"names"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</div><div class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</div><div class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</div><div class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li>CN 指定该证书的 User 为 <code>system:kube-proxy</code>；</li>
<li>kube-apiserver 预定义的 RoleBinding <code>system:node-proxier</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code> 绑定，该 Role 授予了调用 <code>kube-apiserver</code> Proxy 相关 API 的权限；</li>
<li>hosts 属性值为空列表</li>
</ul>
<p>生成 kube-proxy 客户端证书和私钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem -ca-key=/etc/kubernetes/ssl/ca-key.pem -config=/etc/kubernetes/ssl/ca-config.json -profile=kubernetes  kube-proxy-csr.json | cfssljson -bare kube-proxy</span></div><div class="line">[root@master1 ssl]<span class="comment"># ls kube-proxy*</span></div><div class="line">kube-proxy.csr  kube-proxy-csr.json  kube-proxy-key.pem  kube-proxy.pem</div><div class="line">[root@master1 ssl]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>把在安装有cfssl 工具的服务器(这里是在master1)上生成的kube-proxy 相关证书和key拷贝到node1上<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master1 ssl]<span class="comment"># scp kube-proxy*.pem root@192.168.1.198:/etc/kubernetes/ssl/</span></div></pre></td></tr></table></figure></p>
<p>创建 kube-proxy kubeconfig 文件<br>创建 kube-proxy kubeconfig 文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 设置集群参数</span></div><div class="line">[root@node1 ~]<span class="comment"># kubectl config set-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=true --server=https://192.168.1.195:6443 --kubeconfig=kube-proxy.kubeconfig</span></div><div class="line"><span class="comment"># 设置客户端认证参数</span></div><div class="line">[root@node1 ~]<span class="comment"># kubectl config set-credentials kube-proxy --client-certificate=/etc/kubernetes/ssl/kube-proxy.pem --client-key=/etc/kubernetes/ssl/kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig</span></div><div class="line"><span class="comment">#设置上下文参数</span></div><div class="line">[root@node1 ~]<span class="comment"># kubectl config set-context default --cluster=kubernetes --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig</span></div><div class="line"><span class="comment">#设置默认上下文</span></div><div class="line">[root@node1 ~]<span class="comment"># kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># mv kube-proxy.kubeconfig /etc/kubernetes/</span></div></pre></td></tr></table></figure>
<ul>
<li>设置集群参数和客户端认证参数时 <code>--embed-certs</code> 都为 <code>true</code>，这会将 <code>certificate-authority</code>、<code>client-certificate</code> 和 <code>client-key</code> 指向的证书文件内容写入到生成的 <code>kube-proxy.kubeconfig</code> 文件中</li>
<li><code>kube-proxy.pem</code> 证书中 CN 为 <code>system:kube-proxy</code>，<code>kube-apiserver</code> 预定义的 RoleBinding <code>cluster-admin</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code> 绑定，该 Role 授予了调用 <code>kube-apiserver Proxy</code> 相关 API 的权限</li>
</ul>
<p>创建 kube-proxy 的 systemd unit 文件<br>创建工作目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># mkdir -p /var/lib/kube-proxy</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># cat kube-proxy.service </span></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes Kube-Proxy Server</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line">After=network.target</div><div class="line"></div><div class="line">[Service]</div><div class="line">WorkingDirectory=/var/lib/kube-proxy</div><div class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-proxy \</div><div class="line">  --bind-address=192.168.1.198 \</div><div class="line">  --hostname-override=192.168.1.198 \</div><div class="line">  --cluster-cidr=172.30.0.0/16 \</div><div class="line">  --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig \</div><div class="line">  --logtostderr=<span class="literal">true</span> \</div><div class="line">  --v=2</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">[root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<ul>
<li><code>--hostname-override</code> 参数值<strong>必须</strong>与 kubelet 的值一致，否则 kube-proxy 启动后会找不到该 Node，从而不会创建任何 iptables 规则  </li>
<li><code>--cluster-cidr</code> <strong>必须</strong>与 kube-controller-manager 的 <code>--cluster-cidr</code> 选项值一致，172.30.0.0/16  </li>
<li>kube-proxy 根据 <code>--cluster-cidr</code> 判断集群内部和外部流量，指定 <code>--cluster-cidr</code> 或 <code>--masquerade-all</code> 选项后 kube-proxy 才会对访问 Service IP 的请求做 SNAT  </li>
<li><code>--kubeconfig</code> 指定的配置文件嵌入了 kube-apiserver 的地址、用户名、证书、秘钥等请求和认证信息  </li>
<li>预定义的 RoleBinding <code>cluster-admin</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code> 绑定，该 Role 授予了调用 <code>kube-apiserver</code> Proxy 相关 API 的权限</li>
</ul>
<p>启动 kube-proxy<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># cp kube-proxy.service /etc/systemd/system/</span></div><div class="line">[root@node1 ~]<span class="comment"># systemctl daemon-reload</span></div><div class="line">[root@node1 ~]<span class="comment"># systemctl enable kube-proxy</span></div><div class="line">[root@node1 ~]<span class="comment"># systemctl start kube-proxy</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># systemctl status kube-proxy</span></div><div class="line">● kube-proxy.service - Kubernetes Kube-Proxy Server</div><div class="line">   Loaded: loaded (/etc/systemd/system/kube-proxy.service; enabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since Fri 2018-02-02 14:24:10 CST; 15s ago</div><div class="line">     Docs: https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line"> Main PID: 3660 (kube-proxy)</div><div class="line">   Memory: 8.7M</div><div class="line">   CGroup: /system.slice/kube-proxy.service</div><div class="line">           ‣ 3660 /usr/<span class="built_in">local</span>/bin/kube-proxy --bind-address=192.168.1.198 --hostname-override=192.168.1.198 --cluster-cidr=172.30.0.0/16 --kubeconfig=/etc/kubernetes/kube...</div><div class="line"></div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.223982    3660 conntrack.go:98] Set sysctl <span class="string">'net/netfilter/nf_conntrack_tcp_timeout_established'</span> to 86400</div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.224981    3660 conntrack.go:98] Set sysctl <span class="string">'net/netfilter/nf_conntrack_tcp_timeout_close_wait'</span> to 3600</div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.225415    3660 config.go:202] Starting service config controller</div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.225427    3660 controller_utils.go:1019] Waiting <span class="keyword">for</span> caches to sync <span class="keyword">for</span> service config controller</div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.225514    3660 config.go:102] Starting endpoints config controller</div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.225523    3660 controller_utils.go:1019] Waiting <span class="keyword">for</span> caches to sync <span class="keyword">for</span> endpoints config controller</div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.325575    3660 controller_utils.go:1026] Caches are synced <span class="keyword">for</span> service config controller</div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.325624    3660 proxier.go:984] Not syncing iptables until Services and Endpoints have been re...om master</div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.326087    3660 controller_utils.go:1026] Caches are synced <span class="keyword">for</span> endpoints config controller</div><div class="line">Feb 02 14:24:10 node1.example.com kube-proxy[3660]: I0202 14:24:10.326163    3660 proxier.go:329] Adding new service port <span class="string">"default/kubernetes:https"</span> at 172.16.0.1:443/TCP</div><div class="line">Hint: Some lines were ellipsized, use <span class="_">-l</span> to show <span class="keyword">in</span> full.</div><div class="line">[root@node1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h5 id="验证集群功能"><a href="#验证集群功能" class="headerlink" title="验证集群功能"></a>验证集群功能</h5><p>定义文件:<br><a href="https://note.youdao.com/yws/api/personal/file/DBEF82CCEFC040ACAE8F919C9E381633?method=download&amp;shareKey=8f85df5224bf4e4a7480fd6dd60fd5d6" target="_blank" rel="external">nginx-ds.yml</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># cat nginx-ds.yml </span></div><div class="line">apiVersion: v1</div><div class="line">kind: Service</div><div class="line">metadata:</div><div class="line">  name: nginx-ds</div><div class="line">  labels:</div><div class="line">    app: nginx-ds</div><div class="line">spec:</div><div class="line">  <span class="built_in">type</span>: NodePort</div><div class="line">  selector:</div><div class="line">    app: nginx-ds</div><div class="line">  ports:</div><div class="line">  - name: http</div><div class="line">    port: 80</div><div class="line">    targetPort: 80</div><div class="line"></div><div class="line">---</div><div class="line"></div><div class="line">apiVersion: extensions/v1beta1</div><div class="line">kind: DaemonSet</div><div class="line">metadata:</div><div class="line">  name: nginx-ds</div><div class="line">  labels:</div><div class="line">    addonmanager.kubernetes.io/mode: Reconcile</div><div class="line">spec:</div><div class="line">  template:</div><div class="line">    metadata:</div><div class="line">      labels:</div><div class="line">        app: nginx-ds</div><div class="line">    spec:</div><div class="line">      containers:</div><div class="line">      - name: my-nginx</div><div class="line">        image: nginx:1.7.9</div><div class="line">        ports:</div><div class="line">        - containerPort: 80</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl create -f nginx-ds.yml</span></div></pre></td></tr></table></figure>
<p>检查各 Node 上的 Pod IP 连通性<br>当前k8s上有两个Node，在nginx-ds.yml中使用的是<code>DaemonSet</code>模式，所以会在每个Node上启动这个Pod<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#DaemonSet官方解释</span></div><div class="line">A DaemonSet ensures that all (or some) Nodes run a copy of a Pod. As nodes are added to the cluster, Pods are added to them. As nodes are removed from the cluster, those Pods are garbage collected. Deleting a DaemonSet will clean up the Pods it created.</div></pre></td></tr></table></figure></p>
<p>参考：<a href="https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/#what-is-a-daemonset" target="_blank" rel="external">https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/#what-is-a-daemonset</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#两个nginx容器的IP地址不同</span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl get pods  -o wide</span></div><div class="line">NAME             READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">nginx-ds-9p9pl   1/1       Running   0          4s        172.30.57.2   192.168.1.198</div><div class="line">nginx-ds-tvp6b   1/1       Running   0          4s        172.30.41.2   192.168.1.199</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>检查服务 IP 和端口可达性<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get svc |grep nginx-ds</span></div><div class="line">nginx-ds     NodePort    172.16.117.40   &lt;none&gt;        80:8446/TCP   5m</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li>服务IP：172.16.117.40</li>
<li>服务端口：80</li>
<li>NodePort端口：8446</li>
</ul>
<p>在所有 Node 上执行，IP为nginx-ds的CLUSTER-IP(执行<code>kubectl get svc |grep nginx-ds</code>命令获取)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]<span class="comment"># curl 172.16.117.40</span></div></pre></td></tr></table></figure></p>
<p>检查服务的 NodePort 可达性<br>在外部机器的浏览器访问 <a href="http://192.168.1.198:8446/" target="_blank" rel="external">http://192.168.1.198:8446/</a><br><img src="https://note.youdao.com/yws/api/personal/file/58CE3B07349943BCAF3AD33C2186D3E0?method=download&amp;shareKey=2d79cfcc3db594d9e8beac43af44de55" alt="k8s_nginx"><br>预期输出 nginx 欢迎页面内容</p>
<h4 id="部署-kubedns-插件"><a href="#部署-kubedns-插件" class="headerlink" title="部署 kubedns 插件"></a>部署 kubedns 插件</h4><p>官方文件目录：kubernetes/cluster/addons/dns<br><a href="https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pods-dns-config" target="_blank" rel="external">https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pods-dns-config</a>  </p>
<h5 id="系统预定义的-RoleBinding"><a href="#系统预定义的-RoleBinding" class="headerlink" title="系统预定义的 RoleBinding"></a>系统预定义的 RoleBinding</h5><p>预定义的 RoleBinding <code>system:kube-dns</code> 将 kube-system 命名空间的 <code>kube-dns</code> ServiceAccount 与 <code>system:kube-dns</code> Role 绑定， 该 Role 具有访问 kube-apiserver DNS 相关 API 的权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get clusterrolebindings system:kube-dns -o yaml</span></div><div class="line">apiVersion: rbac.authorization.k8s.io/v1</div><div class="line">kind: ClusterRoleBinding</div><div class="line">metadata:</div><div class="line">  annotations:</div><div class="line">    rbac.authorization.kubernetes.io/autoupdate: <span class="string">"true"</span></div><div class="line">  creationTimestamp: 2018-01-31T11:03:07Z</div><div class="line">  labels:</div><div class="line">    kubernetes.io/bootstrapping: rbac-defaults</div><div class="line">  name: system:kube-dns</div><div class="line">  resourceVersion: <span class="string">"86"</span></div><div class="line">  selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Akube-dns</div><div class="line">  uid: 51871810-0676-11e8-8cb0-1e2d0a5bc3f5</div><div class="line">roleRef:</div><div class="line">  apiGroup: rbac.authorization.k8s.io</div><div class="line">  kind: ClusterRole</div><div class="line">  name: system:kube-dns</div><div class="line">subjects:</div><div class="line">- kind: ServiceAccount</div><div class="line">  name: kube-dns</div><div class="line">  namespace: kube-system</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p><code>kubedns-controller.yaml</code> 中定义的 Pods 时使用了 <code>kubedns-sa.yaml</code> 文件定义的 <code>kube-dns</code> ServiceAccount，所以具有访问 kube-apiserver DNS 相关 API 的权限  </p>
<h5 id="配置-kube-dns-服务"><a href="#配置-kube-dns-服务" class="headerlink" title="配置 kube-dns 服务"></a>配置 kube-dns 服务</h5><p><a href="https://note.youdao.com/yws/api/personal/file/71B930661BD94F2495278744F67152ED?method=download&amp;shareKey=9545d5ea1a76180ceb41f96c8ad20e88" target="_blank" rel="external">busybox.yaml</a><br><a href="https://note.youdao.com/yws/api/personal/file/12BDDDB36A4E4C40BFBFCF45CA3136F5?method=download&amp;shareKey=e3dfda08a42733a5c60b05e86ece7e75" target="_blank" rel="external">kube-dns.yaml</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@master1 dns]<span class="comment"># pwd</span></div><div class="line">/root/dns</div><div class="line">[root@master1 dns]<span class="comment"># ls</span></div><div class="line">busybox.yaml  kube-dns.yaml</div><div class="line">[root@master1 dns]<span class="comment"># egrep -i 'clusterIP|image|domain|server=/cluster' kube-dns.yaml </span></div><div class="line">  clusterIP: 172.16.0.2</div><div class="line">        image: registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-kube-dns-amd64:1.14.7</div><div class="line">        - --domain=cluster.local.</div><div class="line">        image: registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.7</div><div class="line">        - --server=/cluster.local/127.0.0.1<span class="comment">#10053</span></div><div class="line">        image: registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-sidecar-amd64:1.14.7</div><div class="line">[root@master1 dns]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<ul>
<li>需要将 <code>clusterIP</code> 设置为集群环境变量中变量 <code>CLUSTER_DNS_SVC_IP</code> 值，这个 IP 需要和 kubelet 的 <code>—cluster-dns</code> 参数值一致；</li>
</ul>
<p>配置 kube-dns Deployment  </p>
<ul>
<li><code>--domain</code> 为集群环境文档 变量 CLUSTER_DNS_DOMAIN 的值  </li>
<li>使用系统已经做了 RoleBinding 的 <code>kube-dns</code> ServiceAccount，该账户具有访问 kube-apiserver DNS 相关 API 的权限</li>
</ul>
<p>创建DNS<br><code>kubectl create -f kube-dns.yaml</code>创建dns，<code>kubectl delete -f kube-dns.yaml</code>删除dns<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl create -f dns/busybox.yaml</span></div><div class="line"></div><div class="line">[root@master1 ~]<span class="comment"># kubectl get pods -o wide</span></div><div class="line">NAME                               READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">busybox                            1/1       Running   0          19s       172.30.57.2   192.168.1.198</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl create -f dns/kube-dns.yaml</span></div><div class="line">[root@master1 ~]<span class="comment"># </span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl get pods -o wide -n kube-system</span></div><div class="line">NAME                                    READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">kube-dns-9d8b5fb76-vz6ll                3/3       Running   0          1h        172.30.41.5   192.168.1.199</div><div class="line">[root@master1 ~]<span class="comment"># </span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl get svc -o wide -n kube-system</span></div><div class="line">NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE       SELECTOR</div><div class="line">kube-dns               ClusterIP   172.16.0.2       &lt;none&gt;        53/UDP,53/TCP   1h        k8s-app=kube-dns</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>如果报错了，可以通过这条命令查看报错日志<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl describe pod kube-dns-9d8b5fb76-vz6ll --namespace=kube-system</span></div></pre></td></tr></table></figure></p>
<h5 id="创建nginx-服务测试dns"><a href="#创建nginx-服务测试dns" class="headerlink" title="创建nginx 服务测试dns"></a>创建nginx 服务测试dns</h5><p><a href="https://note.youdao.com/yws/api/personal/file/8782A994D7724D0988B354247623586A?method=download&amp;shareKey=54f9b7b40dd83181ad97d0f87a541c48" target="_blank" rel="external">nginx-deployment.yaml</a><br><a href="https://note.youdao.com/yws/api/personal/file/D71364D682964ECCB6B291105F5004DE?method=download&amp;shareKey=12e6ed9da3fe5b732853490da4267c32" target="_blank" rel="external">nginx-service.yaml</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl create -f nginx-deployment.yaml</span></div><div class="line">[root@master1 ~]<span class="comment"># kubectl create -f nginx-service.yaml</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get pods -o wide</span></div><div class="line">NAME                               READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">nginx-deployment<span class="_">-d</span>8d99448f-rb57v   1/1       Running   0          11m       172.30.41.2   192.168.1.199</div><div class="line">[root@master1 ~]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@master1 ~]<span class="comment"># kubectl get svc -o wide</span></div><div class="line">NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)       AGE       SELECTOR</div><div class="line">kubernetes      ClusterIP   172.16.0.1       &lt;none&gt;        443/TCP       7d        &lt;none&gt;</div><div class="line">nginx-service   NodePort    172.16.215.237   &lt;none&gt;        88:8527/TCP   2d        app=nginx</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl exec busybox -it nslookup nginx-service</span></div><div class="line">Server:    172.16.0.2</div><div class="line">Address 1: 172.16.0.2 kube-dns.kube-system.svc.cluster.local</div><div class="line"></div><div class="line">Name:      nginx-service</div><div class="line">Address 1: 172.16.215.237 nginx-service.default.svc.cluster.local</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="部署-heapster-插件"><a href="#部署-heapster-插件" class="headerlink" title="部署 heapster 插件"></a>部署 heapster 插件</h4><p>heapster release下载页面：<a href="https://github.com/kubernetes/heapster/releases" target="_blank" rel="external">https://github.com/kubernetes/heapster/releases</a><br><a href="https://note.youdao.com/yws/api/personal/file/1D279E2FC1834C328D2A32586B1BA43E?method=download&amp;shareKey=7466236d2b9cb7747d6657d0b2da0392" target="_blank" rel="external">heapster-v1.5.0.tar.gz</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># wget https://codeload.github.com/kubernetes/heapster/tar.gz/v1.5.0 -O heapster-v1.5.0.tar.gz</span></div><div class="line">[root@master1 ~]<span class="comment"># tar -zxf heapster-v1.5.0.tar.gz</span></div><div class="line">[root@master1 ~]<span class="comment"># cd heapster-1.5.0/deploy/kube-config/influxdb</span></div><div class="line">[root@master1 influxdb]<span class="comment"># ls</span></div><div class="line">grafana.yaml  heapster.yaml  influxdb.yaml</div><div class="line">[root@master1 influxdb]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<h5 id="配置rbac"><a href="#配置rbac" class="headerlink" title="配置rbac"></a>配置rbac</h5><p><a href="https://note.youdao.com/yws/api/personal/file/CD179F4A7D4B47CA9F0FF2A55F033F6D?method=download&amp;shareKey=d80b32bb27faf201ba5ede4282aff019" target="_blank" rel="external">heapster-rbac.yaml</a><br>无需修改配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 influxdb]<span class="comment"># pwd</span></div><div class="line">/root/heapster-1.5.0/deploy/kube-config/influxdb</div><div class="line">[root@master1 influxdb]<span class="comment"># kubectl create -f ../rbac/heapster-rbac.yaml</span></div></pre></td></tr></table></figure></p>
<h5 id="配置-influxdb-deployment"><a href="#配置-influxdb-deployment" class="headerlink" title="配置 influxdb-deployment"></a>配置 influxdb-deployment</h5><p><a href="https://note.youdao.com/yws/api/personal/file/BD2A861AB9B54032889A0C3D1E983190?method=download&amp;shareKey=516e9d2b54547090128c4c6d5aa220b5" target="_blank" rel="external">influxdb.yaml</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 influxdb]<span class="comment"># egrep -i 'image|nodeport' influxdb.yaml </span></div><div class="line">        image: lvanneo/heapster-influxdb-amd64:v1.1.1        <span class="comment">#修改image镜像</span></div><div class="line">  <span class="built_in">type</span>: NodePort</div><div class="line">[root@master1 influxdb]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 influxdb]<span class="comment"># pwd</span></div><div class="line">/root/heapster-1.5.0/deploy/kube-config/influxdb</div><div class="line">[root@master1 influxdb]<span class="comment"># kubectl create -f influxdb.yaml</span></div></pre></td></tr></table></figure>
<p>查看influxdb数据库集群地址和端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 influxdb]<span class="comment"># kubectl get svc -o wide -n kube-system</span></div><div class="line">NAME                  TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)         AGE       SELECTOR</div><div class="line">monitoring-influxdb   NodePort    172.16.38.42   &lt;none&gt;        8086:8898/TCP   14s       k8s-app=influxdb</div><div class="line">[root@master1 influxdb]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<h5 id="配置-heapster-deployment"><a href="#配置-heapster-deployment" class="headerlink" title="配置 heapster-deployment"></a>配置 heapster-deployment</h5><p><a href="https://note.youdao.com/yws/api/personal/file/92E6D9F454164EA1A1EAB607CF87B17D?method=download&amp;shareKey=02e9edb636da9a1807d040d9fcb5e01a" target="_blank" rel="external">heapster.yaml</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 influxdb]<span class="comment"># egrep -i 'image:|source|sink' heapster.yaml </span></div><div class="line">        image: lvanneo/heapster-amd64:v1.3.0-beta.1            <span class="comment">#修改image镜像</span></div><div class="line">        - --source=kubernetes:https://192.168.1.195:6443      <span class="comment">#指定kube-apiserver认证地址</span></div><div class="line">        - --sink=influxdb:http://172.16.38.42:8086       <span class="comment">#指定influxdb数据库CLUSTER-IP地址</span></div><div class="line">[root@master1 influxdb]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 influxdb]<span class="comment"># pwd</span></div><div class="line">/root/heapster-1.5.0/deploy/kube-config/influxdb</div><div class="line">[root@master1 influxdb]<span class="comment"># kubectl create -f heapster.yaml</span></div></pre></td></tr></table></figure>
<p>查看heapster集群地址和端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">    [root@master1 influxdb]<span class="comment"># kubectl get svc -o wide -n kube-system</span></div><div class="line">NAME                  TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE       SELECTOR</div><div class="line">heapster              ClusterIP   172.16.202.225   &lt;none&gt;        80/TCP          12s       k8s-app=heapster</div><div class="line">[root@master1 influxdb]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<h5 id="配置-grafana-deployment"><a href="#配置-grafana-deployment" class="headerlink" title="配置 grafana-deployment"></a>配置 grafana-deployment</h5><p><a href="https://note.youdao.com/yws/api/personal/file/F2F784AEBF0145E2964FC3C412F6AB73?method=download&amp;shareKey=b94e4b769899c636ae4761f33b97afde" target="_blank" rel="external">grafana.yaml</a><br>修改如下配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@master1 influxdb]<span class="comment"># egrep -i 'image|value: /|type: nodeport' grafana.yaml </span></div><div class="line">        image: lvanneo/heapster-grafana-amd64:v4.0.2           <span class="comment">#修改image镜像</span></div><div class="line">          <span class="comment"># value: /api/v1/namespaces/kube-system/services/monitoring-grafana/proxy    #默认</span></div><div class="line">          value: /         <span class="comment">#默认</span></div><div class="line">  <span class="built_in">type</span>: NodePort           <span class="comment">#去掉注释</span></div><div class="line">[root@master1 influxdb]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 influxdb]<span class="comment"># pwd</span></div><div class="line">/root/heapster-1.5.0/deploy/kube-config/influxdb</div><div class="line">[root@master1 influxdb]<span class="comment"># kubectl create -f grafana.yaml</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 influxdb]<span class="comment"># kubectl get svc -o wide -n kube-system</span></div><div class="line">NAME                  TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE       SELECTOR</div><div class="line">monitoring-grafana     NodePort    172.16.207.209   &lt;none&gt;        80:8642/TCP     31m       k8s-app=grafana</div></pre></td></tr></table></figure>
<p>检查 Deployment<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get deployments -n kube-system | grep -E 'heapster|monitoring'</span></div><div class="line">heapster              1         1         1            1           25m</div><div class="line">monitoring-grafana    1         1         1            1           53s</div><div class="line">monitoring-influxdb   1         1         1            1           28m</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>检查 Pods<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get pods -n kube-system -o wide </span></div><div class="line">NAME                                    READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">heapster-5<span class="built_in">fc</span>8f648dc-pn4lm               1/1       Running   0          1h        172.30.57.4   192.168.1.198</div><div class="line">monitoring-grafana-57b8fcd7b4-67r2j     1/1       Running   0          28m       172.30.57.5   192.168.1.198</div><div class="line">monitoring-influxdb-68d87d45f5-5d7qs    1/1       Running   0          1h        172.30.41.3   192.168.1.199</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>需要逐一检查下各docker的logs有没有报错信息  </p>
<h6 id="访问grafana"><a href="#访问grafana" class="headerlink" title="访问grafana"></a>访问grafana</h6><p>访问 <a href="http://192.168.1.198:8642/" target="_blank" rel="external">http://192.168.1.198:8642/</a><br>配置influxdb-datasource<br><img src="https://note.youdao.com/yws/api/personal/file/A4614D24871C427489359C1827DC7548?method=download&amp;shareKey=abbb42575786c75c1b28c88c32d985b7" alt="grafana"><br><img src="https://note.youdao.com/yws/api/personal/file/91D96DCEF1D849729511049E94482122?method=download&amp;shareKey=55ebe8b0392e107d9344d58f3bd7ede1" alt="grafana"><br><img src="https://note.youdao.com/yws/api/personal/file/66317BF04C6A4C8281095808373DD48E?method=download&amp;shareKey=82c36a103ee293f3bdc6c03c3b997674" alt="grafana"><br><img src="https://note.youdao.com/yws/api/personal/file/534929F4400246E7ACA46CEB42D4540D?method=download&amp;shareKey=0a8aa8882c217c30dabb72e8f9050480" alt="grafana"><br><img src="https://note.youdao.com/yws/api/personal/file/E765DF64401B40A7BA3ACC9EF4BFFB98?method=download&amp;shareKey=9e289a2a510957a395f3abb799f2601f" alt="grafana">  </p>
<h4 id="部署-dashboard-插件"><a href="#部署-dashboard-插件" class="headerlink" title="部署 dashboard 插件"></a>部署 dashboard 插件</h4><p><a href="https://note.youdao.com/yws/api/personal/file/00CADD6A9D9E44A0BF3E1FAB5F48B5B8?method=download&amp;shareKey=fb7c3e93380ddead9bf6a51367b9f47d" target="_blank" rel="external">kubernetes-dashboard.yaml</a><br>通过rbac 认证<code>kind: ServiceAccount</code>调用认证文件(<code>/etc/kubernetes/bootstrap.kubeconfig</code>和<code>/etc/kubernetes/kube-proxy.kubeconfig</code>)，访问的接口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># egrep -i 'image|apiserver|heapster-host|nodeport' kubernetes-dashboard.yaml </span></div><div class="line">        image: k8scn/kubernetes-dashboard-amd64:v1.8.0</div><div class="line">          - --apiserver-host=http://192.168.1.195:8080</div><div class="line">          - --heapster-host=http://172.16.202.225</div><div class="line">  <span class="built_in">type</span>: NodePort</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl create -f kubernetes-dashboard.yaml</span></div></pre></td></tr></table></figure>
<p>查看kubernetes-dashboard分配的Node<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get pod -o wide -n kube-system</span></div><div class="line">NAME                                    READY     STATUS    RESTARTS   AGE       IP            NODE</div><div class="line">kubernetes-dashboard-666fbbf977-v9vsh   1/1       Running   0          49s       172.30.41.4   192.168.1.199</div></pre></td></tr></table></figure></p>
<p>查看kubernetes-dashboard分配的 NodePort<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get svc -o wide -n kube-system</span></div><div class="line">NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE       SELECTOR</div><div class="line">kubernetes-dashboard   NodePort    172.16.59.24     &lt;none&gt;        443:8847/TCP    39m       k8s-app=kubernetes-dashboard</div></pre></td></tr></table></figure></p>
<ul>
<li>NodePort 8847映射到 dashboard pod 80端口  </li>
</ul>
<p>检查 controller<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl get deployment kubernetes-dashboard  -n kube-system</span></div><div class="line">NAME                   DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</div><div class="line">kubernetes-dashboard   1         1         1            1           15m</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>获取集群服务地址列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@master1 ~]<span class="comment"># kubectl cluster-info</span></div><div class="line">Kubernetes master is running at https://192.168.1.195:6443</div><div class="line">Heapster is running at https://192.168.1.195:6443/api/v1/namespaces/kube-system/services/heapster/proxy</div><div class="line">KubeDNS is running at https://192.168.1.195:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</div><div class="line">monitoring-grafana is running at https://192.168.1.195:6443/api/v1/namespaces/kube-system/services/monitoring-grafana/proxy</div><div class="line">monitoring-influxdb is running at https://192.168.1.195:6443/api/v1/namespaces/kube-system/services/monitoring-influxdb/proxy</div><div class="line"></div><div class="line">To further debug and diagnose cluster problems, use <span class="string">'kubectl cluster-info dump'</span>.</div><div class="line">[root@master1 ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<h5 id="访问dashboard"><a href="#访问dashboard" class="headerlink" title="访问dashboard"></a>访问dashboard</h5><p>kubernetes-dashboard 服务暴露了 NodePort，可以使用 <a href="http://NodeIP:nodePort" target="_blank" rel="external">http://NodeIP:nodePort</a> 地址访问 dashboard  </p>
<p>访问 <a href="https://192.168.1.199:8847" target="_blank" rel="external">https://192.168.1.199:8847</a> 访问k8s dashboard，经测试火狐浏览器可以，但360浏览器打不开，报404<br><img src="https://note.youdao.com/yws/api/personal/file/045DBC6BEB45413AAA3C638456310A02?method=download&amp;shareKey=f5da2b7cde024379197726cbd1cf86a5" alt="k8s-dashboard"><br><img src="https://note.youdao.com/yws/api/personal/file/C62DEA5E39544B70A3DE0F3C4286EAB6?method=download&amp;shareKey=0d549ebb275806b21dcfe84bfec751c2" alt="k8s-dashboard"><br><img src="https://note.youdao.com/yws/api/personal/file/64C58F5AE8284F75BEB4A3DACC7C9A8A?method=download&amp;shareKey=c60811cb5ac18d5a9bd86c903fdef485" alt="k8s-dashboard">  </p>
<p>如果不安装<code>Heapster/influxdb</code>等插件，k8s-dashboard不能展示<code>Pod</code>，<code>Nodes</code>的<code>CPU</code>，<code>内存</code>等 metric 图形  </p>
<h5 id="保存镜像"><a href="#保存镜像" class="headerlink" title="保存镜像"></a>保存镜像</h5><p>导出镜像<br><a href="https://pan.baidu.com/s/1sngFMlZ" target="_blank" rel="external">镜像保存在百度网盘packages目录，密码：nwzk</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">docker save k8scn/kubernetes-dashboard-amd64:v1.8.0 &gt; kubernetes-dashboard-amd64-v1.8.0.tar.gz</div><div class="line">docker save registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-sidecar-amd64:1.14.7 &gt; k8s-dns-sidecar-amd64-1.14.7.tar.gz</div><div class="line">docker save registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-kube-dns-amd64:1.14.7 &gt; k8s-dns-kube-dns-amd64-1.14.7.tar.gz</div><div class="line">docker save registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.7 &gt; k8s-dns-dnsmasq-nanny-amd64-1.14.7.tar.gz</div><div class="line">docker save lvanneo/heapster-influxdb-amd64:v1.1.1 &gt; heapster-influxdb-amd64-v1.1.1.tar.gz</div><div class="line">docker save lvanneo/heapster-grafana-amd64:v4.0.2 &gt; heapster-grafana-amd64-v4.0.2.tar.gz</div><div class="line">docker save lvanneo/heapster-amd64:v1.3.0-beta.1 &gt; heapster-amd64-v1.3.0-beta.1.tar.gz</div><div class="line">docker save k8scn/kubernetes-dashboard-amd64:v1.8.0 &gt; kubernetes-dashboard-amd64-v1.8.0.tar.gz</div></pre></td></tr></table></figure></p>
<p>导入镜像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker load -i kubernetes-dashboard-amd64-v1.8.0.tar.gz</div></pre></td></tr></table></figure></p>
<p>参考：<a href="https://github.com/opsnull/follow-me-install-kubernetes-cluster" target="_blank" rel="external">https://github.com/opsnull/follow-me-install-kubernetes-cluster</a>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/02/23/部署TLS-k8s/">http://www.yfshare.vip/2018/02/23/部署TLS-k8s/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Kubernetes是一个开源的，用于管理云平台中多个主机上的容器化的应用，Kubernetes的目标是让部署容器化的应用简单并且高效(powerful)，Kubernetes提供了应用部署，规划，更新，维护的一种机制。Kubernetes一个核心的特点就是能够自主的管理容器来保证云平台中的容器按照用户的期望状态运行。&lt;br&gt;
    
    </summary>
    
      <category term="K8S" scheme="http://www.yfshare.vip/categories/K8S/"/>
    
    
      <category term="k8s" scheme="http://www.yfshare.vip/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://www.yfshare.vip/tags/kubernetes/"/>
    
      <category term="TLS" scheme="http://www.yfshare.vip/tags/TLS/"/>
    
  </entry>
  
  <entry>
    <title>自建docker私有仓库(Vmware Harbor)</title>
    <link href="http://www.yfshare.vip/2018/01/11/%E8%87%AA%E5%BB%BAdocker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93-Vmware-Harbor/"/>
    <id>http://www.yfshare.vip/2018/01/11/自建docker私有仓库-Vmware-Harbor/</id>
    <published>2018-01-11T12:08:25.000Z</published>
    <updated>2018-01-11T12:18:56.336Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源Docker Distribution。作为一个企业级私有Registry服务器，Harbor提供了更好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。Harbor支持安装在多个Registry节点的镜像资源复制，镜像全部保存在私有Registry中，确保数据和知识产权在公司内部网络中管控。另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。<br><a id="more"></a></p>
<ul>
<li>基于角色的访问控制 - 用户与Docker镜像仓库通过“项目”进行组织管理，一个用户可以对多个镜像仓库在同一命名空间（project）里有不同的权限。  </li>
<li>镜像复制 - 镜像可以在多个Registry实例中复制（同步）。尤其适合于负载均衡，高可用，混合云和多云的场景。  </li>
<li>图形化用户界面 - 用户可以通过浏览器来浏览，检索当前Docker镜像仓库，管理项目和命名空间。  </li>
<li>AD/LDAP 支持 - Harbor可以集成企业内部已有的AD/LDAP，用于鉴权认证管理。  </li>
<li>审计管理 - 所有针对镜像仓库的操作都可以被记录追溯，用于审计管理。  </li>
<li>国际化 - 已拥有英文、中文、德文、日文和俄文的本地化版本。更多的语言将会添加进来。  </li>
<li>RESTful API - RESTful API 提供给管理员对于Harbor更多的操控, 使得与其它管理软件集成变得更容易。  </li>
<li>部署简单 - 提供在线和离线两种安装工具， 也可以安装到vSphere平台(OVA方式)虚拟设备。  </li>
</ul>
<p>官网地址：<a href="https://vmware.github.io/harbor/cn/" target="_blank" rel="external">https://vmware.github.io/harbor/cn/</a><br>官方下载地址：<a href="https://github.com/vmware/harbor/releases" target="_blank" rel="external">https://github.com/vmware/harbor/releases</a><br><a href="https://pan.baidu.com/s/1gfeZEOb" target="_blank" rel="external">vmware harbor v1.3.0-rc4百度网盘，密码：m2mi</a><br>安装向导：<a href="https://github.com/vmware/harbor/blob/master/docs/installation_guide.md" target="_blank" rel="external">https://github.com/vmware/harbor/blob/master/docs/installation_guide.md</a><br>用户使用指南：<a href="https://github.com/vmware/harbor/blob/master/docs/user_guide.md" target="_blank" rel="external">https://github.com/vmware/harbor/blob/master/docs/user_guide.md</a><br>https配置：<a href="https://github.com/vmware/harbor/blob/master/docs/configure_https.md" target="_blank" rel="external">https://github.com/vmware/harbor/blob/master/docs/configure_https.md</a>  </p>
<h4 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h4><p>docker-compose版本需要大于<code>1.7.1+</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span></div><div class="line"><span class="comment"># chmod +x /usr/local/bin/docker-compose</span></div></pre></td></tr></table></figure></p>
<h4 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/cert</div><div class="line"><span class="built_in">cd</span> /data/cert</div><div class="line">openssl req -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt</div><div class="line">openssl req -newkey rsa:4096 -nodes -sha256 -keyout server.key -out server.csr</div><div class="line"><span class="built_in">echo</span> subjectAltName = IP:192.168.1.196 &gt; extfile.cnf</div><div class="line">openssl x509 -req -days 365 -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -extfile extfile.cnf -out server.crt</div></pre></td></tr></table></figure>
<h4 id="部署Vmware-Harbor"><a href="#部署Vmware-Harbor" class="headerlink" title="部署Vmware Harbor"></a>部署Vmware Harbor</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># tar -zxf harbor-offline-installer-v1.3.0-rc4.tgz</span></div><div class="line"><span class="comment"># cd harbor</span></div><div class="line"><span class="comment"># grep -iv '^#' harbor.cfg | grep -iv '^$'</span></div><div class="line">hostname = 192.168.1.196          <span class="comment">#如果用购买的证书需要写域名</span></div><div class="line">ui_url_protocol = https           <span class="comment">#http改成https</span></div><div class="line">db_password = root123             <span class="comment">#密码不能改，否则有些容器起不来</span></div><div class="line">max_job_workers = 3</div><div class="line">customize_crt = on</div><div class="line">ssl_cert = /data/cert/server.crt  <span class="comment">#指定证书路径</span></div><div class="line">ssl_cert_key = /data/cert/server.key   <span class="comment">#同上，下面全默认即可</span></div><div class="line">secretkey_path = /data</div><div class="line">admiral_url = NA</div><div class="line">clair_db_password = password</div><div class="line">log_rotate_count = 50</div><div class="line">log_rotate_size = 200M</div><div class="line">email_identity = </div><div class="line">email_server = smtp.mydomain.com</div><div class="line">email_server_port = 25</div><div class="line">email_username = sample_admin@mydomain.com</div><div class="line">email_password = abc</div><div class="line">email_from = admin &lt;sample_admin@mydomain.com&gt;</div><div class="line">email_ssl = <span class="literal">false</span></div><div class="line">email_insecure = <span class="literal">false</span></div><div class="line">harbor_admin_password = Harbor12345</div><div class="line">auth_mode = db_auth</div><div class="line">ldap_url = ldaps://ldap.mydomain.com</div><div class="line">ldap_basedn = ou=people,dc=mydomain,dc=com</div><div class="line">ldap_uid = uid </div><div class="line">ldap_scope = 3 </div><div class="line">ldap_timeout = 5</div><div class="line">self_registration = on</div><div class="line">token_expiration = 30</div><div class="line">project_creation_restriction = everyone</div><div class="line">db_host = mysql</div><div class="line">db_port = 3306</div><div class="line">db_user = root</div><div class="line">uaa_endpoint = uaa.mydomain.org</div><div class="line">uaa_clientid= id</div><div class="line">uaa_clientsecret= secret</div><div class="line">uaa_ca_root= /path/to/uaa_ca.pem</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<p>Docker版本大于<code>1.6.0</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># cat /etc/docker/daemon.json</span></div><div class="line">&#123; <span class="string">"insecure-registries"</span>:[<span class="string">"192.168.1.196"</span>] &#125;           <span class="comment">#如果harbor.cfg里填的是域名，这里要保持一致</span></div><div class="line"><span class="comment">#</span></div><div class="line">systemctl <span class="built_in">enable</span> docker</div><div class="line">systemctl start docker</div><div class="line">./install.sh            <span class="comment">#安装Vmware Harbor</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># docker images | grep -i vmware</span></div><div class="line">vmware/harbor-log                                                 v1.3.0-rc4          58aa9393b1<span class="built_in">cd</span>        3 weeks ago         207MB</div><div class="line">vmware/harbor-jobservice                                          v1.3.0-rc4          b3664e837ab8        3 weeks ago         197MB</div><div class="line">vmware/harbor-ui                                                  v1.3.0-rc4          5f6e4c4b41da        3 weeks ago         211MB</div><div class="line">vmware/harbor-adminserver                                         v1.3.0-rc4          a907519f7baf        3 weeks ago         174MB</div><div class="line">vmware/harbor-db                                                  v1.3.0-rc4          83b013940805        3 weeks ago         586MB</div><div class="line">vmware/photon                                                     1.0                 7b154bf6f104        3 weeks ago         130MB</div><div class="line">vmware/clair                                                      v2.0.1-photon       7a633033c5b1        5 weeks ago         365MB</div><div class="line">vmware/postgresql                                                 9.6.5-photon        a5c79b0473d9        6 weeks ago         285MB</div><div class="line">vmware/registry                                                   2.6.2-photon        c38af846a0da        6 weeks ago         240MB</div><div class="line">vmware/mariadb-photon                                             10.2.10             eaaae71dea19        6 weeks ago         586MB</div><div class="line">vmware/notary-photon                                              signer-0.5.1        064b309ad822        6 weeks ago         246MB</div><div class="line">vmware/notary-photon                                              server-0.5.1        b8cc51024379        6 weeks ago         247MB</div><div class="line">vmware/nginx-photon                                               1.11.13             2971c92cc1ae        6 weeks ago         200MB</div><div class="line">vmware/harbor-db-migrator                                         1.3                 6cac2b89f086        6 weeks ago         1.11GB</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># docker ps -a | grep -i vmware</span></div><div class="line">ea6b2d79bd4b    vmware/nginx-photon:1.11.13           <span class="string">"nginx -g 'daemon of…"</span>   About a minute ago   Up About a minute        0.0.0.0:80-&gt;80/tcp, 0.0.0.0:443-&gt;443/tcp, 0.0.0.0:4443-&gt;4443/tcp   nginx</div><div class="line">3e1e767e3095    vmware/harbor-jobservice:v1.3.0-rc4   <span class="string">"/harbor/start.sh"</span>       About a minute ago   Up About a minute (healthy)  harbor-jobserviced</div><div class="line">08ae8e864d9     vmware/harbor-ui:v1.3.0-rc4           <span class="string">"/harbor/start.sh"</span>       About a minute ago   Up About a minute (healthy)  harbor-ui</div><div class="line">e2abd8a9f45d    vmware/harbor-db:v1.3.0-rc4           <span class="string">"/usr/local/bin/dock…"</span>   About a minute ago   Up About a minute (healthy)   3306/tcp    harbor-db</div><div class="line">5337d7d2cb0a    vmware/harbor-adminserver:v1.3.0-rc4  <span class="string">"/harbor/start.sh"</span>       About a minute ago   Up About a minute (healthy)   harbor-adminserver</div><div class="line">cf85ac001f1f    vmware/registry:2.6.2-photon          <span class="string">"/entrypoint.sh serv…"</span>   About a minute ago   Up About a minute (healthy)   5000/tcp    registry</div><div class="line">d6075f9aa12c    vmware/harbor-log:v1.3.0-rc4          <span class="string">"/bin/sh -c /usr/loc…"</span>   About a minute ago   Up About a minute (healthy)   127.0.0.1:1514-&gt;10514/tcp  harbor-log</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>登陆时如果报下面错误，则需要修改<code>/etc/docker/daemon.json</code>文件<br><code>Error response from daemon: Get https://192.168.1.196/v2/: x509: certificate signed by unknown authority</code><br>参考：<a href="https://github.com/vmware/harbor/blob/master/docs/user_guide.md#pulling-and-pushing-images-using-docker-client" target="_blank" rel="external">https://github.com/vmware/harbor/blob/master/docs/user_guide.md#pulling-and-pushing-images-using-docker-client</a>  </p>
<h4 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker login 192.168.1.196</span></div><div class="line">Username: admin</div><div class="line">Password: </div><div class="line">Login Succeeded</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># docker tag nginx:latest 192.168.1.196/library/nginx:latest</span></div><div class="line"><span class="comment"># docker push 192.168.1.196/library/nginx:latest</span></div></pre></td></tr></table></figure>
<h4 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker rmi 192.168.1.196/library/nginx nginx</span></div><div class="line"><span class="comment"># docker pull 192.168.1.196/library/nginx:latest</span></div><div class="line"><span class="comment"># docker images | grep -i nginx</span></div><div class="line">192.168.1.196/library/nginx   latest              3f8a4339aadd        2 weeks ago         108MB</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><p>访问：<a href="https://192.168.1.196" target="_blank" rel="external">https://192.168.1.196</a> 打开vmware Harbor<br>默认用户名密码：<code>admin</code> / <code>Harbor12345</code><br><img src="https://note.youdao.com/yws/api/personal/file/FBB5CB4E422E45B09399E5629C336CD8?method=download&amp;shareKey=45cd553065ceb3c801443de38c483163" alt="vmware harbor"><br><img src="https://note.youdao.com/yws/api/personal/file/4620151E79EC49FA95D46FCFE61B81BB?method=download&amp;shareKey=335eab830fd98b9e0755722d8eb8a7e7" alt="vmware harbor"><br><img src="https://note.youdao.com/yws/api/personal/file/1F7BDB6EC9724BCE98FC027EEAE58356?method=download&amp;shareKey=698ec4f96d8d22df4b2aabb1de4f62e6" alt="vmware harbor"><br><img src="https://note.youdao.com/yws/api/personal/file/2C45B2D75C624C1E8E25FBB5700B7C17?method=download&amp;shareKey=e14797d51254c589aa2fbfba31fa4d4f" alt="vmware harbor"><br><img src="https://note.youdao.com/yws/api/personal/file/E9BC596839A8449E9BAB09B30E07D8E8?method=download&amp;shareKey=64519e8e82850773141cc6071cd2ddae" alt="vmware harbor"><br><img src="https://note.youdao.com/yws/api/personal/file/788558B5E45F4900B5E71109B1C6A7F7?method=download&amp;shareKey=13a6c8be4dc3ea68649e31a0ae91fc85" alt="vmware harbor"><br><img src="https://note.youdao.com/yws/api/personal/file/AD8A2E095F4A48EE8725E2036F521282?method=download&amp;shareKey=d79ca2bb925c020ee84ea719cc9c8637" alt="vmware harbor"><br><img src="https://note.youdao.com/yws/api/personal/file/354AC86784DB4B76AC72172F6AFDAF20?method=download&amp;shareKey=97c1afb9dddacd63de33499ce98a980d" alt="vmware harbor">  </p>
<h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># pwd</span></div><div class="line">/root/harbor</div><div class="line"><span class="comment"># docker-compose -f docker-compose.yml down</span></div></pre></td></tr></table></figure>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2018/01/11/自建docker私有仓库-Vmware-Harbor/">http://www.yfshare.vip/2018/01/11/自建docker私有仓库-Vmware-Harbor/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源Docker Distribution。作为一个企业级私有Registry服务器，Harbor提供了更好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。Harbor支持安装在多个Registry节点的镜像资源复制，镜像全部保存在私有Registry中，确保数据和知识产权在公司内部网络中管控。另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。&lt;br&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://www.yfshare.vip/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://www.yfshare.vip/tags/Docker/"/>
    
      <category term="Docker Registry" scheme="http://www.yfshare.vip/tags/Docker-Registry/"/>
    
  </entry>
  
  <entry>
    <title>The Docker of Jira7.2.0 and Confluence6.0.0</title>
    <link href="http://www.yfshare.vip/2017/12/20/The-Docker-of-Jira7-2-0-and-Confluence6-0-0/"/>
    <id>http://www.yfshare.vip/2017/12/20/The-Docker-of-Jira7-2-0-and-Confluence6-0-0/</id>
    <published>2017-12-20T13:40:58.000Z</published>
    <updated>2018-02-23T13:03:19.368Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>JIRA是一个缺陷跟踪管理系统，开发者是 Atlassian；<br>Confluence 是一个专业的企业知识管理与协同软件，可以用于构建企业wiki。<br>这里我把Jira7.2.0 和 Confluence6.0.0根据实际需求把它们封装成两个Docker容器，方便我们快速部署它们。<br><a id="more"></a></p>
<p>如果想分别单独部署 JIRA 和 Confluence，可以参考：  </p>
<ul>
<li>JIRA：<a href="https://hub.docker.com/r/yfshare/jira/" target="_blank" rel="external">https://hub.docker.com/r/yfshare/jira/</a>  </li>
<li>Confluence：<a href="https://hub.docker.com/r/yfshare/confluence/" target="_blank" rel="external">https://hub.docker.com/r/yfshare/confluence/</a>  </li>
</ul>
<p>部署分两种方法：</p>
<ul>
<li>手动部署，按照步骤一步步来，可以参考：<ul>
<li>JIRA：<a href="http://www.yfshare.vip/2017/05/09/%E9%83%A8%E7%BD%B2JIRA-7-2-2-for-Linux/">http://www.yfshare.vip/2017/05/09/%E9%83%A8%E7%BD%B2JIRA-7-2-2-for-Linux/</a>  </li>
<li>Confluence：<a href="http://www.yfshare.vip/2017/06/25/%E9%83%A8%E7%BD%B2atlassian-confluence-6-1-2/">http://www.yfshare.vip/2017/06/25/%E9%83%A8%E7%BD%B2atlassian-confluence-6-1-2/</a>  </li>
</ul>
</li>
<li>Pull Docker</li>
</ul>
<p>这里提供了Docker-Compose，把JIRA和Confluence整合在一起了，和前面不同的是，这里只使用了一个数据库，前面直接拉会出现两个数据库。<br>但，由于The Docker of Mysql环境变量问题，所以Confluence需要手动初始化数据库，JIRA可以在Docker Compose里直接定义。  </p>
<h4 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># cat docker-jira-confluence-compose.yml </span></div><div class="line">version: <span class="string">'2'</span></div><div class="line">services:</div><div class="line">  db:</div><div class="line">    image: yfshare/mysql:5.6</div><div class="line">    container_name: atlassian_mysql</div><div class="line">    environment:</div><div class="line">      MYSQL_ROOT_PASSWORD: <span class="string">'20180223@Julend.com'</span></div><div class="line">      MYSQL_DATABASE: <span class="string">'jiradb'</span></div><div class="line">      MYSQL_USER: <span class="string">'jira'</span></div><div class="line">      MYSQL_PASSWORD: <span class="string">'jirapass@20180223'</span></div><div class="line">    ports:</div><div class="line">      - 3306:3306</div><div class="line">    volumes:</div><div class="line">      - /data/docker_mount/atlassian_mysql:/var/lib/mysql</div><div class="line">      - /etc/localtime:/etc/localtime:ro</div><div class="line">    restart: always</div><div class="line"></div><div class="line">  JIRA:</div><div class="line">    image: yfshare/jira:7.2.0</div><div class="line">    container_name: JIRA</div><div class="line">    ports:</div><div class="line">      - 8080:8080</div><div class="line">    volumes:</div><div class="line">      - /data/docker_mount/atlassian/Jira_Home:/var/atlassian/jira</div><div class="line">      - /etc/localtime:/etc/localtime:ro</div><div class="line">    links:</div><div class="line">      - db</div><div class="line">    restart: always</div><div class="line"></div><div class="line"><span class="comment">#Confluence数据需要自己手动创建</span></div><div class="line"><span class="comment">#mkdir -p /data/docker_mount/atlassian/&#123;Jira_Home,Confluence_Home&#125; &amp;&amp; chmod 777 /data/docker_mount/atlassian/ -R</span></div><div class="line"><span class="comment">#create database confluencedb default character set utf8 collate utf8_general_ci;</span></div><div class="line"><span class="comment">#create user 'confluenceuser'@'%' identified by 'a86b6913dd';</span></div><div class="line"><span class="comment">#grant all privileges on confluencedb.* to 'confluenceuser'@'%';</span></div><div class="line"><span class="comment">#flush privileges;</span></div><div class="line">  Confluence:</div><div class="line">    image: yfshare/confluence:6.0.0</div><div class="line">    container_name: Confluence</div><div class="line">    ports:</div><div class="line">      - 8090:8090</div><div class="line">    volumes:</div><div class="line">      - /data/docker_mount/atlassian/Confluence_Home:/var/atlassian/confluence</div><div class="line">      - /etc/localtime:/etc/localtime:ro</div><div class="line">    links:</div><div class="line">      - db</div><div class="line">    restart: always</div></pre></td></tr></table></figure>
<h4 id="手动初始化confluence数据库"><a href="#手动初始化confluence数据库" class="headerlink" title="手动初始化confluence数据库"></a>手动初始化confluence数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/docker_mount/atlassian/&#123;Jira_Home,Confluence_Home&#125; &amp;&amp; chmod 777 /data/docker_mount/atlassian/ -R</div><div class="line">mysql -uroot -p<span class="string">'password'</span></div><div class="line">&gt; create database confluencedb default character <span class="built_in">set</span> utf8 collate utf8_general_ci;</div><div class="line">&gt; create user <span class="string">'confluenceuser'</span>@<span class="string">'%'</span> identified by <span class="string">'a86b6913dd'</span>;</div><div class="line">&gt; grant all privileges on confluencedb.* to <span class="string">'confluenceuser'</span>@<span class="string">'%'</span>;</div><div class="line">&gt; flush privileges;</div></pre></td></tr></table></figure>
<h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-compose <span class="_">-f</span> docker-jira-confluence-compose.yml up <span class="_">-d</span></div></pre></td></tr></table></figure>
<h4 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h4><p>JIRA访问：<code>http://localhost:8080</code><br>Confluence访问：<code>http://localhost:8090</code>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/12/20/The-Docker-of-Jira7-2-0-and-Confluence6-0-0/">http://www.yfshare.vip/2017/12/20/The-Docker-of-Jira7-2-0-and-Confluence6-0-0/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JIRA是一个缺陷跟踪管理系统，开发者是 Atlassian；&lt;br&gt;Confluence 是一个专业的企业知识管理与协同软件，可以用于构建企业wiki。&lt;br&gt;这里我把Jira7.2.0 和 Confluence6.0.0根据实际需求把它们封装成两个Docker容器，方便我们快速部署它们。&lt;br&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://www.yfshare.vip/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://www.yfshare.vip/tags/Docker/"/>
    
      <category term="Jira" scheme="http://www.yfshare.vip/tags/Jira/"/>
    
      <category term="Confluence" scheme="http://www.yfshare.vip/tags/Confluence/"/>
    
  </entry>
  
  <entry>
    <title>自建docker私有仓库(Registry)</title>
    <link href="http://www.yfshare.vip/2017/12/20/%E8%87%AA%E5%BB%BAdocker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93-Registry/"/>
    <id>http://www.yfshare.vip/2017/12/20/自建docker私有仓库-Registry/</id>
    <published>2017-12-20T12:59:07.000Z</published>
    <updated>2017-12-21T14:09:49.211Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Docker Hub 存放着 Docker 及其组件的所有资源。它可以提供：  </p>
<ul>
<li>Docker 镜像主机</li>
<li>用户认证</li>
<li>自动镜像构建和工作流程工具，如构建触发器和 web hooks</li>
<li>整合了 GitHub 和 BitBucket</li>
</ul>
<p>但，有些场景我们需要一个私有仓库来管理自己的镜像，可以通过Registry来实现此目的。Registry作为Docker的核心组件之一负责镜像内容的存储与分发，客户端的docker pull以及push命令都将直接与registry进行交互。  </p>
<p>环境：<br>　　Docker 17.12.0-ce-rc4<br>　　Centos 7.3  </p>
<h4 id="部署Docker"><a href="#部署Docker" class="headerlink" title="部署Docker"></a>部署Docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># yum remove docker docker-common docker-selinux docker-engine -y</span></div><div class="line"><span class="comment"># yum install -y yum-utils device-mapper-persistent-data lvm2</span></div><div class="line"><span class="comment"># yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span></div><div class="line"><span class="comment"># yum-config-manager --enable docker-ce-edge</span></div><div class="line"><span class="comment"># yum-config-manager --enable docker-ce-test</span></div><div class="line"><span class="comment"># yum install docker-ce -y</span></div></pre></td></tr></table></figure>
<h4 id="自建证书"><a href="#自建证书" class="headerlink" title="自建证书"></a>自建证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># mkdir -p conf</span></div><div class="line"><span class="comment"># openssl req -new -newkey rsa:4096 -days 365 -subj "/CN=localhost" -nodes -x509 -keyout conf/auth.key -out conf/auth.cert</span></div></pre></td></tr></table></figure>
<h4 id="registry容器配置文件"><a href="#registry容器配置文件" class="headerlink" title="registry容器配置文件"></a>registry容器配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 启动registry容器需要用到</span></div><div class="line"><span class="comment"># cat registry-srv.yml</span></div><div class="line">version: 0.1</div><div class="line"><span class="built_in">log</span>:</div><div class="line">  fields:</div><div class="line">    service: registry</div><div class="line"></div><div class="line">storage:</div><div class="line">  delete:</div><div class="line">    enabled: <span class="literal">true</span></div><div class="line">  cache:</div><div class="line">    blobdescriptor: inmemory</div><div class="line">  filesystem:</div><div class="line">    rootdirectory: /var/lib/registry</div><div class="line"></div><div class="line">http:</div><div class="line">  addr: 0.0.0.0:5000   </div><div class="line">  headers:</div><div class="line">    X-Content-Type-Options: [nosniff]</div><div class="line"></div><div class="line">health:</div><div class="line">  storagedriver:</div><div class="line">    enabled: <span class="literal">true</span></div><div class="line">    interval: 10s</div><div class="line">    threshold: 3</div><div class="line"></div><div class="line">auth:</div><div class="line">  token:</div><div class="line">    <span class="comment"># external url to docker-web authentication endpoint</span></div><div class="line">    realm: http://registry-web:8080/api/auth</div><div class="line">    <span class="comment"># should be same as registry.name of registry-web</span></div><div class="line">    service: registry-srv:5000</div><div class="line">    <span class="comment"># should be same as registry.auth.issuer of registry-web</span></div><div class="line">    issuer: <span class="string">'my issuer'</span></div><div class="line">    <span class="comment"># path to auth certificate</span></div><div class="line">    rootcertbundle: /etc/docker/registry/auth.cert</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="registry-web容器配置文件"><a href="#registry-web容器配置文件" class="headerlink" title="registry-web容器配置文件"></a>registry-web容器配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 启动registry-web容器需要用到</span></div><div class="line"><span class="comment"># cat registry-web.yml </span></div><div class="line">registry:</div><div class="line">  <span class="comment"># Docker registry url</span></div><div class="line">  url: http://registry-srv:5000/v2</div><div class="line">  <span class="comment"># Docker registry fqdn</span></div><div class="line">  name: registry-srv:5000</div><div class="line">  <span class="comment"># To allow image delete, should be false</span></div><div class="line">  <span class="built_in">readonly</span>: <span class="literal">false</span></div><div class="line">  auth:</div><div class="line">    <span class="comment"># Enable authentication</span></div><div class="line">    enabled: <span class="literal">true</span></div><div class="line">    <span class="comment"># Token issuer</span></div><div class="line">    <span class="comment"># should equals to auth.token.issuer of docker registry</span></div><div class="line">    issuer: <span class="string">'my issuer'</span></div><div class="line">    <span class="comment"># Private key for token signing</span></div><div class="line">    <span class="comment"># certificate used on auth.token.rootcertbundle should signed by this key</span></div><div class="line">    key: /conf/auth.key</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># tree docker-registry-web/</span></div><div class="line">docker-registry-web/</div><div class="line">└── conf</div><div class="line">    ├── auth.cert</div><div class="line">    ├── auth.key</div><div class="line">    ├── registry-srv.yml</div><div class="line">    └── registry-web.yml</div><div class="line"></div><div class="line">1 directory, 4 files</div></pre></td></tr></table></figure>
<h4 id="启动registry"><a href="#启动registry" class="headerlink" title="启动registry"></a>启动registry</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># /root/docker-registry-web/conf需要有上述四个文件(auth.cert,auth.key,registry-srv.yml,registry-web.yml)，文件内容见上面</span></div><div class="line"><span class="comment"># 如果配置文件改成了域名，在创建容器时CONTAINER NAME最好与配置文件一致</span></div><div class="line">docker run -v /root/docker-registry-web/conf/registry-srv.yml:/etc/docker/registry/config.yml:ro -v /root/docker-registry-web/conf/auth.cert:/etc/docker/registry/auth.cert:ro -v /data:/var/lib/registry/ -p 5000:5000 --restart=always --name registry-srv <span class="_">-d</span> registry:2.6.2</div></pre></td></tr></table></figure>
<h4 id="启动registry-web"><a href="#启动registry-web" class="headerlink" title="启动registry-web"></a>启动registry-web</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># /root/docker-registry-web/conf需要有上述四个文件(auth.cert,auth.key,registry-srv.yml,registry-web.yml)，文件内容见上面</span></div><div class="line"><span class="comment"># 如果配置文件改成了域名，在创建容器时CONTAINER NAME最好与配置文件一致</span></div><div class="line">docker run <span class="_">-d</span> -v /root/docker-registry-web/conf/registry-web.yml:/conf/config.yml:ro -v /root/docker-registry-web/conf/auth.key:/conf/auth.key -v /root/docker-registry-web/db:/data -it -p 8080:8080 --link registry-srv --restart=always --name registry-web hyper/docker-registry-web</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker images</span></div><div class="line">REPOSITORY                            TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">docker.io/registry                    2.6.2               177391bcf802        2 weeks ago         33.26 MB</div><div class="line">docker.io/hyper/docker-registry-web   latest              0db5683824d8        14 months ago       598.6 MB</div><div class="line"><span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment"># docker ps -a</span></div><div class="line">CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS                    NAMES</div><div class="line">1b4c0efd8465        hyper/docker-registry-web   <span class="string">"start.sh"</span>               58 minutes ago      Up 58 minutes       0.0.0.0:8080-&gt;8080/tcp   registry-web</div><div class="line">2d475b4d0603        registry:2.6.2              <span class="string">"/entrypoint.sh /etc/"</span>   58 minutes ago      Up 17 minutes       0.0.0.0:5000-&gt;5000/tcp   registry-srv</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="hosts解析"><a href="#hosts解析" class="headerlink" title="hosts解析"></a>hosts解析</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># tail -2 /etc/hosts</span></div><div class="line">192.168.1.61 registry-srv</div><div class="line">192.168.1.61 registry-web</div></pre></td></tr></table></figure>
<h4 id="忽略认证"><a href="#忽略认证" class="headerlink" title="忽略认证"></a>忽略认证</h4><p>Question：如果报下面的错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker login http://registry-srv:5000</span></div><div class="line">Username (admin): admin</div><div class="line">Password: </div><div class="line">Error response from daemon: Get https://registry-srv:5000/v2/: http: server gave HTTP response to HTTPS client</div></pre></td></tr></table></figure></p>
<p>Answer：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker 1.12.6需要在这里修改</span></div><div class="line"><span class="comment"># grep -iv '^#' /etc/sysconfig/docker | grep -iv '^$'</span></div><div class="line">OPTIONS=<span class="string">'--selinux-enabled --log-driver=journald --signature-verification=false --insecure-registry registry-srv:5000'</span></div><div class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$&#123;DOCKER_CERT_PATH&#125;</span>"</span> ]; <span class="keyword">then</span></div><div class="line">    DOCKER_CERT_PATH=/etc/docker</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#docker 17.12.0-ce-rc4需要这里修改</span></div><div class="line"><span class="comment"># cat /etc/docker/daemon.json </span></div><div class="line">&#123; <span class="string">"insecure-registries"</span>:[<span class="string">"registry-srv:5000"</span>] &#125;</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># systemctl restart docker</span></div></pre></td></tr></table></figure>
<h4 id="上传镜像到docker-registry"><a href="#上传镜像到docker-registry" class="headerlink" title="上传镜像到docker registry"></a>上传镜像到docker registry</h4><p>Question：在<code>docker 17.12.0-ce-rc4</code>中登陆成功后，如果报下面的错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker push registry-srv:5000/mysql:5.6</span></div><div class="line">The push refers to a repository [registry-srv:5000/mysql]</div><div class="line"></div><div class="line">67ab9337620e: Preparing </div><div class="line">388e5e8563d4: Preparing </div><div class="line">000529f48f17: Preparing </div><div class="line">07d0b57bb93e: Preparing </div><div class="line">d59453e8d7bb: Waiting </div><div class="line">19aa284e9bf3: Waiting </div><div class="line">889744378e18: Waiting </div><div class="line">ae12d30e1dfc: Waiting </div><div class="line">4bcdffd70da2: Waiting </div><div class="line">unauthorized: authentication required</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>Answer：需要登陆registry-web给当前登陆的用户授权<br><img src="https://note.youdao.com/yws/api/personal/file/31325BB5F8004B7EBA8475EEE9EB2D52?method=download&amp;shareKey=187c16347a2a2fc53c43bf618824e074" alt="Registry_Permissions"><br><img src="https://note.youdao.com/yws/api/personal/file/99A6312328FB498FA01065FC943CFED4?method=download&amp;shareKey=0a178de17ed865950e5f3aa12c5220a6" alt="Registry_Roles"><br>然后再登陆<code>docker login http://registry-srv:5000</code>即可成功上传  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker login registry-srv:5000</span></div><div class="line">Username (admin): admin</div><div class="line">Password: </div><div class="line">Login Succeeded</div><div class="line"><span class="comment"># docker tag docker.io/mysql:5.6 registry-srv:5000/mysql:5.6</span></div><div class="line"><span class="comment"># docker images</span></div><div class="line">REPOSITORY                TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">registry-srv:5000/mysql   5.6                 1c7972822e0c        8 days ago          299 MB</div><div class="line">docker push registry-srv:5000/mysql:5.6</div><div class="line">The push refers to a repository [registry-srv:5000/mysql]</div><div class="line">67ab9337620e: Pushed </div><div class="line">388e5e8563d4: Pushed </div><div class="line">000529f48f17: Pushed </div><div class="line">07d0b57bb93e: Pushed </div><div class="line">324a3796c59a: Pushed </div><div class="line">d59453e8d7bb: Pushed </div><div class="line">19aa284e9bf3: Pushed </div><div class="line">889744378e18: Pushed </div><div class="line">ae12d30e1dfc: Pushed </div><div class="line">4bcdffd70da2: Pushed </div><div class="line">5.6: digest: sha256:92<span class="built_in">cd</span>157a4d73a00a56993bce76d467ae170a86b264d24536648834d7f7501cdd size: 2409</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ls /data/</span></div><div class="line">docker</div><div class="line"><span class="comment"># du -sh /data/</span></div><div class="line">101M	/data/</div><div class="line"><span class="comment"># tree docker/</span></div><div class="line">docker/</div><div class="line">└── registry</div><div class="line">    └── v2</div><div class="line">        ├── blobs</div><div class="line">        │   └── sha256</div><div class="line">        │       ├── 1c</div><div class="line">        │       │   └── 1c7972822e0cfe7af284610af68fd23ab1c6e36566070199a2ecae0c540a6213</div><div class="line">        │       │       └── data</div><div class="line">        │       ├── 28</div><div class="line">        │       │   └── 28dd7bab809dc36871733509f298775d6e7e9a7b48411969fd40bbc5d42d4872</div><div class="line">        │       │       └── data</div><div class="line">        │       ├── 60</div><div class="line">        │       │   └── 60b597896d30e83b6451b5d287503c6ad5b966afcfe983beaac073<span class="built_in">cd</span>14d3327e</div><div class="line">        │       │       └── data</div><div class="line">        │       ├── 67</div><div class="line">        │       │   └── 67ee8c6f60b5ee191862ae0beee2e27<span class="built_in">fc</span>242c1548e724d42491aff9599783f14</div><div class="line">        │       │       └── data</div><div class="line">        │       ├── 74</div><div class="line">        │       │   └── 74616d0d8b72cce832e728b721a055ee94112f55d9152ea75c0c11df9255e5fe</div><div class="line">        │       │       └── data</div><div class="line">        │       ├── 78</div><div class="line">        │       │   └── 78032de49d65ab1151d278821068401fa7a8964c16b2f4441a3ef9ac8dd02229</div><div class="line">        │       │       └── data</div><div class="line">        │       ├── 83</div><div class="line">        │       │   └── 837546b20bc4af04c4<span class="built_in">cd</span>0b34ac6cb74418f0400fa80045d02d341aecbc70f928</div><div class="line">        │       │       └── data</div><div class="line">        │       ├── 8b</div><div class="line">        │       │   └── 8b95be8b8d363b4fd0d3de912d206a4a83f9f445e7a0761c61e4225b55aa3f6a</div><div class="line">        │       │       └── data</div><div class="line">        │       ├── 92</div><div class="line">        │       │   └── 92<span class="built_in">cd</span>157a4d73a00a56993bce76d467ae170a86b264d24536648834d7f7501cdd</div><div class="line">        │       │       └── data</div><div class="line">        │       ├── 9b</div><div class="line">        │       │   ├── 9b7ad7dfbf08cb21ae35a041aeceb634a80f6145d371fb793e18c9be75b491ce</div><div class="line">        │       │   │   └── data</div><div class="line">        │       │   └── 9b8316af6cc601a268bccfd58f93c2598e4a5f8a6b101cb9ffe365bcd467cb8e</div><div class="line">        │       │       └── data</div><div class="line">        │       └── f4</div><div class="line">        │           └── f49cf87b52c10aa83b4f4405800527a74400fb19ea1821d209293bc4d53966aa</div><div class="line">        │               └── data</div><div class="line">        └── repositories</div><div class="line">            └── mysql</div><div class="line">                ├── _layers</div><div class="line">                │   └── sha256</div><div class="line">                │       ├── 1c7972822e0cfe7af284610af68fd23ab1c6e36566070199a2ecae0c540a6213</div><div class="line">                │       │   └── link</div><div class="line">                │       ├── 28dd7bab809dc36871733509f298775d6e7e9a7b48411969fd40bbc5d42d4872</div><div class="line">                │       │   └── link</div><div class="line">                │       ├── 60b597896d30e83b6451b5d287503c6ad5b966afcfe983beaac073<span class="built_in">cd</span>14d3327e</div><div class="line">                │       │   └── link</div><div class="line">                │       ├── 67ee8c6f60b5ee191862ae0beee2e27<span class="built_in">fc</span>242c1548e724d42491aff9599783f14</div><div class="line">                │       │   └── link</div><div class="line">                │       ├── 74616d0d8b72cce832e728b721a055ee94112f55d9152ea75c0c11df9255e5fe</div><div class="line">                │       │   └── link</div><div class="line">                │       ├── 78032de49d65ab1151d278821068401fa7a8964c16b2f4441a3ef9ac8dd02229</div><div class="line">                │       │   └── link</div><div class="line">                │       ├── 837546b20bc4af04c4<span class="built_in">cd</span>0b34ac6cb74418f0400fa80045d02d341aecbc70f928</div><div class="line">                │       │   └── link</div><div class="line">                │       ├── 8b95be8b8d363b4fd0d3de912d206a4a83f9f445e7a0761c61e4225b55aa3f6a</div><div class="line">                │       │   └── link</div><div class="line">                │       ├── 9b7ad7dfbf08cb21ae35a041aeceb634a80f6145d371fb793e18c9be75b491ce</div><div class="line">                │       │   └── link</div><div class="line">                │       ├── 9b8316af6cc601a268bccfd58f93c2598e4a5f8a6b101cb9ffe365bcd467cb8e</div><div class="line">                │       │   └── link</div><div class="line">                │       └── f49cf87b52c10aa83b4f4405800527a74400fb19ea1821d209293bc4d53966aa</div><div class="line">                │           └── link</div><div class="line">                ├── _manifests</div><div class="line">                │   ├── revisions</div><div class="line">                │   │   └── sha256</div><div class="line">                │   │       └── 92<span class="built_in">cd</span>157a4d73a00a56993bce76d467ae170a86b264d24536648834d7f7501cdd</div><div class="line">                │   │           └── link</div><div class="line">                │   └── tags</div><div class="line">                │       └── 5.6</div><div class="line">                │           ├── current</div><div class="line">                │           │   └── link</div><div class="line">                │           └── index</div><div class="line">                │               └── sha256</div><div class="line">                │                   └── 92<span class="built_in">cd</span>157a4d73a00a56993bce76d467ae170a86b264d24536648834d7f7501cdd</div><div class="line">                │                       └── link</div><div class="line">                └── _uploads</div><div class="line"></div><div class="line">53 directories, 26 files</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="从docker-registry下载镜像"><a href="#从docker-registry下载镜像" class="headerlink" title="从docker registry下载镜像"></a>从docker registry下载镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker pull registry-srv:5000/mysql:5.6</span></div><div class="line">Trying to pull repository registry-srv:5000/mysql ... </div><div class="line">Get http://registry-srv:5000/v2/mysql/manifests/5.6: unauthorized: authentication required</div><div class="line"><span class="comment"># docker login registry-srv:5000 -uadmin -padmin</span></div><div class="line">Login Succeeded</div><div class="line"><span class="comment"># docker pull registry-srv:5000/mysql:5.6</span></div><div class="line">Trying to pull repository registry-srv:5000/mysql ... </div><div class="line">5.6: Pulling from registry-srv:5000/mysql</div><div class="line">f49cf87b52c1: Pull complete </div><div class="line">78032de49d65: Pull complete </div><div class="line">837546b20bc4: Pull complete </div><div class="line">9b8316af6cc6: Pull complete </div><div class="line">28dd7bab809d: Pull complete </div><div class="line">8b95be8b8d36: Pull complete </div><div class="line">67ee8c6f60b5: Pull complete </div><div class="line">74616d0d8b72: Pull complete </div><div class="line">9b7ad7dfbf08: Pull complete </div><div class="line">60b597896d30: Pull complete </div><div class="line">Digest: sha256:92<span class="built_in">cd</span>157a4d73a00a56993bce76d467ae170a86b264d24536648834d7f7501cdd</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># docker images</span></div><div class="line">REPOSITORY                TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">registry-srv:5000/mysql                               5.6                 1c7972822e0c        8 days ago          299 MB</div></pre></td></tr></table></figure>
<h4 id="删除docker-registry仓库镜像"><a href="#删除docker-registry仓库镜像" class="headerlink" title="删除docker registry仓库镜像"></a>删除docker registry仓库镜像</h4><p>在2.4版本中对这一问题进行了解决，增加了一个垃圾回收命令，删除未被引用的层数据，操作如下：  </p>
<ul>
<li>在启动仓库时，需在配置文件中的storage配置中增加delete=true配置项，允许删除镜像  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#完整配置文件请参考 registry-srv.yml</span></div><div class="line">storage:</div><div class="line">  delete:</div><div class="line">    enabled: <span class="literal">true</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>先在registry-web上执行删除操作<br><img src="https://note.youdao.com/yws/api/personal/file/FB458A3AB2EA4EA5A58C3E0D76B959EF?method=download&amp;shareKey=b1cb0288408e3525dd20fc356e12d91a" alt="register_del"><br><img src="https://note.youdao.com/yws/api/personal/file/EC0B62B8C074467DB81C44B75AF8C940?method=download&amp;shareKey=5501ff8ed5e3e1139116a282c481178c" alt="register_del">  </p>
<p>这时数据并未完全删除，需要执行垃圾回收<br>命令：<code>registry garbage-collect config.yml</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 垃圾回收前</span></div><div class="line"><span class="comment"># du -sh *</span></div><div class="line">101M	docker</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"># docker exec -it registry-srv registry garbage-collect /etc/docker/registry/config.yml</div><div class="line">mysql</div><div class="line"></div><div class="line"><span class="number">0</span> blobs marked, <span class="number">13</span> blobs eligible <span class="keyword">for</span> deletion</div><div class="line">blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">9</span>b8316af6cc601a268bccfd58f93c2598e4a5f8a6b101cb9ffe365bcd467cb8e</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">9</span><span class="keyword">b</span>/<span class="number">9</span>b8316af6cc601a268bccfd58f93c2598e4a5f8a6b101cb9ffe365bcd467cb8e  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">67</span>ee8c6f60b5ee191862ae0beee2e27fc242c1548e724d42491aff9599783f14</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">67</span>/<span class="number">67</span>ee8c6f60b5ee191862ae0beee2e27fc242c1548e724d42491aff9599783f14  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">78032</span>de49d65ab1151d278821068401fa7a8964c16b2f4441a3ef9ac8dd02229</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">78</span>/<span class="number">78032</span>de49d65ab1151d278821068401fa7a8964c16b2f4441a3ef9ac8dd02229  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">60</span>b597896d30e83b6451b5d287503c6ad5b966afcfe983beaac073cd14d3327e</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">60</span>/<span class="number">60</span>b597896d30e83b6451b5d287503c6ad5b966afcfe983beaac073cd14d3327e  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">74616</span>d0d8b72cce832e728b721a055ee94112f55d9152ea75c0c11df9255e5fe</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">74</span>/<span class="number">74616</span>d0d8b72cce832e728b721a055ee94112f55d9152ea75c0c11df9255e5fe  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">837546</span>b20bc4af04c4cd0b34ac6cb74418f0400fa80045d02d341aecbc70f928</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">83</span>/<span class="number">837546</span>b20bc4af04c4cd0b34ac6cb74418f0400fa80045d02d341aecbc70f928  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">8</span>b95be8b8d363b4fd0d3de912d206a4a83f9f445e7a0761c61e4225b55aa3f6a</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">8</span><span class="keyword">b</span>/<span class="number">8</span>b95be8b8d363b4fd0d3de912d206a4a83f9f445e7a0761c61e4225b55aa3f6a  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">92</span>cd157a4d73a00a56993bce76d467ae170a86b264d24536648834d7f7501cdd</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">92</span>/<span class="number">92</span>cd157a4d73a00a56993bce76d467ae170a86b264d24536648834d7f7501cdd  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">9</span>b7ad7dfbf08cb21ae35a041aeceb634a80f6145d371fb793e18c9be75b491ce</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">9</span><span class="keyword">b</span>/<span class="number">9</span>b7ad7dfbf08cb21ae35a041aeceb634a80f6145d371fb793e18c9be75b491ce  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">1</span>c7972822e0cfe7af284610af68fd23ab1c6e36566070199a2ecae0c540a6213</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">1</span><span class="keyword">c</span>/<span class="number">1</span>c7972822e0cfe7af284610af68fd23ab1c6e36566070199a2ecae0c540a6213  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:<span class="number">28</span>dd7bab809dc36871733509f298775d6e7e9a7b48411969fd40bbc5d42d4872</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/<span class="number">28</span>/<span class="number">28</span>dd7bab809dc36871733509f298775d6e7e9a7b48411969fd40bbc5d42d4872  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/a3/a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430blob eligible <span class="keyword">for</span> deletion: <span class="built_in">sha256</span>:f49cf87b52c10aa83b4f4405800527a74400fb19ea1821d209293bc4d53966aa</div><div class="line">INFO[<span class="number">0000</span>] Deleting blo<span class="variable">b:</span> /docker/registry/v2/blobs/<span class="built_in">sha256</span>/f4/f49cf87b52c10aa83b4f4405800527a74400fb19ea1821d209293bc4d53966aa  <span class="keyword">go</span>.<span class="keyword">version</span>=go1.<span class="number">7.6</span> instance.id=<span class="number">1</span>cb0944e-c80c</div><div class="line">-<span class="number">4111</span>-<span class="number">9758</span>-df3ed7b72430</div><div class="line">#</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 垃圾回收后</span></div><div class="line"><span class="comment"># du -sh *</span></div><div class="line">204K	docker</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<p>注：在执行垃圾回收后，需要重启registry-srv，否则当再次上传相同IMAGE时，将无法成功上传<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker restart registry-srv</span></div></pre></td></tr></table></figure></p>
<h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><p><img src="https://note.youdao.com/yws/api/personal/file/A798B6B8F24448C8BDDB28FC5613BFA7?method=download&amp;shareKey=b6384831be5d8a0bab732694c1fb4481" alt="register_login"><br><img src="https://note.youdao.com/yws/api/personal/file/9CBFFA18A90544D3A2E96A25B5C5FE2C?method=download&amp;shareKey=7d870422ba75dc1499af97e17cd7f464" alt="register_repositories"><br><img src="https://note.youdao.com/yws/api/personal/file/2FDDDEE2F7B14EAF92DFB78729596EB6?method=download&amp;shareKey=50afa53fa7c84b43e07dd132bb0f8d28" alt="register_tags"><br><img src="https://note.youdao.com/yws/api/personal/file/36A659C4EC7145C6800FCB6704BD2C55?method=download&amp;shareKey=bd67c52c0696a8f00c77a62b2eaed683" alt="register_image">  </p>
<p>参考：<br><a href="https://hub.docker.com/r/library/registry/" target="_blank" rel="external">https://hub.docker.com/r/library/registry/</a><br><a href="https://github.com/mkuchin/docker-registry-web" target="_blank" rel="external">https://github.com/mkuchin/docker-registry-web</a><br><a href="https://hub.docker.com/r/hyper/docker-registry-web/" target="_blank" rel="external">https://hub.docker.com/r/hyper/docker-registry-web/</a><br><a href="http://www.widuu.com/chinese_docker/index.html" target="_blank" rel="external">http://www.widuu.com/chinese_docker/index.html</a>  </p>
<p>附件：<br><a href="https://note.youdao.com/yws/api/personal/file/B44119A67B2644AEA0212B7DF58B88F8?method=download&amp;shareKey=5502a8f7d9e924c901d618ca7466ce83" target="_blank" rel="external">docker-registry-web.tar.gz</a>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/12/20/自建docker私有仓库-Registry/">http://www.yfshare.vip/2017/12/20/自建docker私有仓库-Registry/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Docker Hub 存放着 Docker 及其组件的所有资源。它可以提供
    
    </summary>
    
      <category term="Docker" scheme="http://www.yfshare.vip/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://www.yfshare.vip/tags/Docker/"/>
    
      <category term="Docker Registry" scheme="http://www.yfshare.vip/tags/Docker-Registry/"/>
    
      <category term="Registry-web" scheme="http://www.yfshare.vip/tags/Registry-web/"/>
    
  </entry>
  
  <entry>
    <title>The Redmine_svn of docker</title>
    <link href="http://www.yfshare.vip/2017/12/14/The-Redmine-svn-of-docker/"/>
    <id>http://www.yfshare.vip/2017/12/14/The-Redmine-svn-of-docker/</id>
    <published>2017-12-14T14:51:08.000Z</published>
    <updated>2017-12-14T15:19:01.478Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>The redmine + svn + apache2 of Docker 应用基于Debian系统部署，经改造后只需要 PULL+Compose后即可正常工作<br><a id="more"></a></p>
<h2 id="Supported-tags-and-respective-Dockerfile-links"><a href="#Supported-tags-and-respective-Dockerfile-links" class="headerlink" title="Supported tags and respective Dockerfile links"></a>Supported tags and respective Dockerfile links</h2><ul>
<li><code>latest</code>(<a href="https://github.com/yfshare/Docker/blob/master/Redmine_svn/Dockerfile" target="_blank" rel="external">latest/Dockerfile</a>)</li>
<li><code>3.4</code>(<a href="https://github.com/yfshare/Docker/blob/master/Redmine_svn/Dockerfile_3.4" target="_blank" rel="external">3.4/Dockerfile</a>)</li>
</ul>
<p>镜像地址：<a href="https://hub.docker.com/r/yfshare/redmine_svn/" target="_blank" rel="external">https://hub.docker.com/r/yfshare/redmine_svn/</a>  </p>
<h3 id="The-redmine-3-4-svn-apache2-of-Docker"><a href="#The-redmine-3-4-svn-apache2-of-Docker" class="headerlink" title="The redmine 3.4+svn+apache2 of Docker"></a>The redmine 3.4+svn+apache2 of Docker</h3><p>基于Docker hub里redmine 3.4（docker pull redmine:3.4）（<a href="https://hub.docker.com/_/redmine/" target="_blank" rel="external">https://hub.docker.com/_/redmine/</a> ）改造而成。</p>
<h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><p>使用到的环境变量有：  </p>
<ul>
<li><code>MYSQL_ROOT_PASSWORD</code>：MYSQL的ROOT密码，需要和REDMINE_DB_PASSWORD变量值一致</li>
<li><code>MYSQL_DATABASE</code>：MYSQL上创建存储redmine的库名</li>
<li><code>SVN_ROOT</code>：存储SVN REPO的父目录</li>
<li><code>SVN_DIR</code>：SVN REPO项目目录，一般放在变量SVN_ROOT下</li>
<li><code>REDMINE_DB_MYSQL</code>：存储REDMINE的MYSQL DOCKER容器名，建议不要修改；如果修改它同时也需要修改docker-compose</li>
<li><code>REDMINE_DB_PASSWORD</code>：REDMINE连接MYSQL Docker的密码，REDMINE_DB_PASSWORD需要和MYSQL_ROOT_PASSWORD密码一致</li>
<li><code>REDMINE_DB_ENCODING</code>：新建MYSQL库REDMINE的字符集</li>
<li><code>REDMINE_MAIL_ADDRESS</code>：发送REDMINE的邮件地址（configuration.yml）</li>
<li><code>REDMINE_MAIL_DOMAIN</code>：发送REDMINE的邮件域名（configuration.yml）</li>
<li><code>REDMINE_MAIL_USER</code>：发送REDMINE的邮件用户名（configuration.yml）</li>
<li><code>REDMINE_MAIL_PASSWD</code>：发送REDMINE的邮件密码（configuration.yml）</li>
<li>以上变量是在Dockerfile自定义的，如需要其他变量，请参考（<a href="https://hub.docker.com/_/redmine/" target="_blank" rel="external">https://hub.docker.com/_/redmine/</a> ） ，因调用的redmine:3.4，因此也支持它的变量</li>
</ul>
<h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># cat Dockerfile</span></div><div class="line">FROM docker.io/redmine:3.4</div><div class="line">RUN apt-get update \</div><div class="line">    &amp;&amp; apt-get install -y subversion subversion-tools apache2 libapache2-svn apache2-utils vim \</div><div class="line">    &amp;&amp; useradd apache</div><div class="line"></div><div class="line">RUN <span class="built_in">echo</span> <span class="string">''</span> &gt;/tmp/main</div><div class="line">COPY configure /</div><div class="line"></div><div class="line">VOLUME /usr/src/redmine/files</div><div class="line"></div><div class="line">RUN <span class="built_in">echo</span> <span class="string">"[ ! -d \$&#123;SVN_DIR&#125; ] &amp;&amp; svnadmin create \$&#123;SVN_DIR&#125;"</span> &gt;&gt;/tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"[ -d /Authconf ] &amp;&amp; mv /Authconf \$&#123;SVN_ROOT&#125;/ &amp;&amp; sed -i \"s#^password-db \= passwd#password-db \= \$&#123;SVN_ROOT&#125;\/Authconf\/passwd#g\" \$&#123;SVN_ROOT&#125;/Authconf/svnserve.conf &amp;&amp; sed -i \"s#^authz-db \= authz#authz-db \= \$&#123;SVN_ROOT&#125;\/Authconf\/authz#g\" \$&#123;SVN_ROOT&#125;/Authconf/svnserve.conf &amp;&amp; \mv \$&#123;SVN_ROOT&#125;/Authconf/svnserve.conf \$&#123;SVN_DIR&#125;/conf/"</span> &gt;&gt; /tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"[ -f /dav_svn.conf ] &amp;&amp; mv /dav_svn.conf /etc/apache2/mods-enabled/ &amp;&amp; sed -i \"s#SVNPath SVN_DIR#SVNPath \$&#123;SVN_DIR&#125;#g\" /etc/apache2/mods-enabled/dav_svn.conf &amp;&amp; sed -i \"s#Location \/svn#Location \/\`echo \$&#123;SVN_DIR&#125; | awk -F '/' '&#123;print \$NF&#125;'\`#g\" /etc/apache2/mods-enabled/dav_svn.conf &amp;&amp; sed -i \"/Include the virtual host configurations/aServerName localhost\:80\" /etc/apache2/apache2.conf"</span> &gt;&gt; /tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"[ -f /svnpass ] &amp;&amp;  mv /svnpass /etc/apache2/.svnpass"</span> &gt;&gt; /tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"[ -f /dav_svn.authz ]&amp;&amp; mv /dav_svn.authz /etc/apache2/ &amp;&amp; sed -i \"s#SVN_DIR#\`echo \$&#123;SVN_DIR&#125; | awk -F '/' '&#123;print \$NF&#125;'\`#g\" /etc/apache2/dav_svn.authz"</span> &gt;&gt; /tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"[ -f /configuration.yml ] &amp;&amp; \mv /configuration.yml /usr/src/redmine/config &amp;&amp; sed -i \"s#domain\: 'DOMAIN'#domain\: '\$&#123;REDMINE_MAIL_DOMAIN&#125;'#g\" /usr/src/redmine/config/configuration.yml &amp;&amp; sed -i \"s#address\: \\\"MAIL_ADDRESS\\\"#address\: \\\"\$&#123;REDMINE_MAIL_ADDRESS&#125;\\\"#g\" /usr/src/redmine/config/configuration.yml &amp;&amp; sed -i \"s#user_name\: 'MAILADDR'#user_name\: '\$&#123;REDMINE_MAIL_USER&#125;'#g\" /usr/src/redmine/config/configuration.yml &amp;&amp; sed -i \"s#password\: 'PASSWORD'#password\: '\$&#123;REDMINE_MAIL_PASSWD&#125;'#g\" /usr/src/redmine/config/configuration.yml"</span> &gt;&gt; /tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"chown apache:apache \$&#123;SVN_ROOT&#125; -R &amp;&amp; chown apache:apache /etc/apache2 -R"</span> &gt;&gt; /tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"/etc/init.d/apache2 start &amp;"</span> &gt;&gt; /tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"svnserve -d -r \$&#123;SVN_ROOT&#125; --log-file \$&#123;SVN_ROOT&#125;/svn.log &amp;"</span> &gt;&gt;/tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"sleep 5 &amp;&amp; /docker-entrypoint.sh rails server -b 0.0.0.0 &amp;"</span> &gt;&gt;/tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"tail -f /tmp/main"</span> &gt;&gt;/tmp/redmine_svn.sh \</div><div class="line">    &amp;&amp; chmod +x /tmp/redmine_svn.sh</div><div class="line"></div><div class="line">EXPOSE 3000 3690 80</div><div class="line"></div><div class="line">ENTRYPOINT [<span class="string">"/bin/sh"</span>,<span class="string">"/tmp/redmine_svn.sh"</span>]</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">version: <span class="string">'2'</span></div><div class="line">services:</div><div class="line">  db:</div><div class="line">    image: mysql:5.7</div><div class="line">    container_name: mysql</div><div class="line">    environment:</div><div class="line">      MYSQL_ROOT_PASSWORD: <span class="string">'example12'</span></div><div class="line">      MYSQL_DATABASE: redmine</div><div class="line">    ports:</div><div class="line">      - 3306:3306</div><div class="line">    volumes:</div><div class="line">      - /data/docker_mount/mysql:/var/lib/mysql</div><div class="line">    restart: always</div><div class="line"></div><div class="line">  redmine_svn:</div><div class="line">    image: yfshare/redmine_svn:3.4</div><div class="line">    container_name: redmine_svn</div><div class="line">    ports:</div><div class="line">      - 3000:3000</div><div class="line">      - 3690:3690</div><div class="line">      - 80:80</div><div class="line">    links:</div><div class="line">      - db</div><div class="line">    environment:</div><div class="line">      SVN_ROOT: <span class="string">'/usr/src/SvnRepos'</span></div><div class="line">      SVN_DIR: <span class="string">'/usr/src/SvnRepos/Soros'</span></div><div class="line">      REDMINE_DB_MYSQL: db</div><div class="line">      REDMINE_DB_PASSWORD: <span class="string">'example12'</span></div><div class="line">      REDMINE_DB_ENCODING: <span class="string">'utf8'</span></div><div class="line">      REDMINE_MAIL_ADDRESS: <span class="string">'smtp.exmail.qq.com'</span></div><div class="line">      REDMINE_MAIL_DOMAIN: <span class="string">'example.com'</span></div><div class="line">      REDMINE_MAIL_USER: <span class="string">'username'</span></div><div class="line">      REDMINE_MAIL_PASSWD: <span class="string">'password'</span></div><div class="line">    volumes:</div><div class="line">      - /data/docker_mount/redmine/files:/usr/src/redmine/files</div><div class="line">      - /data/docker_mount/SvnRepos:/usr/src/SvnRepos</div><div class="line">    restart: always</div></pre></td></tr></table></figure>
<h4 id="部署Docker"><a href="#部署Docker" class="headerlink" title="部署Docker"></a>部署Docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker pull yfshare/redmine_svn</div><div class="line">docker-compose <span class="_">-f</span> docker-redmine_svn_mysql.yml up <span class="_">-d</span></div></pre></td></tr></table></figure>
<h4 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h4><ul>
<li><p>在redmine载入默认配置时，请选择“English“，而不是”简体中文“ 否则报下面错误  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">无法载入默认设置：Mysql2::Error: Incorrect string value: <span class="string">'\xE7\xAE\xA1\xE7\x90\x86...'</span> <span class="keyword">for</span> column <span class="string">'name'</span> at row 1: INSERT INTO `roles` (`name`, `issues_visibility`, `position`) VALUES (<span class="string">'管理人员'</span>, <span class="string">'all'</span>, 1)</div></pre></td></tr></table></figure>
</li>
<li><p>redmine默认用户名密码为：<code>admin</code> / <code>admin</code></p>
</li>
<li>TortoiseSVN访问SVN默认用户名密码为：<code>svnadmin</code> / <code>administrator#!001</code></li>
<li>http访问SVN默认用户名密码为：<code>svnadmin</code> / <code>administrator#!001</code></li>
</ul>
<h3 id="The-redmine-latest-svn-apache2-of-Docker"><a href="#The-redmine-latest-svn-apache2-of-Docker" class="headerlink" title="The redmine latest+svn+apache2 of Docker"></a>The redmine latest+svn+apache2 of Docker</h3><h4 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h4><ul>
<li>其他与The redmine 3.4+svn+apache2 of Docker相同，不同的是在build时取消了FROM docker.io/redmine版本号，此时会拉取最新的版本，同时docker-compose也要去掉版本号即可</li>
</ul>
<h4 id="Docker-Compose-1"><a href="#Docker-Compose-1" class="headerlink" title="Docker Compose"></a>Docker Compose</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">version: <span class="string">'2'</span></div><div class="line">services:</div><div class="line">  db:</div><div class="line">    image: mysql</div><div class="line">    container_name: mysql</div><div class="line">    environment:</div><div class="line">      MYSQL_ROOT_PASSWORD: <span class="string">'example12'</span></div><div class="line">      MYSQL_DATABASE: redmine</div><div class="line">    ports:</div><div class="line">      - 3306:3306</div><div class="line">    volumes:</div><div class="line">      - /data/docker_mount/mysql:/var/lib/mysql</div><div class="line">    restart: always</div><div class="line"></div><div class="line">  redmine_svn:</div><div class="line">    image: yfshare/redmine_svn</div><div class="line">    container_name: redmine_svn</div><div class="line">    ports:</div><div class="line">      - 3000:3000</div><div class="line">      - 3690:3690</div><div class="line">      - 80:80</div><div class="line">    links:</div><div class="line">      - db</div><div class="line">    environment:</div><div class="line">      SVN_ROOT: <span class="string">'/usr/src/SvnRepos'</span></div><div class="line">      SVN_DIR: <span class="string">'/usr/src/SvnRepos/Soros'</span></div><div class="line">      REDMINE_DB_MYSQL: db</div><div class="line">      REDMINE_DB_PASSWORD: <span class="string">'example12'</span></div><div class="line">      REDMINE_DB_ENCODING: <span class="string">'utf8'</span></div><div class="line">      REDMINE_MAIL_ADDRESS: <span class="string">'smtp.exmail.qq.com'</span></div><div class="line">      REDMINE_MAIL_DOMAIN: <span class="string">'example.com'</span></div><div class="line">      REDMINE_MAIL_USER: <span class="string">'username'</span></div><div class="line">      REDMINE_MAIL_PASSWD: <span class="string">'password'</span></div><div class="line">    volumes:</div><div class="line">      - /data/docker_mount/redmine/files:/usr/src/redmine/files</div><div class="line">      - /data/docker_mount/SvnRepos:/usr/src/SvnRepos</div><div class="line">    restart: always</div></pre></td></tr></table></figure>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#编译Dockerfile生成Docker images</span></div><div class="line">docker build -t yfshare/redmine_svn <span class="_">-f</span> Dockerfile .</div><div class="line"></div><div class="line"><span class="comment">#拉取镜像</span></div><div class="line">docker pull yfshare/redmine_svn</div><div class="line"></div><div class="line"><span class="comment">#使用docker-compose 生成docker容器</span></div><div class="line">docker-compose <span class="_">-f</span> docker-redmine_svn_mysql.yml up <span class="_">-d</span></div></pre></td></tr></table></figure>
<p>然后</p>
<ul>
<li>通过 <code>http://localhost:3000</code>访问Redmine</li>
<li><code>http://localhost/SvnRepos</code>通过WEB界面访问SVN</li>
<li>通过 TortoiseSVN <code>svn://localhost:3690/SvnRepos</code> 访问SVN</li>
<li>通过<code>3306</code>端口访问mysql  </li>
</ul>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/12/14/The-Redmine-svn-of-docker/">http://www.yfshare.vip/2017/12/14/The-Redmine-svn-of-docker/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The redmine + svn + apache2 of Docker 应用基于Debian系统部署，经改造后只需要 PULL+Compose后即可正常工作&lt;br&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://www.yfshare.vip/categories/Docker/"/>
    
    
      <category term="Mysql" scheme="http://www.yfshare.vip/tags/Mysql/"/>
    
      <category term="Docker" scheme="http://www.yfshare.vip/tags/Docker/"/>
    
      <category term="Redmine" scheme="http://www.yfshare.vip/tags/Redmine/"/>
    
      <category term="Svn" scheme="http://www.yfshare.vip/tags/Svn/"/>
    
      <category term="Apache" scheme="http://www.yfshare.vip/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>关于kernel: nf_conntrack: table full, dropping packet问题</title>
    <link href="http://www.yfshare.vip/2017/12/05/%E5%85%B3%E4%BA%8Ekernel-nf-conntrack-table-full-dropping-packet%E9%97%AE%E9%A2%98/"/>
    <id>http://www.yfshare.vip/2017/12/05/关于kernel-nf-conntrack-table-full-dropping-packet问题/</id>
    <published>2017-12-05T14:01:25.000Z</published>
    <updated>2017-12-05T14:06:57.191Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p><code>/var/log/messages</code>报错信息：<code>kernel: nf_conntrack: table full, dropping packet</code><br><a id="more"></a><br>问题背景：公司线上活动（可以理解为秒杀）瞬时流量比平时高好几倍，目前最高瞬时流量为25W/秒(requests)，最低时瞬时流量为6W/秒(requests)<br>而<code>/var/log/messages</code>日志一直报上述错误，直到活动结束  </p>
<p>当时，深刻了解到iptables的这个报错，会造成拒绝服务的问题。查资料后，需要关闭iptables，但服务器在阿里云VPC网络内，使用的是阿里云的安全组策略，故iptables没有打开。后排查，虽iptables和firewalld没开，但是Centos7 还是加载了这个<code>nf_conntrack</code>模块，而导致出现了上面这个问题。  </p>
<p>网上说有三种方法，分别为：  </p>
<ul>
<li>修改参数法</li>
<li>使用RAW表，跳过记录法</li>
<li>移除模块法</li>
</ul>
<p>因服务器没有使用iptables和firewalld，故采用的是<code>移除模块法</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># /sbin/lsmod | egrep 'ip_tables|conntrack'</span></div><div class="line">nf_conntrack_ipv4      19108  2 </div><div class="line">nf_defrag_ipv4         12729  1 nf_conntrack_ipv4</div><div class="line">xt_conntrack           12760  1 </div><div class="line">nf_conntrack          111302  5 nf_nat,nf_nat_ipv4,xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_ipv4</div><div class="line">ip_tables              27115  2 iptable_filter,iptable_nat</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p><code>state</code>模块和<code>nf_conntrack</code>之间是有依赖关系，想要卸载<code>nf_conntrack</code>模块的话，必须也要把<code>state</code>模块移除，不然，其会自动启用nf_conntrack模块。  </p>
<p>卸载模块前需要先关闭iptables和firewalld，如果发现firewalld或iptables没有启用，但是卸载模块时，还是提示模块正在使用，则把iptables或firewalld启动后再关闭，再尝试卸载模块。  </p>
<p>操作方法如下：  </p>
<ul>
<li>先将/etc/sysconfig/iptables 中包含state的语句移除，并restart iptables</li>
<li>执行语句<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#这里是参考文档作者的</span></div><div class="line">modprobe -r xt_NOTRACK nf_conntrack_netbios_ns nf_conntrack_ipv4 xt_state</div><div class="line">modprobe -r nf_conntrack</div><div class="line"></div><div class="line"><span class="comment">#这里是我实际卸载的模块</span></div><div class="line">modprobe -r nf_conntrack_netbios_ns xt_state</div><div class="line">modprobe -r nf_conntrack</div></pre></td></tr></table></figure>
</li>
</ul>
<p>执行完查看/proc/net/ 下面如果没用了 nf_conntrack ，就证明模块移除成功了  </p>
<p>总结（以下摘录原文作者）：<br>以上三种方法种，如果像<code>web这样的操作访问量并发不大</code>的情况下，建议通过第一种方法实现。因为nf_conntrack模块的作用不仅仅只用于记录状态，iptables还可以通过对该模块的使有达到动态过滤的作用。如我在用ab动测试的一台服务器上进行并发模拟时，在/var/log/message里发现如下的日志<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Apr 22 15:21:46 localhost kernel: possible SYN flooding on port 80. Sending cookies.</div><div class="line">Apr 22 15:22:46 localhost kernel: possible SYN flooding on port 80. Sending cookies.</div></pre></td></tr></table></figure></p>
<p>而此时iptables会智能的将发动SYN flood攻击的IP暂时拒绝掉<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ab -c 500 -n 5000 "http://192.168.10.177/"</span></div><div class="line">This is ApacheBench, Version 2.0.40-dev &lt;<span class="variable">$Revision</span>: 1.146 $&gt; apache-2.0</div><div class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</div><div class="line">Copyright 2006 The Apache Software Foundation, http://www.apache.org/</div><div class="line">Benchmarking 192.168.10.177 (be patient)</div><div class="line">apr_socket_recv: Connection reset by peer (104)</div><div class="line">Total of 68 requests completed</div></pre></td></tr></table></figure></p>
<p>如上所以，我用ab操作时，其就会收到apr_socket_recv 的错误提示 。我在网上查询到其具体实现的原理如下：  </p>
<ul>
<li><p>传统的防火墙只能进行静态过滤，而 iptables 除了这个基本的功能之外还可以进行动态过滤，即可以对连接状态进行跟踪，通常称为 conntrack 。 但这不意味着它只能对 TCP 这样的面向连接的协议有效，它还可以对 UDP， ICMP 这种无连接的协议进行跟踪。  </p>
</li>
<li><p>iptables 中的连接跟踪是通过 state 模块来实现的，是在PREROUTING 链中完成的，除了本地主机产生的数据包，它们是在 OUTPUT 链中完成。 它把“连接”划分为四种状态：NEW， ESTABLISHED， RELATED 和 INVALID。连接跟踪当前的所有连接状态可以通过 /proc/net/nf_conntrack 来查看（注意，在一些稍微旧的 Linux 系统上是 /proc/net/ip_conntrack）  </p>
</li>
<li>当 conntrack 第一次看到相关的数据包时，就会把状态标记为 NEW ，比如 TCP 协议中收到第一个 SYN 数据包。当连接的双方都有数据包收发并且还将继续匹配到这些数据包时，连接状态就会变为 ESTABLISHED 。而 RELATED 状态是指一个新的连接，但这个连接和某个已知的连接有关系，比如 FTP 协议中的数据传输连接。INVALID 状态是说数据包和已知的任何连接都不匹配</li>
</ul>
<p>当然，仅仅利用iptables conntrack自动实现syn flood 等DDOS攻击时很弱的。而现成的动态过滤和DDOS防护的方法是很多的。比如netstat脚本实现，iptalbes限制每秒进行连接数，nginx/apache的连接数限制模块及fail2ban日志分析法………… ，所以在具有以上防护的情况下，非常推荐将web 、squid/varnish等应用所在的服务器配置为RAW方式 。我在现网一台150M/S 的cache server上将80和3128两个端口全部NOTRACK之后，conntrack hash表由瞬满直线下降到只有几百条。<br>最后，最不推荐使用的第三种方法，因为第三种方法会将state模块也一块儿移除掉。  </p>
<p>参考：<br><a href="http://www.361way.com/ip_conntrack-tablefull/1717.html" target="_blank" rel="external">http://www.361way.com/ip_conntrack-tablefull/1717.html</a><br><a href="http://www.361way.com/%E5%86%8D%E7%9C%8Bnf_conntrack-table-full%E9%97%AE%E9%A2%98/2404.html" target="_blank" rel="external">http://www.361way.com/%E5%86%8D%E7%9C%8Bnf_conntrack-table-full%E9%97%AE%E9%A2%98/2404.html</a><br><a href="http://jaseywang.me/2012/08/16/%E8%A7%A3%E5%86%B3-nf_conntrack-table-full-dropping-packet-%E7%9A%84%E5%87%A0%E7%A7%8D%E6%80%9D%E8%B7%AF/" target="_blank" rel="external">http://jaseywang.me/2012/08/16/%E8%A7%A3%E5%86%B3-nf_conntrack-table-full-dropping-packet-%E7%9A%84%E5%87%A0%E7%A7%8D%E6%80%9D%E8%B7%AF/</a><br><a href="https://wiki.khnet.info/index.php/Conntrack_tuning" target="_blank" rel="external">https://wiki.khnet.info/index.php/Conntrack_tuning</a><br><a href="http://blog.zol.com.cn/2608/article_2607945.html" target="_blank" rel="external">http://blog.zol.com.cn/2608/article_2607945.html</a><br><a href="http://blog.csdn.net/dog250/article/details/7262619" target="_blank" rel="external">http://blog.csdn.net/dog250/article/details/7262619</a>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/12/05/关于kernel-nf-conntrack-table-full-dropping-packet问题/">http://www.yfshare.vip/2017/12/05/关于kernel-nf-conntrack-table-full-dropping-packet问题/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;/var/log/messages&lt;/code&gt;报错信息：&lt;code&gt;kernel: nf_conntrack: table full, dropping packet&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.yfshare.vip/categories/Linux/"/>
    
    
      <category term="Kernel" scheme="http://www.yfshare.vip/tags/Kernel/"/>
    
      <category term="nf_conntrack" scheme="http://www.yfshare.vip/tags/nf-conntrack/"/>
    
      <category term="dropping packet" scheme="http://www.yfshare.vip/tags/dropping-packet/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch集群(基础)</title>
    <link href="http://www.yfshare.vip/2017/12/04/ElasticSearch%E9%9B%86%E7%BE%A4-%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.yfshare.vip/2017/12/04/ElasticSearch集群-基础/</id>
    <published>2017-12-04T15:36:21.000Z</published>
    <updated>2017-12-18T13:12:38.663Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>这里分享的是ELK集群基础安装文档，<a href="http://www.yfshare.vip/2017/11/22/ELK%E5%AE%89%E8%A3%85-%E5%9F%BA%E7%A1%80/">这里是 ELK安装基础</a><br><a id="more"></a><br>环境：Centos 6.6<br>　　　ElasticSearch 5.1.1<br>　　　Logstash 5.1.1<br>　　　Kibana 5.1.1  </p>
<h4 id="安装集群管理软件"><a href="#安装集群管理软件" class="headerlink" title="安装集群管理软件"></a>安装集群管理软件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#安装ElasticSearch</span></div><div class="line">[root@ELK ~]<span class="comment"># yum -y install elasticsearch-5.1.1.rpm</span></div><div class="line"></div><div class="line"><span class="comment">#ELK node1配置</span></div><div class="line">[root@ELK ~]<span class="comment"># mkdir /etc/elasticsearch/data -p</span></div><div class="line">[root@ELK ~]<span class="comment"># id elasticsearch</span></div><div class="line">uid=498(elasticsearch) gid=499(elasticsearch) groups=499(elasticsearch)</div><div class="line">[root@ELK ~]<span class="comment"># chgrp elasticsearch /etc/elasticsearch/data/ -R</span></div><div class="line">[root@ELK ~]<span class="comment"># chmod 775 /etc/elasticsearch/data/ -R</span></div><div class="line">[root@ELK ~]<span class="comment"># java -version</span></div><div class="line">java version <span class="string">"1.8.0_112"</span></div><div class="line">Java(TM) SE Runtime Environment (build 1.8.0_112-b15)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.112-b15, mixed mode)</div><div class="line">[root@ELK ~]<span class="comment"># ln -s /usr/local/jdk1.8.0_112/bin/java /usr/bin/</span></div><div class="line"></div><div class="line">[root@ELK ~]<span class="comment"># grep -v ^# /etc/elasticsearch/elasticsearch.yml | grep -v ^$</span></div><div class="line">cluster.name: <span class="string">"ES-cluster"</span></div><div class="line">node.name: <span class="string">"es-node01"</span></div><div class="line">node.master: <span class="literal">true</span></div><div class="line">node.data: <span class="literal">true</span></div><div class="line">http.enabled: <span class="literal">true</span></div><div class="line">path.data: /etc/elasticsearch/data</div><div class="line">path.logs: /var/<span class="built_in">log</span>/elasticsearch</div><div class="line">network.host: 0.0.0.0</div><div class="line">http.port: 9200</div><div class="line">http.cors.enabled: <span class="literal">true</span></div><div class="line">http.cors.allow-origin: <span class="string">"*"</span></div><div class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.31.100"</span>, <span class="string">"192.168.31.110"</span>]</div><div class="line">discovery.zen.minimum_master_nodes: 1</div><div class="line"><span class="comment">#discovery.zen.minimum_master_nodes（默认是1）：这个参数控制的是，一个节点需要看到的具有master节点资格的最小数量，然后才能在集群中做操作。官方的推荐值是(N/2)+1，其中N是具有master资格的节点的数量（我们的情况是3，因此这个参数设置为2，但对于只有2个节点的情况，设置为2就有些问题了，一个节点DOWN掉后，你肯定连不上2台服务器了，这点需要注意）</span></div><div class="line">gateway.recover_after_nodes: 2</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line">[root@ELK ~]<span class="comment"># /etc/init.d/elasticsearch start</span></div><div class="line">[root@ELK ~]<span class="comment"># netstat -tunlp | grep 9200</span></div><div class="line">tcp        0      0 :::9200                     :::*                        LISTEN      33156/java          </div><div class="line">[root@ELK ~]<span class="comment"># netstat -tunlp | grep 9300</span></div><div class="line">tcp        0      0 :::9300                     :::*                        LISTEN      33156/java          </div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#ELK node2配置</span></div><div class="line"><span class="comment">#node2配置和node1配置相同(略)</span></div></pre></td></tr></table></figure>
<h4 id="测试集群状态"><a href="#测试集群状态" class="headerlink" title="测试集群状态"></a>测试集群状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">[root@ELK ~]<span class="comment"># curl localhost:9200/_cat/nodes?v     #获取集群中节点列表</span></div><div class="line">ip             heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name</div><div class="line">192.168.31.100            4          81  99    4.32    3.28     3.46 mdi       -      es-node01</div><div class="line">192.168.31.110            3          94   5    0.07    0.03     0.01 mdi       *      es-node02</div><div class="line">[root@ELK ~]<span class="comment"># </span></div><div class="line">[root@ELK ~]<span class="comment"># curl localhost:9200/_cat/health?v    #集群健康检查</span></div><div class="line">epoch      timestamp cluster    status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</div><div class="line">1482982586 11:36:26  ES-cluster green           2         2     22  11    0    0        0             0                  -                100.0%</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line">[root@ELK ~]<span class="comment"># curl 'localhost:9200/_cat/indices?v'  #获取ElasticSearch索引</span></div><div class="line">health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size</div><div class="line">green  open   logstash-message-2016.12.29 qkvr3jmWQei1oBhEy9VnCA   5   1         28            0    376.3kb        188.1kb</div><div class="line">green  open   logstash-nginx-2016.12.29   B9p9qwjsTlaE4<span class="built_in">fc</span>ZcIgJag   5   1          5            0      104kb           52kb</div><div class="line">green  open   .kibana                     bNLdONDMRdWK2-HdYkUuAA   1   1          3            0     34.1kb           17kb</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line"></div><div class="line">//注：当ElasticSearch配置完成后，node2会复制node1的索引</div><div class="line">[root@ELK2 ~]<span class="comment"># curl 'localhost:9200/_cat/indices?v'</span></div><div class="line">health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size</div><div class="line">green  open   logstash-message-2016.12.29 qkvr3jmWQei1oBhEy9VnCA   5   1         28            0    376.3kb        188.1kb</div><div class="line">green  open   .kibana                     bNLdONDMRdWK2-HdYkUuAA   1   1          3            0     34.1kb           17kb</div><div class="line">green  open   logstash-nginx-2016.12.29   B9p9qwjsTlaE4<span class="built_in">fc</span>ZcIgJag   5   1          5            0      104kb           52kb</div><div class="line">[root@ELK2 ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#ElasticSearch集群日志文件位置：</span></div><div class="line">[root@ELK ~]<span class="comment"># ls /var/log/elasticsearch/</span></div><div class="line">ES-cluster_deprecation.log             ES-cluster_index_search_slowlog.log</div><div class="line">ES-cluster_index_indexing_slowlog.log  ES-cluster.log</div><div class="line">[root@ELK ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="安装elasticsearch-head插件"><a href="#安装elasticsearch-head插件" class="headerlink" title="安装elasticsearch-head插件"></a>安装elasticsearch-head插件</h4><p>由于Elasticsearch 5.0 head插件不能以插件形式安装，因此需要单独安装<br>参考：<a href="https://github.com/mobz/elasticsearch-head" target="_blank" rel="external">https://github.com/mobz/elasticsearch-head</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">Running as a plugin of Elasticsearch</div><div class="line"></div><div class="line">Install elasticsearch-head:</div><div class="line">– <span class="keyword">for</span> Elasticsearch 5.x:</div><div class="line">site plugins are not supported. Run elasticsearch-head as a standalone server</div><div class="line">– <span class="keyword">for</span> Elasticsearch 2.x – 4.x:</div><div class="line">sudo elasticsearch/bin/plugin install mobz/elasticsearch-head</div><div class="line">– <span class="keyword">for</span> Elasticsearch 1.x:</div><div class="line">sudo elasticsearch/bin/plugin -install mobz/elasticsearch-head/1.x</div><div class="line">– <span class="keyword">for</span> Elasticsearch 0.9:</div><div class="line">sudo elasticsearch/bin/plugin -install mobz/elasticsearch-head/0.9</div><div class="line">open http://localhost:9200/_plugin/head/</div><div class="line"></div><div class="line">Running with built <span class="keyword">in</span> server：</div><div class="line"><span class="built_in">enable</span> cors by adding http.cors.enabled: <span class="literal">true</span> <span class="keyword">in</span> elasticsearch configuration. Don’t forget to also <span class="built_in">set</span> http.cors.allow-origin because no origin allowed by default. http.cors.allow-origin: <span class="string">"*"</span> is valid value, however it’s considered as a security risk as your cluster is open to cross origin from anywhere. Check Elasticsearch documentation on this parameter: https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-http.html<span class="comment">#modules-http</span></div><div class="line">git <span class="built_in">clone</span> git://github.com/mobz/elasticsearch-head.git</div><div class="line"><span class="built_in">cd</span> elasticsearch-head</div><div class="line">npm install</div><div class="line">grunt server</div><div class="line">open http://localhost:9100/</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#npm命令需要安装nodejs</span></div><div class="line">[root@ELK ~]<span class="comment"># wget https://nodejs.org/dist/v0.12.16/node-v0.12.16.tar.gz</span></div><div class="line">[root@ELK ~]<span class="comment"># tar -zxf node-v0.12.16.tar.gz </span></div><div class="line">[root@ELK ~]<span class="comment"># cd node-v0.12.16</span></div><div class="line">[root@ELK node-v0.12.16]<span class="comment">#</span></div><div class="line">[root@ELK node-v0.12.16]<span class="comment"># ./configure --prefix=/usr/local/node-v0.12.16</span></div><div class="line">[root@ELK node-v0.12.16]<span class="comment"># make &amp;&amp; make install</span></div><div class="line">[root@ELK ~]<span class="comment"># ls -l /usr/local/node-v0.12.16/bin/npm</span></div><div class="line">lrwxrwxrwx 1 root root 38 Dec 28 12:43 /usr/<span class="built_in">local</span>/node-v0.12.16/bin/npm -&gt; ../lib/node_modules/npm/bin/npm-cli.js</div><div class="line">[root@ELK ~]<span class="comment"># ln -s /usr/local/node-v0.12.16/bin/npm /usr/bin/</span></div><div class="line">[root@ELK ~]<span class="comment"># ll /usr/bin/npm </span></div><div class="line">lrwxrwxrwx 1 root root 32 Dec 28 14:31 /usr/bin/npm -&gt; /usr/<span class="built_in">local</span>/node-v0.12.16/bin/npm</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line">[root@ELK ~]<span class="comment"># ln -s /usr/local/node-v0.12.16/bin/node /usr/bin/</span></div><div class="line">[root@ELK ~]<span class="comment"># ll /usr/bin/node </span></div><div class="line">lrwxrwxrwx 1 root root 33 Dec 28 15:06 /usr/bin/node -&gt; /usr/<span class="built_in">local</span>/node-v0.12.16/bin/node</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@ELK ~]<span class="comment"># yum -y install git</span></div><div class="line">[root@ELK ~]<span class="comment"># cd /usr/local/</span></div><div class="line">[root@ELK <span class="built_in">local</span>]<span class="comment"># git clone git://github.com/mobz/elasticsearch-head.git</span></div><div class="line">[root@ELK <span class="built_in">local</span>]<span class="comment"># cd elasticsearch-head</span></div><div class="line">[root@ELK elasticsearch-head]<span class="comment"># npm install</span></div><div class="line"><span class="comment">#如果在elasticsearch-head目录下node_modules/grunt下如果没有grunt二进制程序，则需要执行</span></div><div class="line">[root@ELK ~]<span class="comment"># cd /usr/local/elasticsearch-head/</span></div><div class="line">[root@ELK elasticsearch-head]<span class="comment"># npm install grunt --save</span></div><div class="line">[root@ELK elasticsearch-head]<span class="comment"># ls</span></div><div class="line">Dockerfile                          grunt_fileSets.js  node_modules                  README.textile  <span class="built_in">test</span></div><div class="line">elasticsearch-head.sublime-project  index.html         package.json                  _site</div><div class="line">Gruntfile.js                        LICENCE            plugin-descriptor.properties  src</div><div class="line">[root@ELK elasticsearch-head]<span class="comment"># ls -l node_modules/grunt/bin/grunt</span></div><div class="line">-rwxr-xr-x 1 root root 53 Apr  6  2016 node_modules/grunt/bin/grunt</div><div class="line">[root@ELK elasticsearch-head]<span class="comment">#</span></div><div class="line">[root@ELK elasticsearch-head]<span class="comment"># head -98 Gruntfile.js | tail -9</span></div><div class="line">		connect: &#123;</div><div class="line">			server: &#123;</div><div class="line">				options: &#123;</div><div class="line">					hostname: <span class="string">'0.0.0.0'</span>,   <span class="comment">#添加这行</span></div><div class="line">					port: 9100,</div><div class="line">					base: <span class="string">'.'</span>,</div><div class="line">					keepalive: <span class="literal">true</span></div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">[root@ELK elasticsearch-head]<span class="comment"># /usr/local/elasticsearch-head/node_modules/grunt/bin/grunt server  #如果执行报错看下面的解决办法</span></div><div class="line">Running <span class="string">"connect:server"</span> (connect) task</div><div class="line">Waiting forever...</div><div class="line">Started connect web server on http://localhost:9100</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#最新安装步骤</span></div><div class="line">yum -y install git make gcc gcc-c++ wget bzip2</div><div class="line">wget https://nodejs.org/dist/v8.9.3/node-v8.9.3.tar.gz</div><div class="line">tar -zxf node-v8.9.3.tar.gz</div><div class="line"><span class="built_in">cd</span> node-v8.9.3</div><div class="line">./configure --prefix=/usr/<span class="built_in">local</span>/node-v8.9.3</div><div class="line">make &amp;&amp; make install</div><div class="line">ln <span class="_">-s</span> /usr/<span class="built_in">local</span>/node-v8.9.3/bin/npm /usr/bin/</div><div class="line">ln <span class="_">-s</span> /usr/<span class="built_in">local</span>/node-v8.9.3/bin/node /usr/bin/</div><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/ &amp;&amp; git <span class="built_in">clone</span> https://github.com/mobz/elasticsearch-head.git</div><div class="line">mkdir -p /tmp/phantomjs/ &amp;&amp; wget https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-linux-x86_64.tar.bz2 -O /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2</div><div class="line"><span class="built_in">cd</span> elasticsearch-head/ &amp;&amp; npm install</div><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/elasticsearch-head/ &amp;&amp; npm install grunt --save</div><div class="line">npm install grunt-contrib-clean --registry=https://registry.npm.taobao.org</div><div class="line">npm install grunt-contrib-concat --registry=https://registry.npm.taobao.org</div><div class="line">npm install grunt-contrib-watch --registry=https://registry.npm.taobao.org</div><div class="line">npm install grunt-contrib-connect --registry=https://registry.npm.taobao.org</div><div class="line">npm install grunt-contrib-copy --registry=https://registry.npm.taobao.org</div><div class="line">npm install grunt-contrib-jasmine --registry=https://registry.npm.taobao.org</div><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/elasticsearch-head/ &amp;&amp; sed -i <span class="string">"/port: 9100/ihostname: '0.0.0.0',"</span> Gruntfile.js</div><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/elasticsearch-head/ &amp;&amp; /usr/<span class="built_in">local</span>/elasticsearch-head/node_modules/grunt/bin/grunt server &amp;</div></pre></td></tr></table></figure>
<h4 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h4><p>听说有些依赖在国内解决不了，已经考虑使用Docker<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker pull salgat/elasticsearch-head</span></div><div class="line"><span class="comment"># docker run -d --name elasticsearch-head -p9100:9100 docker.io/salgat/elasticsearch-head</span></div></pre></td></tr></table></figure></p>
<p>官方也提供了elasticsearch-head在Docker容器中使用的方法<br>Running with docker<br>for Elasticsearch 5.x: <code>docker run -p 9100:9100 mobz/elasticsearch-head:5</code><br>for Elasticsearch 2.x: <code>docker run -p 9100:9100 mobz/elasticsearch-head:2</code><br>for Elasticsearch 1.x: <code>docker run -p 9100:9100 mobz/elasticsearch-head:1</code><br>for fans of alpine there is mobz/elasticsearch-head:5-alpine<br>open <code>http://localhost:9100/</code>  </p>
<h4 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q &amp; A"></a>Q &amp; A</h4><p>如果服务器重启了，有时发现执行<figure class="highlight plain"><figcaption><span>server```报错```Fatal error: Unable to find local grunt.```，需要重新按照Question1的解决方法操作一下，也可以执行下面的脚本  </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">```bash</div><div class="line">[root@ELK ~]# cat check_es_head_grunt.sh </div><div class="line">#!/bin/bash</div><div class="line"># Auther: yfshare</div><div class="line"># Date:2016-12-29</div><div class="line">eshead_dir=&quot;/usr/local/elasticsearch-head&quot;</div><div class="line">grunt_dir=&quot;$eshead_dir/node_modules/grunt&quot;</div><div class="line">grunt_bin=&quot;$grunt_dir/bin/grunt&quot;</div><div class="line"></div><div class="line">kill -9 `ps -ef | grep -iw &apos;grunt&apos; | grep -v grep | awk &apos;&#123;print $2&#125;&apos;` &amp;&gt;/dev/null</div><div class="line">[ ! -x &quot;$grunt_bin&quot; ] &amp;&amp; chmod 755 &quot;$grunt_bin&quot;</div><div class="line">echo &apos;&apos;</div><div class="line">echo &apos;Please wait a moment.&apos;</div><div class="line">cd &quot;$eshead_dir&quot;</div><div class="line">npm install grunt --save-dev &amp;&gt; /dev/null</div><div class="line">cd &quot;$eshead_dir&quot;</div><div class="line">&quot;$grunt_bin&quot; server &amp;</div><div class="line">[ $? -eq 0 ] &amp;&amp; echo &apos;start ok.&apos;</div><div class="line">[root@ELK ~]#</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@ELK ~]<span class="comment"># sh check_es_head_grunt.sh </span></div><div class="line"></div><div class="line">Please <span class="built_in">wait</span> a moment.</div><div class="line">start ok.</div><div class="line">Running <span class="string">"connect:server"</span> (connect) task</div><div class="line">Waiting forever...</div><div class="line">Started connect web server on http://localhost:9100</div><div class="line"></div><div class="line">[root@ELK ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>Question1：如果报下面的错误：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@ELK ~]<span class="comment"># /usr/local/elasticsearch-head/node_modules/grunt/bin/grunt server  </span></div><div class="line">grunt-cli: The grunt <span class="built_in">command</span> line interface (v1.2.0)  </div><div class="line">Fatal error: Unable to find <span class="built_in">local</span> grunt.</div><div class="line">If you<span class="string">'re seeing this message, grunt hasn'</span>t been installed locally to</div><div class="line">your project. For more information about installing and configuring grunt,</div><div class="line">please see the Getting Started guide:  </div><div class="line">http://gruntjs.com/getting-started  </div><div class="line">[root@ELK ~]<span class="comment">#  </span></div><div class="line"></div><div class="line">Answer：  </div><div class="line">[root@ELK ~]<span class="comment"># cd /usr/local/elasticsearch-head/  </span></div><div class="line">[root@ELK elasticsearch-head]<span class="comment"># npm install grunt --save-dev  </span></div><div class="line">再执行/usr/<span class="built_in">local</span>/elasticsearch-head/node_modules/grunt/bin/grunt server就OK了</div></pre></td></tr></table></figure></p>
<p>Question2：<br>之前修改ElasticSearch 5.1的network.host的IP时，不管修改成什么(注释network.host除外)，重启均报错，开始以为是不能绑定IP地址。之前有注意到日志里的报错的<figure class="highlight plain"><figcaption><span>checks failed. max number of threads [1024] for user [elasticsearch] is too low, increase to at least [2048]```因为注释了network.host后ElasticSearch能起来，所以没意识到是它的问题  </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">```bash</div><div class="line">#ElasticSearch日志报错</div><div class="line">[2016-12-28T16:57:23,190][INFO ][o.e.n.Node               ] [es-node01] starting ...</div><div class="line">[2016-12-28T16:57:24,616][INFO ][o.e.t.TransportService   ] [es-node01] publish_address &#123;192.168.31.100:9300&#125;, bound_addresses &#123;192.168.31.100:9300&#125;</div><div class="line">[2016-12-28T16:57:24,686][INFO ][o.e.b.BootstrapCheck     ] [es-node01] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks</div><div class="line">[2016-12-28T16:57:24,708][ERROR][o.e.b.Bootstrap          ] [es-node01] node validation exception</div><div class="line">bootstrap checks failed</div><div class="line">max number of threads [1024] for user [elasticsearch] is too low, increase to at least [2048]</div><div class="line">[2016-12-28T16:57:24,739][INFO ][o.e.n.Node               ] [es-node01] stopping ...</div><div class="line">[2016-12-28T16:57:25,275][INFO ][o.e.n.Node               ] [es-node01] stopped</div><div class="line">[2016-12-28T16:57:25,277][INFO ][o.e.n.Node               ] [es-node01] closing ...</div><div class="line">[2016-12-28T16:57:25,500][INFO ][o.e.n.Node               ] [es-node01] closed</div></pre></td></tr></table></figure></p>
<p>Answer：修改<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">关于ElasticSearch5.1的network.host设置  </div><div class="line">参考：https://www.elastic.co/guide/en/elasticsearch/reference/5.1/modules-network.html#common-network-settings</div><div class="line">```bash</div><div class="line">[root@ELK ~]# grep -v ^# /etc/security/limits.conf | grep -v ^$</div><div class="line">elasticsearch	soft	nproc	2048</div><div class="line">elasticsearch	hard	nproc	4096</div><div class="line">[root@ELK ~]#</div></pre></td></tr></table></figure></p>
<p>Question3：<br>如果执行<code>/usr/local/elasticsearch-head/node_modules/grunt/bin/grunt server</code>报下面的错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[root@ELK-test ~]<span class="comment"># /usr/local/elasticsearch-head/node_modules/grunt/bin/grunt server</span></div><div class="line">grunt-cli: The grunt <span class="built_in">command</span> line interface (v1.2.0)</div><div class="line"></div><div class="line">Fatal error: Unable to find <span class="built_in">local</span> grunt.</div><div class="line"></div><div class="line">If you<span class="string">'re seeing this message, grunt hasn'</span>t been installed locally to</div><div class="line">your project. For more information about installing and configuring grunt,</div><div class="line">please see the Getting Started guide:</div><div class="line"></div><div class="line">http://gruntjs.com/getting-started</div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div><div class="line"></div><div class="line">Answer：</div><div class="line"><span class="comment">#进入elasticsearch-head安装目录即可，因为在别的地方找不到Gruntfile.js文件</span></div><div class="line">[root@ELK-test ~]<span class="comment"># cd /usr/local/elasticsearch-head/</span></div></pre></td></tr></table></figure></p>
<p>Question4：<br>如果执行<code>/usr/local/elasticsearch-head/node_modules/grunt/bin/grunt server</code>报下面的错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@ELK-test elasticsearch-head]<span class="comment"># /usr/local/elasticsearch-head/node_modules/grunt/bin/grunt server</span></div><div class="line">&gt;&gt; Local Npm module <span class="string">"grunt-contrib-clean"</span> not found. Is it installed?</div><div class="line">&gt;&gt; Local Npm module <span class="string">"grunt-contrib-concat"</span> not found. Is it installed?</div><div class="line">&gt;&gt; Local Npm module <span class="string">"grunt-contrib-watch"</span> not found. Is it installed?</div><div class="line">&gt;&gt; Local Npm module <span class="string">"grunt-contrib-connect"</span> not found. Is it installed?</div><div class="line">&gt;&gt; Local Npm module <span class="string">"grunt-contrib-copy"</span> not found. Is it installed?</div><div class="line">&gt;&gt; Local Npm module <span class="string">"grunt-contrib-jasmine"</span> not found. Is it installed?</div><div class="line">Warning: Task <span class="string">"connect:server"</span> not found. Use --force to continue.</div><div class="line"></div><div class="line">Aborted due to warnings.</div><div class="line">[root@ELK-test elasticsearch-head]<span class="comment">#</span></div><div class="line"></div><div class="line">Answer：</div><div class="line">出现以下提示，为Gruntfile.js引用的，缺少以下包</div><div class="line">[root@ELK-test elasticsearch-head]<span class="comment"># npm install grunt-contrib-clean --registry=https://registry.npm.taobao.org</span></div><div class="line">[root@ELK-test elasticsearch-head]<span class="comment"># npm install grunt-contrib-concat --registry=https://registry.npm.taobao.org</span></div><div class="line">[root@ELK-test elasticsearch-head]<span class="comment"># npm install grunt-contrib-watch --registry=https://registry.npm.taobao.org</span></div><div class="line">[root@ELK-test elasticsearch-head]<span class="comment"># npm install grunt-contrib-connect --registry=https://registry.npm.taobao.org</span></div><div class="line">[root@ELK-test elasticsearch-head]<span class="comment"># npm install grunt-contrib-copy --registry=https://registry.npm.taobao.org</span></div><div class="line">[root@ELK-test elasticsearch-head]<span class="comment"># npm install grunt-contrib-jasmine --registry=https://registry.npm.taobao.org</span></div><div class="line"></div><div class="line">[root@ELK-test elasticsearch-head]<span class="comment"># /usr/local/elasticsearch-head/node_modules/grunt/bin/grunt server &amp;</span></div><div class="line">[1] 22877</div><div class="line">[root@ELK-test elasticsearch-head]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>Question5：<br>如果在执行<code>npm install</code>时报如下错误  </p>
<p>Answer：可以先下载其所需的文件再执行<code>npm install</code>安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p /tmp/phantomjs/</div><div class="line">wget https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-linux-x86_64.tar.bz2 -O /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#npm install</span></div><div class="line">npm WARN deprecated coffee-script@1.10.0: CoffeeScript on NPM has moved to <span class="string">"coffeescript"</span> (no hyphen)</div><div class="line">npm WARN deprecated http2@3.3.7: Use the built-in module <span class="keyword">in</span> node 9.0.0 or newer, instead</div><div class="line"></div><div class="line">&gt; phantomjs-prebuilt@2.1.16 install /usr/<span class="built_in">local</span>/elasticsearch-head/node_modules/phantomjs-prebuilt</div><div class="line">&gt; node install.js</div><div class="line"></div><div class="line">PhantomJS not found on PATH</div><div class="line">Downloading https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-linux-x86_64.tar.bz2</div><div class="line">Saving to /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2</div><div class="line">Receiving...</div><div class="line"></div><div class="line">Error making request.</div><div class="line">Error: connect ETIMEDOUT 52.216.82.152:443</div><div class="line">    at Object._errnoException (util.js:1024:11)</div><div class="line">    at _exceptionWithHostPort (util.js:1046:20)</div><div class="line">    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1182:14)</div><div class="line"></div><div class="line">Please report this full <span class="built_in">log</span> at https://github.com/Medium/phantomjs</div><div class="line">npm WARN elasticsearch-head@0.0.0 license should be a valid SPDX license expression</div><div class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3 (node_modules/fsevents):</div><div class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.1.3: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"linux"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</div><div class="line"></div><div class="line">npm ERR! code ELIFECYCLE</div><div class="line">npm ERR! errno 1</div><div class="line">npm ERR! phantomjs-prebuilt@2.1.16 install: `node install.js`</div><div class="line">npm ERR! Exit status 1</div><div class="line">npm ERR! </div><div class="line">npm ERR! Failed at the phantomjs-prebuilt@2.1.16 install script.</div><div class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</div><div class="line"></div><div class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</div><div class="line">npm ERR!     /root/.npm/_logs/2017-12-16T02_18_46_188Z-debug.log</div></pre></td></tr></table></figure>
<p>注：集群配置完成后，需要把Logstash里的ElasticSearch的地址修改正确<br>即：Logstash配置文件的output关于ElasticSearch的配置<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">output</span> &#123;</div><div class="line">        elasticsearch &#123;</div><div class="line">                <span class="attr">hosts</span> =&gt; [<span class="string">"192.168.31.100:9200"</span>]</div><div class="line">                <span class="attr">index</span> =&gt; <span class="string">"logstash-nginx-%&#123;+YYYY.MM.dd&#125;"</span></div><div class="line">        &#125;</div></pre></td></tr></table></figure></p>
<h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><p><img src="http://note.youdao.com/yws/api/personal/file/6034AE21E6DD472EA31F19BACF3BB39C?method=download&amp;shareKey=c1e28da86983aaae6e3d6961ab74b314" alt="image"><br><img src="http://note.youdao.com/yws/api/personal/file/0B60DD50A74C4E5D99F9BF97C0FB2FD1?method=download&amp;shareKey=f5bdfc6cc8fa4cbac65d30607cd1463e" alt="image"><br><img src="http://note.youdao.com/yws/api/personal/file/03465D12C20840FDB100ACD61C2AB152?method=download&amp;shareKey=49f66cf16d4ed5a8c37ff7e91d9558c7" alt="image"><br><img src="http://note.youdao.com/yws/api/personal/file/3EB4A9FD353C46A5BD1C99AB94D2B5A2?method=download&amp;shareKey=201db35f0c4ca938b4e844ca7d964b7a" alt="image"><br><img src="http://note.youdao.com/yws/api/personal/file/66D98E66A0EA48DC8E763C15E8A90D77?method=download&amp;shareKey=9dbeb81b55fa0717d16179e04fe8b32d" alt="image"><br><img src="http://note.youdao.com/yws/api/personal/file/C675C13D627D4035967A809951E48D73?method=download&amp;shareKey=610e0f92a9d468b21df21f3f12b03b93" alt="image">  </p>
<p>2台elasticsearch，显示一台master和一台slave才是正常的<br><img src="http://note.youdao.com/yws/api/personal/file/C0E9213A27E1487D8D8B2C1E2A625861?method=download&amp;shareKey=cb8459b1788cd846bf9f7cd73196dcb2" alt="es_cluster">  </p>
<p>本文参考：<a href="https://www.chinasa.net/archives/325.html" target="_blank" rel="external">https://www.chinasa.net/archives/325.html</a><br>　　　　　<a href="http://zerosre.com/2016/12/20/k8s日志管理-三/" target="_blank" rel="external">http://zerosre.com/2016/12/20/k8s日志管理-三/</a><br>　　　　　<a href="http://hnr520.blog.51cto.com/4484939/1867033" target="_blank" rel="external">http://hnr520.blog.51cto.com/4484939/1867033</a><br>nodejs下载地址：<a href="https://nodejs.org/en/blog/release/v0.12.16/" target="_blank" rel="external">https://nodejs.org/en/blog/release/v0.12.16/</a>  </p>
<p>附件：<br><a href="http://note.youdao.com/yws/api/personal/file/9DF4FD46C39F4D198FA28E31175946FF?method=download&amp;shareKey=fb14484fc213e29de7d11fb267bd073b" target="_blank" rel="external">yum.repo</a><br><a href="http://note.youdao.com/yws/api/personal/file/7394DDCE364F4C47A2059C3B977A0173?method=download&amp;shareKey=33a242bfa78c38aa6e2eec84967633cc" target="_blank" rel="external">elasticsearch-head.zip</a><br><a href="http://note.youdao.com/yws/api/personal/file/E85D6B24C1944F5BB7FF562141E542C2?method=download&amp;shareKey=4b9be8a44632f563f29c6aa9e4eee9db" target="_blank" rel="external">node-v0.12.16.tar.gz</a><br><a href="http://note.youdao.com/yws/api/personal/file/10CB6262193249F8ABB874BDCA4AF1F8?method=download&amp;shareKey=19b78be82de892d54a42a473a212cee5" target="_blank" rel="external">phantomjs-2.1.1-linux-x86_64.tar.bz2</a><br><a href="http://note.youdao.com/yws/api/personal/file/46615981B34F4DCEB51313876E3F481A?method=download&amp;shareKey=bed7ee555658949beaae23dfe6e34b33" target="_blank" rel="external">check_es_head_grunt.sh</a>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/12/04/ElasticSearch集群-基础/">http://www.yfshare.vip/2017/12/04/ElasticSearch集群-基础/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里分享的是ELK集群基础安装文档，&lt;a href=&quot;http://www.yfshare.vip/2017/11/22/ELK%E5%AE%89%E8%A3%85-%E5%9F%BA%E7%A1%80/&quot;&gt;这里是 ELK安装基础&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="ELK" scheme="http://www.yfshare.vip/tags/ELK/"/>
    
      <category term="Cluster" scheme="http://www.yfshare.vip/tags/Cluster/"/>
    
      <category term="Elasticsearch-Head" scheme="http://www.yfshare.vip/tags/Elasticsearch-Head/"/>
    
  </entry>
  
  <entry>
    <title>timelion请求语法</title>
    <link href="http://www.yfshare.vip/2017/12/04/timelion%E8%AF%B7%E6%B1%82%E8%AF%AD%E6%B3%95/"/>
    <id>http://www.yfshare.vip/2017/12/04/timelion请求语法/</id>
    <published>2017-12-04T15:33:39.000Z</published>
    <updated>2017-12-04T15:34:41.540Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>ES2.0 开始提供了一个崭新的 pipeline aggregation 特性，但是 Kibana 似乎并没有立刻跟进这方面的意思，相反，Elastic 公司推出了另一个实验室产品：Timelion。<br><a id="more"></a><br>timelion 的用法在官博里已经有介绍。尤其是最近两篇如何用 timelion 实现异常告警的文章，更是从 ES 的 pipeline aggregation 细节和场景一路讲到 timelion 具体操作，我这里几乎没有再重新讲一遍 timelion 操作入门的必要了。不过，官方却一直没有列出来 timelion 支持的请求语法的文档，而是在页面上通过点击图标的方式下拉帮助。  </p>
<h5 id="可视化效果类"><a href="#可视化效果类" class="headerlink" title="可视化效果类"></a>可视化效果类</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.bars(<span class="variable">$width</span>): 用柱状图展示数组</div><div class="line">.lines(<span class="variable">$width</span>, <span class="variable">$fill</span>, <span class="variable">$show</span>, <span class="variable">$steps</span>): 用折线图展示数组</div><div class="line">.points(): 用散点图展示数组</div><div class="line">.color(<span class="string">"#c6c6c6"</span>): 改变颜色</div><div class="line">.hide(): 隐藏该数组</div><div class="line">.label(<span class="string">"change from %s"</span>): 标签</div><div class="line">.legend(<span class="variable">$position</span>, <span class="variable">$column</span>): 图例位置</div><div class="line">.yaxis(<span class="variable">$yaxis_number</span>, <span class="variable">$min</span>, <span class="variable">$max</span>, <span class="variable">$position</span>): 设置 Y 轴属性，.yaxis(2) 表示第二根 Y 轴</div></pre></td></tr></table></figure>
<h5 id="数据运算类"><a href="#数据运算类" class="headerlink" title="数据运算类"></a>数据运算类</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">.abs(): 对整个数组元素求绝对值</div><div class="line">.precision(<span class="variable">$number</span>): 浮点数精度</div><div class="line">.testcast(<span class="variable">$count</span>, <span class="variable">$alpha</span>, <span class="variable">$beta</span>, <span class="variable">$gamma</span>): holt-winters 预测</div><div class="line">.cusum(<span class="variable">$base</span>): 数组元素之和，再加上 <span class="variable">$base</span></div><div class="line">.derivative(): 对数组求导数</div><div class="line">.divide(<span class="variable">$divisor</span>): 数组元素除法</div><div class="line">.multiply(<span class="variable">$multiplier</span>): 数组元素乘法</div><div class="line">.subtract(<span class="variable">$term</span>): 数组元素减法</div><div class="line">.sum(<span class="variable">$term</span>): 数组元素加法</div><div class="line">.add(): 同 .sum()</div><div class="line">.plus(): 同 .sum()</div><div class="line">.first(): 返回第一个元素</div><div class="line">.movingaverage(<span class="variable">$window</span>): 用指定的窗口大小计算移动平均值</div><div class="line">.mvavg(): .movingaverage() 的简写</div><div class="line">.movingstd(<span class="variable">$window</span>): 用指定的窗口大小计算移动标准差</div><div class="line">.mvstd(): .movingstd() 的简写</div></pre></td></tr></table></figure>
<h5 id="数据源设定类"><a href="#数据源设定类" class="headerlink" title="数据源设定类"></a>数据源设定类</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.elasticsearch(): 从 ES 读取数据</div><div class="line">.es(q=<span class="string">"querystring"</span>, metric=<span class="string">"cardinality:uid"</span>, index=<span class="string">"logstash-*"</span>, offset=<span class="string">"-1d"</span>): .elasticsearch() 的简写</div><div class="line">.graphite(metric=<span class="string">"path.to.*.data"</span>, offset=<span class="string">"-1d"</span>): 从 graphite 读取数据</div><div class="line">.quandl(): 从 quandl.com 读取 quandl 码</div><div class="line">.worldbank_indicators(): 从 worldbank.org 读取国家数据</div><div class="line">.wbi(): .worldbank_indicators() 的简写</div><div class="line">.worldbank(): 从 worldbank.org 读取数据</div><div class="line">.wb(): .worldbanck() 的简写</div></pre></td></tr></table></figure>
<p>参考：<a href="https://elasticsearch.cn/article/24" target="_blank" rel="external">https://elasticsearch.cn/article/24</a><br>更多参考：<a href="https://elasticsearch.cn/article/" target="_blank" rel="external">https://elasticsearch.cn/article/</a>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/12/04/timelion请求语法/">http://www.yfshare.vip/2017/12/04/timelion请求语法/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ES2.0 开始提供了一个崭新的 pipeline aggregation 特性，但是 Kibana 似乎并没有立刻跟进这方面的意思，相反，Elastic 公司推出了另一个实验室产品：Timelion。&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="ELK" scheme="http://www.yfshare.vip/tags/ELK/"/>
    
      <category term="Kibana" scheme="http://www.yfshare.vip/tags/Kibana/"/>
    
  </entry>
  
  <entry>
    <title>Logstash监控</title>
    <link href="http://www.yfshare.vip/2017/12/04/Logstash%E7%9B%91%E6%8E%A7/"/>
    <id>http://www.yfshare.vip/2017/12/04/Logstash监控/</id>
    <published>2017-12-04T15:31:09.000Z</published>
    <updated>2017-12-04T15:32:39.987Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p> Logstash监控指标<br> <a id="more"></a><br>环境：Logstash 5.6.1  </p>
<h4 id="通过jvm监控"><a href="#通过jvm监控" class="headerlink" title="通过jvm监控"></a>通过jvm监控</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">[root@ELK-test ~]<span class="comment"># curl -s localhost:9600/_node/stats/jvm?pretty=true</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"host"</span> : <span class="string">"ELK-test"</span>,</div><div class="line">  <span class="string">"version"</span> : <span class="string">"5.6.1"</span>,</div><div class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</div><div class="line">  <span class="string">"id"</span> : <span class="string">"6eaac40c-2e2a-4e04-8fce-10e938c9dc0d"</span>,</div><div class="line">  <span class="string">"name"</span> : <span class="string">"ELK-test"</span>,</div><div class="line">  <span class="string">"jvm"</span> : &#123;</div><div class="line">    <span class="string">"threads"</span> : &#123;</div><div class="line">      <span class="string">"count"</span> : 67,</div><div class="line">      <span class="string">"peak_count"</span> : 68</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"mem"</span> : &#123;</div><div class="line">      <span class="string">"heap_used_percent"</span> : 17,</div><div class="line">      <span class="string">"heap_committed_in_bytes"</span> : 340779008,</div><div class="line">      <span class="string">"heap_max_in_bytes"</span> : 1056309248,</div><div class="line">      <span class="string">"heap_used_in_bytes"</span> : 181136632,</div><div class="line">      <span class="string">"non_heap_used_in_bytes"</span> : 112857424,</div><div class="line">      <span class="string">"non_heap_committed_in_bytes"</span> : 120733696,</div><div class="line">      <span class="string">"pools"</span> : &#123;</div><div class="line">        <span class="string">"survivor"</span> : &#123;</div><div class="line">          <span class="string">"peak_used_in_bytes"</span> : 17432576,</div><div class="line">          <span class="string">"used_in_bytes"</span> : 5437952,</div><div class="line">          <span class="string">"peak_max_in_bytes"</span> : 17432576,</div><div class="line">          <span class="string">"max_in_bytes"</span> : 17432576,</div><div class="line">          <span class="string">"committed_in_bytes"</span> : 17432576</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"old"</span> : &#123;</div><div class="line">          <span class="string">"peak_used_in_bytes"</span> : 130825496,</div><div class="line">          <span class="string">"used_in_bytes"</span> : 130825496,</div><div class="line">          <span class="string">"peak_max_in_bytes"</span> : 899284992,</div><div class="line">          <span class="string">"max_in_bytes"</span> : 899284992,</div><div class="line">          <span class="string">"committed_in_bytes"</span> : 183754752</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"young"</span> : &#123;</div><div class="line">          <span class="string">"peak_used_in_bytes"</span> : 139591680,</div><div class="line">          <span class="string">"used_in_bytes"</span> : 44873184,</div><div class="line">          <span class="string">"peak_max_in_bytes"</span> : 139591680,</div><div class="line">          <span class="string">"max_in_bytes"</span> : 139591680,</div><div class="line">          <span class="string">"committed_in_bytes"</span> : 139591680</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"gc"</span> : &#123;</div><div class="line">      <span class="string">"collectors"</span> : &#123;</div><div class="line">        <span class="string">"old"</span> : &#123;</div><div class="line">          <span class="string">"collection_time_in_millis"</span> : 375,</div><div class="line">          <span class="string">"collection_count"</span> : 5</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"young"</span> : &#123;</div><div class="line">          <span class="string">"collection_time_in_millis"</span> : 44399,</div><div class="line">          <span class="string">"collection_count"</span> : 3181</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"uptime_in_millis"</span> : 186066906</div><div class="line">  &#125;</div><div class="line">&#125;[root@ELK-test ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="通过process监控"><a href="#通过process监控" class="headerlink" title="通过process监控"></a>通过process监控</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">[root@ELK-test ~]<span class="comment"># curl -s localhost:9600/_node/stats/process?pretty=true</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"host"</span> : <span class="string">"ELK-test"</span>,</div><div class="line">  <span class="string">"version"</span> : <span class="string">"5.6.1"</span>,</div><div class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</div><div class="line">  <span class="string">"id"</span> : <span class="string">"6eaac40c-2e2a-4e04-8fce-10e938c9dc0d"</span>,</div><div class="line">  <span class="string">"name"</span> : <span class="string">"ELK-test"</span>,</div><div class="line">  <span class="string">"process"</span> : &#123;</div><div class="line">    <span class="string">"open_file_descriptors"</span> : 202,</div><div class="line">    <span class="string">"peak_open_file_descriptors"</span> : 202,</div><div class="line">    <span class="string">"max_file_descriptors"</span> : 4096,</div><div class="line">    <span class="string">"mem"</span> : &#123;</div><div class="line">      <span class="string">"total_virtual_in_bytes"</span> : 3939852288</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"cpu"</span> : &#123;</div><div class="line">      <span class="string">"total_in_millis"</span> : 3338270,</div><div class="line">      <span class="string">"percent"</span> : 0,</div><div class="line">      <span class="string">"load_average"</span> : &#123;</div><div class="line">        <span class="string">"1m"</span> : 0.54,</div><div class="line">        <span class="string">"5m"</span> : 0.32,</div><div class="line">        <span class="string">"15m"</span> : 0.31</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;[root@ELK-test ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="通过pipeline监控"><a href="#通过pipeline监控" class="headerlink" title="通过pipeline监控"></a>通过pipeline监控</h4><p>这里可以看到每个插件的日志处理情况（数量，耗时等），如果使用了grok插件，还显示正则匹配失败的数量、每个字段匹配的正则表达式个数等很有用的排障和性能调优信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div></pre></td><td class="code"><pre><div class="line">[root@ELK-test ~]<span class="comment"># curl -s localhost:9600/_node/stats/pipeline?pretty=true</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"host"</span> : <span class="string">"ELK-test"</span>,</div><div class="line">  <span class="string">"version"</span> : <span class="string">"5.6.1"</span>,</div><div class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</div><div class="line">  <span class="string">"id"</span> : <span class="string">"6eaac40c-2e2a-4e04-8fce-10e938c9dc0d"</span>,</div><div class="line">  <span class="string">"name"</span> : <span class="string">"ELK-test"</span>,</div><div class="line">  <span class="string">"pipeline"</span> : &#123;</div><div class="line">    <span class="string">"events"</span> : &#123;</div><div class="line">      <span class="string">"duration_in_millis"</span> : 3671575,</div><div class="line">      <span class="string">"in"</span> : 1621595,</div><div class="line">      <span class="string">"out"</span> : 1621595,</div><div class="line">      <span class="string">"filtered"</span> : 1621595,</div><div class="line">      <span class="string">"queue_push_duration_in_millis"</span> : 295900</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : &#123;</div><div class="line">      <span class="string">"inputs"</span> : [ &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-2"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"out"</span> : 1621595,</div><div class="line">          <span class="string">"queue_push_duration_in_millis"</span> : 295900</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"current_connections"</span> : 1,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"beats"</span>,</div><div class="line">        <span class="string">"peak_connections"</span> : 1</div><div class="line">      &#125; ],</div><div class="line">      <span class="string">"filters"</span> : [ ],</div><div class="line">      <span class="string">"outputs"</span> : [ &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-16"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 307125,</div><div class="line">          <span class="string">"in"</span> : 411982,</div><div class="line">          <span class="string">"out"</span> : 411982</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-37"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 0,</div><div class="line">          <span class="string">"in"</span> : 0,</div><div class="line">          <span class="string">"out"</span> : 0</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-28"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 71536,</div><div class="line">          <span class="string">"in"</span> : 11323,</div><div class="line">          <span class="string">"out"</span> : 11323</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-30"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 8323,</div><div class="line">          <span class="string">"in"</span> : 1200,</div><div class="line">          <span class="string">"out"</span> : 1200</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-33"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 0,</div><div class="line">          <span class="string">"in"</span> : 0,</div><div class="line">          <span class="string">"out"</span> : 0</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-40"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 3373,</div><div class="line">          <span class="string">"in"</span> : 154,</div><div class="line">          <span class="string">"out"</span> : 154</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-17"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 24148,</div><div class="line">          <span class="string">"in"</span> : 3444,</div><div class="line">          <span class="string">"out"</span> : 3444</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-31"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 0,</div><div class="line">          <span class="string">"in"</span> : 0,</div><div class="line">          <span class="string">"out"</span> : 0</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-3"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 12911,</div><div class="line">          <span class="string">"in"</span> : 1007,</div><div class="line">          <span class="string">"out"</span> : 1007</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-32"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 3564,</div><div class="line">          <span class="string">"in"</span> : 285,</div><div class="line">          <span class="string">"out"</span> : 285</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-25"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 717356,</div><div class="line">          <span class="string">"in"</span> : 407063,</div><div class="line">          <span class="string">"out"</span> : 407063</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-23"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 29538,</div><div class="line">          <span class="string">"in"</span> : 2054,</div><div class="line">          <span class="string">"out"</span> : 2054</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-11"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 0,</div><div class="line">          <span class="string">"in"</span> : 0,</div><div class="line">          <span class="string">"out"</span> : 0</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-12"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 1805,</div><div class="line">          <span class="string">"in"</span> : 104,</div><div class="line">          <span class="string">"out"</span> : 104</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-10"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 4454,</div><div class="line">          <span class="string">"in"</span> : 838,</div><div class="line">          <span class="string">"out"</span> : 838</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-13"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 0,</div><div class="line">          <span class="string">"in"</span> : 0,</div><div class="line">          <span class="string">"out"</span> : 0</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-20"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 35142,</div><div class="line">          <span class="string">"in"</span> : 4872,</div><div class="line">          <span class="string">"out"</span> : 4872</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-22"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 1334,</div><div class="line">          <span class="string">"in"</span> : 107,</div><div class="line">          <span class="string">"out"</span> : 107</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-21"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 0,</div><div class="line">          <span class="string">"in"</span> : 0,</div><div class="line">          <span class="string">"out"</span> : 0</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-29"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 4538,</div><div class="line">          <span class="string">"in"</span> : 429,</div><div class="line">          <span class="string">"out"</span> : 429</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-24"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 73579,</div><div class="line">          <span class="string">"in"</span> : 10990,</div><div class="line">          <span class="string">"out"</span> : 10990</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-39"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 0,</div><div class="line">          <span class="string">"in"</span> : 0,</div><div class="line">          <span class="string">"out"</span> : 0</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-15"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 34938,</div><div class="line">          <span class="string">"in"</span> : 3095,</div><div class="line">          <span class="string">"out"</span> : 3095</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-9"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 0,</div><div class="line">          <span class="string">"in"</span> : 0,</div><div class="line">          <span class="string">"out"</span> : 0</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-26"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 793240,</div><div class="line">          <span class="string">"in"</span> : 424502,</div><div class="line">          <span class="string">"out"</span> : 424502</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-18"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 32408,</div><div class="line">          <span class="string">"in"</span> : 5051,</div><div class="line">          <span class="string">"out"</span> : 5051</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-36"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 6709,</div><div class="line">          <span class="string">"in"</span> : 2142,</div><div class="line">          <span class="string">"out"</span> : 2142</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-7"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 27306,</div><div class="line">          <span class="string">"in"</span> : 1791,</div><div class="line">          <span class="string">"out"</span> : 1791</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-35"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 2960,</div><div class="line">          <span class="string">"in"</span> : 24,</div><div class="line">          <span class="string">"out"</span> : 24</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-5"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 867,</div><div class="line">          <span class="string">"in"</span> : 1,</div><div class="line">          <span class="string">"out"</span> : 1</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-4"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 19048,</div><div class="line">          <span class="string">"in"</span> : 3088,</div><div class="line">          <span class="string">"out"</span> : 3088</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-8"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 340928,</div><div class="line">          <span class="string">"in"</span> : 306042,</div><div class="line">          <span class="string">"out"</span> : 306042</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-19"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 26274,</div><div class="line">          <span class="string">"in"</span> : 3311,</div><div class="line">          <span class="string">"out"</span> : 3311</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-27"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 512,</div><div class="line">          <span class="string">"in"</span> : 3,</div><div class="line">          <span class="string">"out"</span> : 3</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-14"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 1477,</div><div class="line">          <span class="string">"in"</span> : 329,</div><div class="line">          <span class="string">"out"</span> : 329</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-38"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 6962,</div><div class="line">          <span class="string">"in"</span> : 3773,</div><div class="line">          <span class="string">"out"</span> : 3773</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-6"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 2092,</div><div class="line">          <span class="string">"in"</span> : 989,</div><div class="line">          <span class="string">"out"</span> : 989</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125;, &#123;</div><div class="line">        <span class="string">"id"</span> : <span class="string">"87303f752c45ebe8feaa4dafabb419ceb4188803-34"</span>,</div><div class="line">        <span class="string">"events"</span> : &#123;</div><div class="line">          <span class="string">"duration_in_millis"</span> : 8653,</div><div class="line">          <span class="string">"in"</span> : 1152,</div><div class="line">          <span class="string">"out"</span> : 1152</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"elasticsearch"</span></div><div class="line">      &#125; ]</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"reloads"</span> : &#123;</div><div class="line">      <span class="string">"last_error"</span> : null,</div><div class="line">      <span class="string">"successes"</span> : 0,</div><div class="line">      <span class="string">"last_success_timestamp"</span> : null,</div><div class="line">      <span class="string">"last_failure_timestamp"</span> : null,</div><div class="line">      <span class="string">"failures"</span> : 0</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"queue"</span> : &#123;</div><div class="line">      <span class="string">"type"</span> : <span class="string">"memory"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"id"</span> : <span class="string">"main"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/12/04/Logstash监控/">http://www.yfshare.vip/2017/12/04/Logstash监控/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; Logstash监控指标&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="ELK" scheme="http://www.yfshare.vip/tags/ELK/"/>
    
      <category term="Logstash" scheme="http://www.yfshare.vip/tags/Logstash/"/>
    
  </entry>
  
  <entry>
    <title>Grok正则语法</title>
    <link href="http://www.yfshare.vip/2017/11/22/Grok%E6%AD%A3%E5%88%99%E8%AF%AD%E6%B3%95/"/>
    <id>http://www.yfshare.vip/2017/11/22/Grok正则语法/</id>
    <published>2017-11-22T14:40:41.000Z</published>
    <updated>2017-11-22T14:43:16.444Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>官方提供的grok表达式：<a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns" target="_blank" rel="external">https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns</a><br>grok在线调试：<a href="https://grokdebug.herokuapp.com/" target="_blank" rel="external">https://grokdebug.herokuapp.com/</a><br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line">USERNAME [a-zA-Z0-9._-]+</div><div class="line">USER %&#123;USERNAME&#125;</div><div class="line">EMAILLOCALPART [a-zA-Z][a-zA-Z0-9_.+-=:]+</div><div class="line">EMAILADDRESS %&#123;EMAILLOCALPART&#125;@%&#123;HOSTNAME&#125;</div><div class="line">INT (?:[+-]?(?:[0-9]+))</div><div class="line">BASE10NUM (?&lt;![0-9.+-])(?&gt;[+-]?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+)))</div><div class="line">NUMBER (?:%&#123;BASE10NUM&#125;)</div><div class="line">BASE16NUM (?&lt;![0-9A-Fa<span class="_">-f</span>])(?:[+-]?(?:0x)?(?:[0-9A-Fa<span class="_">-f</span>]+))</div><div class="line">BASE16FLOAT \b(?&lt;![0-9A-Fa-f.])(?:[+-]?(?:0x)?(?:(?:[0-9A-Fa<span class="_">-f</span>]+(?:\.[0-9A-Fa<span class="_">-f</span>]*)?)|(?:\.[0-9A-Fa<span class="_">-f</span>]+)))\b</div><div class="line"></div><div class="line">POSINT \b(?:[1-9][0-9]*)\b</div><div class="line">NONNEGINT \b(?:[0-9]+)\b</div><div class="line">WORD \b\w+\b</div><div class="line">NOTSPACE \S+</div><div class="line">SPACE \s*</div><div class="line">DATA .*?</div><div class="line">GREEDYDATA .*</div><div class="line">QUOTEDSTRING (?&gt;(?&lt;!\\)(?&gt;<span class="string">"(?&gt;\\.|[^\\"</span>]+)+<span class="string">"|"</span><span class="string">"|(?&gt;'(?&gt;\\.|[^\\']+)+')|''|(?&gt;`(?&gt;\\.|[^\\`]+)+`)|``))</span></div><div class="line">UUID [A-Fa-f0-9]&#123;8&#125;-(?:[A-Fa-f0-9]&#123;4&#125;-)&#123;3&#125;[A-Fa-f0-9]&#123;12&#125;</div><div class="line"># URN, allowing use of RFC 2141 section 2.3 reserved characters</div><div class="line">URN urn:[0-9A-Za-z][0-9A-Za-z-]&#123;0,31&#125;:(?:%[0-9a-fA-F]&#123;2&#125;|[0-9A-Za-z()+,.:=@;<span class="variable">$_</span>!*'/?#-])+</div><div class="line"></div><div class="line"># Networking</div><div class="line">MAC (?:%&#123;CISCOMAC&#125;|%&#123;WINDOWSMAC&#125;|%&#123;COMMONMAC&#125;)</div><div class="line">CISCOMAC (?:(?:[A-Fa-f0-9]&#123;4&#125;\.)&#123;2&#125;[A-Fa-f0-9]&#123;4&#125;)</div><div class="line">WINDOWSMAC (?:(?:[A-Fa-f0-9]&#123;2&#125;-)&#123;5&#125;[A-Fa-f0-9]&#123;2&#125;)</div><div class="line">COMMONMAC (?:(?:[A-Fa-f0-9]&#123;2&#125;:)&#123;5&#125;[A-Fa-f0-9]&#123;2&#125;)</div><div class="line">IPV6 ((([0-9A-Fa-f]&#123;1,4&#125;:)&#123;7&#125;([0-9A-Fa-f]&#123;1,4&#125;|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;6&#125;(:[0-9A-Fa-f]&#123;1,4&#125;|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;5&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,2&#125;)|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;4&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,3&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;3&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,4&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,2&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;2&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,5&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,3&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;1&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,6&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,4&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(:(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,7&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,5&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:)))(%.+)?</div><div class="line">IPV4 (?&lt;![0-9])(?:(?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5]))(?![0-9])</div><div class="line">IP (?:%&#123;IPV6&#125;|%&#123;IPV4&#125;)</div><div class="line">HOSTNAME \b(?:[0-9A-Za-z][0-9A-Za-z-]&#123;0,62&#125;)(?:\.(?:[0-9A-Za-z][0-9A-Za-z-]&#123;0,62&#125;))*(\.?|\b)</div><div class="line">IPORHOST (?:%&#123;IP&#125;|%&#123;HOSTNAME&#125;)</div><div class="line">HOSTPORT %&#123;IPORHOST&#125;:%&#123;POSINT&#125;</div><div class="line"></div><div class="line"># paths</div><div class="line">PATH (?:%&#123;UNIXPATH&#125;|%&#123;WINPATH&#125;)</div><div class="line">UNIXPATH (/([\w_%!<span class="variable">$@</span>:.,+~-]+|\\.)*)+</div><div class="line">TTY (?:/dev/(pts|tty([pq])?)(\w+)?/?(?:[0-9]+))</div><div class="line">WINPATH (?&gt;[A-Za-z]+:|\\)(?:\\[^\\?*]*)+</div><div class="line">URIPROTO [A-Za-z]+(\+[A-Za-z+]+)?</div><div class="line">URIHOST %&#123;IPORHOST&#125;(?::%&#123;POSINT:port&#125;)?</div><div class="line"># uripath comes loosely from RFC1738, but mostly from what Firefox</div><div class="line"># doesn't turn into %XX</div><div class="line">URIPATH (?:/[A-Za-z0-9$.+!*'()&#123;&#125;,~:;=@#%&amp;_\-]*)+</div><div class="line">#URIPARAM \?(?:[A-Za-z0-9]+(?:=(?:[^&amp;]*))?(?:&amp;(?:[A-Za-z0-9]+(?:=(?:[^&amp;]*))?)?)*)?</div><div class="line">URIPARAM \?[A-Za-z0-9$.+!*'|()&#123;&#125;,~@#%&amp;/=:;_?\-\[\]&lt;&gt;]*</div><div class="line">URIPATHPARAM %&#123;URIPATH&#125;(?:%&#123;URIPARAM&#125;)?</div><div class="line">URI %&#123;URIPROTO&#125;://(?:%&#123;USER&#125;(?::[^@]*)?@)?(?:%&#123;URIHOST&#125;)?(?:%&#123;URIPATHPARAM&#125;)?</div><div class="line"></div><div class="line"># Months: January, Feb, 3, 03, 12, December</div><div class="line">MONTH \b(?:[Jj]an(?:uary|uar)?|[Ff]eb(?:ruary|ruar)?|[Mm](?:a|ä)?r(?:ch|z)?|[Aa]pr(?:il)?|[Mm]a(?:y|i)?|[Jj]un(?:e|i)?|[Jj]ul(?:y)?|[Aa]ug(?:ust)?|[Ss]ep(?:tember)?|[Oo](?:c|k)?t(?:ober)?|[Nn]ov(?:ember)?|[Dd]e(?:c|z)(?:ember)?)\b</div><div class="line">MONTHNUM (?:0?[1-9]|1[0-2])</div><div class="line">MONTHNUM2 (?:0[1-9]|1[0-2])</div><div class="line">MONTHDAY (?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])</div><div class="line"></div><div class="line"># Days: Monday, Tue, Thu, etc...</div><div class="line">DAY (?:Mon(?:day)?|Tue(?:sday)?|Wed(?:nesday)?|Thu(?:rsday)?|Fri(?:day)?|Sat(?:urday)?|Sun(?:day)?)</div><div class="line"></div><div class="line"># Years?</div><div class="line">YEAR (?&gt;\d\d)&#123;1,2&#125;</div><div class="line">HOUR (?:2[0123]|[01]?[0-9])</div><div class="line">MINUTE (?:[0-5][0-9])</div><div class="line"># '60' is a leap second in most time standards and thus is valid.</div><div class="line">SECOND (?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?)</div><div class="line">TIME (?!&lt;[0-9])%&#123;HOUR&#125;:%&#123;MINUTE&#125;(?::%&#123;SECOND&#125;)(?![0-9])</div><div class="line"># datestamp is YYYY/MM/DD-HH:MM:SS.UUUU (or something like it)</div><div class="line">DATE_US %&#123;MONTHNUM&#125;[/-]%&#123;MONTHDAY&#125;[/-]%&#123;YEAR&#125;</div><div class="line">DATE_EU %&#123;MONTHDAY&#125;[./-]%&#123;MONTHNUM&#125;[./-]%&#123;YEAR&#125;</div><div class="line">ISO8601_TIMEZONE (?:Z|[+-]%&#123;HOUR&#125;(?::?%&#123;MINUTE&#125;))</div><div class="line">ISO8601_SECOND (?:%&#123;SECOND&#125;|60)</div><div class="line">TIMESTAMP_ISO8601 %&#123;YEAR&#125;-%&#123;MONTHNUM&#125;-%&#123;MONTHDAY&#125;[T ]%&#123;HOUR&#125;:?%&#123;MINUTE&#125;(?::?%&#123;SECOND&#125;)?%&#123;ISO8601_TIMEZONE&#125;?</div><div class="line">DATE %&#123;DATE_US&#125;|%&#123;DATE_EU&#125;</div><div class="line">DATESTAMP %&#123;DATE&#125;[- ]%&#123;TIME&#125;</div><div class="line">TZ (?:[APMCE][SD]T|UTC)</div><div class="line">DATESTAMP_RFC822 %&#123;DAY&#125; %&#123;MONTH&#125; %&#123;MONTHDAY&#125; %&#123;YEAR&#125; %&#123;TIME&#125; %&#123;TZ&#125;</div><div class="line">DATESTAMP_RFC2822 %&#123;DAY&#125;, %&#123;MONTHDAY&#125; %&#123;MONTH&#125; %&#123;YEAR&#125; %&#123;TIME&#125; %&#123;ISO8601_TIMEZONE&#125;</div><div class="line">DATESTAMP_OTHER %&#123;DAY&#125; %&#123;MONTH&#125; %&#123;MONTHDAY&#125; %&#123;TIME&#125; %&#123;TZ&#125; %&#123;YEAR&#125;</div><div class="line">DATESTAMP_EVENTLOG %&#123;YEAR&#125;%&#123;MONTHNUM2&#125;%&#123;MONTHDAY&#125;%&#123;HOUR&#125;%&#123;MINUTE&#125;%&#123;SECOND&#125;</div><div class="line"></div><div class="line"># Syslog Dates: Month Day HH:MM:SS</div><div class="line">SYSLOGTIMESTAMP %&#123;MONTH&#125; +%&#123;MONTHDAY&#125; %&#123;TIME&#125;</div><div class="line">PROG [\x21-\x5a\x5c\x5e-\x7e]+</div><div class="line">SYSLOGPROG %&#123;PROG:program&#125;(?:\[%&#123;POSINT:pid&#125;\])?</div><div class="line">SYSLOGHOST %&#123;IPORHOST&#125;</div><div class="line">SYSLOGFACILITY &lt;%&#123;NONNEGINT:facility&#125;.%&#123;NONNEGINT:priority&#125;&gt;</div><div class="line">HTTPDATE %&#123;MONTHDAY&#125;/%&#123;MONTH&#125;/%&#123;YEAR&#125;:%&#123;TIME&#125; %&#123;INT&#125;</div><div class="line"></div><div class="line"># Shortcuts</div><div class="line">QS %&#123;QUOTEDSTRING&#125;</div><div class="line"></div><div class="line"># Log formats</div><div class="line">SYSLOGBASE %&#123;SYSLOGTIMESTAMP:timestamp&#125; (?:%&#123;SYSLOGFACILITY&#125; )?%&#123;SYSLOGHOST:logsource&#125; %&#123;SYSLOGPROG&#125;:</div><div class="line"></div><div class="line"># Log Levels</div><div class="line">LOGLEVEL ([Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Ii]nfo|INFO|[Ww]arn?(?:ing)?|WARN?(?:ING)?|[Ee]rr?(?:or)?|ERR?(?:OR)?|[Cc]rit?(?:ical)?|CRIT?(?:ICAL)?|[Ff]atal|FATAL|[Ss]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)</div></pre></td></tr></table></figure></p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/11/22/Grok正则语法/">http://www.yfshare.vip/2017/11/22/Grok正则语法/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;官方提供的grok表达式：&lt;a href=&quot;https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns&quot;&gt;https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns&lt;/a&gt;&lt;br&gt;grok在线调试：&lt;a href=&quot;https://grokdebug.herokuapp.com/&quot;&gt;https://grokdebug.herokuapp.com/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="Grok" scheme="http://www.yfshare.vip/tags/Grok/"/>
    
  </entry>
  
  <entry>
    <title>Logstash配置语法</title>
    <link href="http://www.yfshare.vip/2017/11/22/Logstash%E9%85%8D%E7%BD%AE%E8%AF%AD%E6%B3%95/"/>
    <id>http://www.yfshare.vip/2017/11/22/Logstash配置语法/</id>
    <published>2017-11-22T14:26:39.000Z</published>
    <updated>2017-11-22T14:36:00.441Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Logstash 社区通常习惯用 shipper，broker 和 indexer 来描述数据流中不同进程各自的角色<br><a id="more"></a><br>Logstash设计了自己的DSL。包含有  </p>
<ul>
<li>区域</li>
<li>注释</li>
<li>数据类型(布尔值，字符串，数值，数组，哈希)</li>
<li>条件判断</li>
<li>字段引用等<br><img src="http://note.youdao.com/yws/api/personal/file/5ABEC6BA6184467BA639CD46B67E6AD1?method=download&amp;shareKey=6411709c4a0ddd05944af76c3744134d" alt="Lostash角色">  </li>
</ul>
<h4 id="区段-section"><a href="#区段-section" class="headerlink" title="区段(section)"></a>区段(section)</h4><p>Logstash用<code>{}</code>来定义区域。区域内可以包括插件区域定义，可以在一个区域内定义多个插件。插件区域内则可以定义键值对设置。示例如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">    stdin &#123;&#125;</div><div class="line">    syslog &#123;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>Logstash 支持少量的数据值类型：</p>
<ul>
<li>bool<br><code>debug =&gt; true</code></li>
<li>string<br><code>host =&gt; &quot;hostname&quot;</code></li>
<li>number<br><code>port =&gt; 514</code></li>
<li>array<br><code>match =&gt; [&quot;datetime&quot;, &quot;UNIX&quot;, &quot;ISO8601&quot;]</code></li>
<li>hash  <figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">options =&gt; &#123;</div><div class="line">    key1 =&gt; <span class="string">"value1"</span>,</div><div class="line">    key2 =&gt; <span class="string">"value2"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>注：如果你用的版本低于 1.2.0，哈希的语法跟数组是一样的，如： <code>match =&gt; [ &quot;field1&quot;, &quot;pattern1&quot;, &quot;field2&quot;, &quot;pattern2&quot; ]</code>  </p>
<h4 id="字段引用-field-reference"><a href="#字段引用-field-reference" class="headerlink" title="字段引用(field reference)"></a>字段引用(field reference)</h4><p>字段是Logstash::Event对象的属性。之前提过事件就像一个哈希一样，所以可以想象字段就像一个键值对。<br>如果在Logstash配置中使用字段的值，只需要把字段的名字写在中括号 [] 里就行了，这就叫字段引用。<br>对于嵌套字段(也就是多维哈希表，或者叫哈希的哈希)，每层的字段名都写在 [] 里。如，可以从 geoip 里这样获取 longitude 值<br><code>[geoip][location][0]</code><br>注：logstash 的数组也支持倒序下标，即<code>[geoip][location][-1]</code>可以获取数组最后一个元素的值。<br>Logstash 还支持变量内插，在字符串里使用字段引用的方法是：<br><code>&quot;the longitude is %{[geoip][location][0]}&quot;</code>  </p>
<h4 id="条件判断-condition"><a href="#条件判断-condition" class="headerlink" title="条件判断(condition)"></a>条件判断(condition)</h4><p>Logstash从 1.3.0 版开始支持条件判断和表达式。<br>表达式支持下面这些操作符：  </p>
<ul>
<li><code>==</code>(等于), <code>!=</code>(不等于), <code>&lt;</code>(小于), <code>&gt;</code>(大于), <code>&lt;=</code>(小于等于), <code>&gt;=</code>(大于等于)  </li>
<li><code>=~</code>(匹配正则), <code>!~</code>（不匹配正则）  </li>
<li><code>in</code>(包含), <code>not in</code>(不包含)  </li>
<li><code>and</code>(与), <code>or</code>(或), <code>nand</code>(非与), <code>xor</code>(非或)  </li>
<li><code>()</code>(复合表达式), <code>!()</code>(对复合表达式结果取反)<br>通常来说，你都会在表达式里用到字段引用。为了尽量展示全面各种表达式，下面虚拟一个示例：  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if "_grokparsefailure" not in [tags] &#123;</div><div class="line">&#125; else if [<span class="string">status</span>] !~ /^2\d\d/ or ( [<span class="string">url</span>] == "/noc.gif" nand [<span class="string">geoip</span>][<span class="symbol">city</span>] != "beijing" ) &#123;</div><div class="line">&#125; else &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h4><p>Logstash 提供了一个 shell 脚本叫 logstash 方便快速运行。它支持以下参数：  </p>
<ul>
<li><p><code>-e</code><br>意即执行。我们在 “Hello World” 的时候已经用过这个参数了。事实上你可以不写任何具体配置，直接运行 <code>bin/logstash -e &#39;&#39;</code> 达到相同效果。这个参数的默认值是下面这样：  </p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class">input </span>&#123;</div><div class="line">    <span class="class">stdin </span>&#123; &#125;</div><div class="line">&#125;</div><div class="line"><span class="class">output </span>&#123;</div><div class="line">    <span class="class">stdout </span>&#123; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p><code>--config</code> 或 <code>-f</code><br>意即文件。真实运用中，我们会写很长的配置，甚至可能超过 shell 所能支持的 1024 个字符长度。所以我们必把配置固化到文件里，然后通过 <code>bin/logstash -f agent.conf</code> 这样的形式来运行。<br>此外，logstash 还提供一个方便我们规划和书写配置的小功能。你可以直接用 <code>bin/logstash -f /etc/logstash.d/</code> 来运行。logstash 会自动读取 <code>/etc/logstash.d/</code> 目录下所有<code>*.conf</code>的文本文件，然后在自己内存里拼接成一个完整的大配置文件，再去执行。<br>#注意：logstash 列出目录下所有文件时，是字母排序的。而 logstash 配置段的 <code>filter</code> 和 <code>output</code> 都是顺序执行，所以顺序非常重要。采用多文件管理的用户，推荐采用数字编号方式命名配置文件，同时在配置中，严谨采用 if 判断限定不同日志的动作。</p>
</li>
<li><code>--configtest</code> 或 <code>-t</code><br>意即测试。用来测试 Logstash 读取到的配置文件语法是否能正常解析。Logstash 配置语法是用 <code>grammar.treetop</code> 定义的。尤其是使用了上一条提到的读取目录方式的读者，尤其要提前测试。  </li>
<li><code>--log</code> 或 <code>-l</code><br>意即日志。Logstash 默认输出日志到标准错误。生产环境下你可以通过<code>bin/logstash -l logs/logstash.log</code>命令来统一存储日志。  </li>
<li><code>--pipeline-workers</code> 或 <code>-w</code><br>运行 filter 和 output 的 pipeline 线程数量。默认是 CPU 核数。  </li>
<li><code>--pipeline-batch-size</code> 或 <code>-b</code><br>每个 Logstash pipeline 线程，在执行具体的 filter 和 output 函数之前，最多能累积的日志条数。默认是 125 条。越大性能越好，同样也会消耗越多的 JVM 内存。  <ul>
<li><code>--pipeline-batch-delay</code> 或 <code>-u</code><br>每个 Logstash pipeline 线程，在打包批量日志的时候，最多等待几毫秒。默认是 5 ms。  </li>
</ul>
</li>
<li><code>--pluginpath</code> 或 <code>-P</code><br>可以写自己的插件，然后用<code>bin/logstash --pluginpath /path/to/own/plugins</code>加载它们。  </li>
<li><code>--verbose</code><br>输出一定的调试日志。  </li>
<li><code>--debug</code><br>输出更多的调试日志。  </li>
</ul>
<h4 id="设置文件"><a href="#设置文件" class="headerlink" title="设置文件"></a>设置文件</h4><p>从 Logstash 5.0 开始，新增了<code>$LS_HOME/config/logstash.yml</code> 文件，可以将所有的命令行参数都通过 <code>YAML</code> 文件方式设置。同时为了反映命令行配置参数的层级关系，参数也都改成用.而不是-了。<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">pipeline:</span></div><div class="line"><span class="symbol">    workers:</span> <span class="number">24</span></div><div class="line"><span class="symbol">    batch:</span></div><div class="line"><span class="symbol">        size:</span> <span class="number">125</span></div><div class="line"><span class="symbol">        delay:</span> <span class="number">5</span></div></pre></td></tr></table></figure></p>
<p>参考文档：<a href="http://kibana.logstash.es/content/logstash/get-start/full-config.html" target="_blank" rel="external">http://kibana.logstash.es/content/logstash/get-start/full-config.html</a>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/11/22/Logstash配置语法/">http://www.yfshare.vip/2017/11/22/Logstash配置语法/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Logstash 社区通常习惯用 shipper，broker 和 indexer 来描述数据流中不同进程各自的角色&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="Logstash" scheme="http://www.yfshare.vip/tags/Logstash/"/>
    
  </entry>
  
  <entry>
    <title>ELK安装(基础)</title>
    <link href="http://www.yfshare.vip/2017/11/22/ELK%E5%AE%89%E8%A3%85-%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.yfshare.vip/2017/11/22/ELK安装-基础/</id>
    <published>2017-11-22T13:28:46.000Z</published>
    <updated>2017-11-22T13:46:46.545Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>ELK是三个开源软件的缩写，分别表示：Elasticsearch , Logstash, Kibana , 它们都是开源软件<br><a id="more"></a></p>
<ol>
<li>Elasticsearch是一个高度可扩展的开源全文搜索和分析引擎，特点：分布式、零配置、自动发现、索引自动分片、索引副本机制、restful风格接口、多数据源、自动搜索负载等。</li>
<li>Logstash 是一个完全开源的工具，对日志收集、分析、并存储。</li>
<li>Kibana 是一个数据可视化平台，可以通过将数据转化为酷炫而强大的图像而实现与数据的交互，为Logstash和elasticsearch提供WEB界面。<br>将三者的收集加工，存储分析和可视转化整合在一起就形成了 ELK<br>目前这三个软件最新版为logstash-5.1.1、elasticsearch-5.1.1、kibana-5.1.1 （文章很早前写的）</li>
</ol>
<p>ELK官网：<a href="https://www.elastic.co/" target="_blank" rel="external">https://www.elastic.co/</a><br>ELK下载：<a href="https://www.elastic.co/downloads" target="_blank" rel="external">https://www.elastic.co/downloads</a><br>ELK官方文档：<a href="https://www.elastic.co/guide/index.html" target="_blank" rel="external">https://www.elastic.co/guide/index.html</a><br>ELK中文指南：<a href="http://kibana.logstash.es/content/logstash/" target="_blank" rel="external">http://kibana.logstash.es/content/logstash/</a><br>　　　　　　　<a href="https://endymecy.gitbooks.io/elasticsearch-guide-chinese/content/getting-started/README.html" target="_blank" rel="external">https://endymecy.gitbooks.io/elasticsearch-guide-chinese/content/getting-started/README.html</a><br>　　　　　　　<a href="http://udn.yyuap.com/doc/logstash-best-practice-cn/index.html" target="_blank" rel="external">http://udn.yyuap.com/doc/logstash-best-practice-cn/index.html</a>  </p>
<p>环境：Centos 6.6<br>　　　ElasticSearch 5.1.1<br>　　　Logstash 5.1.1<br>　　　Kibana 5.1.1  </p>
<p>要求：JDK 1.8+，最好是1.8.0_73  </p>
<p>安装elasticsearch参考文档：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.1/install-elasticsearch.html" target="_blank" rel="external">https://www.elastic.co/guide/en/elasticsearch/reference/5.1/install-elasticsearch.html</a><br>安装kibana参考文档：<a href="https://www.elastic.co/guide/en/kibana/5.1/install.html" target="_blank" rel="external">https://www.elastic.co/guide/en/kibana/5.1/install.html</a><br>安装logstash参考文档：<a href="https://www.elastic.co/guide/en/logstash/5.1/installing-logstash.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/installing-logstash.html</a><br>简单测试参考：<a href="https://www.elastic.co/guide/en/logstash/5.1/first-event.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/first-event.html</a>  </p>
<h3 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@ELK ~]<span class="comment"># wget http://download.oracle.com/otn/java/jdk/8u73-b02/jdk-8u73-linux-x64.tar.gz?AuthParam=1481271284_8426bd60d7c0a8e617ffa072288f5b3d</span></div><div class="line">[root@ELK ~]<span class="comment"># wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.1.1.rpm</span></div><div class="line">[root@ELK ~]<span class="comment"># wget https://artifacts.elastic.co/downloads/kibana/kibana-5.1.1-x86_64.rpm</span></div><div class="line">[root@ELK ~]<span class="comment"># wget https://artifacts.elastic.co/downloads/logstash/logstash-5.1.1.rpm</span></div><div class="line"></div><div class="line">[root@ELK ~]<span class="comment"># java -version</span></div><div class="line"><span class="keyword">java </span>version <span class="string">"1.8.0_73"</span></div><div class="line"><span class="keyword">Java(TM) </span>SE Runtime Environment (<span class="keyword">build </span><span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_73-<span class="keyword">b02)</span></div><div class="line"><span class="keyword">Java </span>HotSpot(TM) <span class="number">64</span>-<span class="keyword">Bit </span>Server VM (<span class="keyword">build </span><span class="number">25</span>.<span class="number">73</span>-<span class="keyword">b02, </span>mixed mode)</div><div class="line">[root@ELK ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#安装elasticsearch</span></div><div class="line">[root@ELK ~]<span class="comment"># yum -y install elasticsearch-5.1.1.rpm</span></div><div class="line">[root@ELK ~]<span class="comment"># mkdir -p /var/log/elasticsearch</span></div><div class="line">[root@ELK ~]<span class="comment"># grep -v '^$' /etc/elasticsearch/elasticsearch.yml | grep -v ^#</span></div><div class="line">path.data: /etc/elasticsearch/data  <span class="comment">#数据文件存放路径</span></div><div class="line">path.logs: /var/<span class="built_in">log</span>/elasticsearch   <span class="comment">#日志文件存放路径</span></div><div class="line"><span class="comment">#注：Elasticsearch本身是不允许外界访问的，所以只能把network.host设置为127.0.0.1或0.0.0.0，而它默认也是这个值，如果设为其他的值，日志里面会报错，Elasticsearch起不来</span></div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line">[root@ELK ~]<span class="comment"># mkdir -p /etc/elasticsearch/data/</span></div><div class="line">[root@ELK ~]<span class="comment"># chmod 775 /etc/elasticsearch/data/</span></div><div class="line">[root@ELK ~]<span class="comment"># chgrp elasticsearch /etc/elasticsearch/data/ -R</span></div><div class="line">[root@ELK ~]<span class="comment"># chkconfig --add elasticsearch</span></div><div class="line">[root@ELK ~]<span class="comment"># chkconfig elasticsearch on</span></div><div class="line">[root@ELK ~]<span class="comment"># /etc/init.d/elasticsearch start</span></div><div class="line"></div><div class="line"><span class="comment">#在Centos7中用systemctl start elasticsearch时，报" elasticsearch[10925]: which: no java in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin)"，需要在" /etc/sysconfig/elasticsearch "配置文件中指定“JAVA_HOME”路径</span></div><div class="line"></div><div class="line">[root@ELK ~]<span class="comment"># ps -ef | grep elasticsearch | grep -v grep</span></div><div class="line">498        3508      1 75 19:20 ?        00:00:10 /usr/<span class="built_in">local</span>/jdk1.8.0_73/bin/java -Xms2g -Xmx2g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -server -Xss1m -Djava.awt.headless=<span class="literal">true</span> -Dfile.encoding=UTF-8 -Djna.nosys=<span class="literal">true</span> -Djdk.io.permissionsUseCanonicalPath=<span class="literal">true</span> -Dio.netty.noUnsafe=<span class="literal">true</span> -Dio.netty.noKeySetOptimization=<span class="literal">true</span> -D<span class="built_in">log</span>4j.shutdownHookEnabled=<span class="literal">false</span> -D<span class="built_in">log</span>4j2.disable.jmx=<span class="literal">true</span> -D<span class="built_in">log</span>4j.skipJansi=<span class="literal">true</span> -XX:+HeapDumpOnOutOfMemoryError -Des.path.home=/usr/share/elasticsearch -cp /usr/share/elasticsearch/lib/elasticsearch-5.1.1.jar:/usr/share/elasticsearch/lib/* org.elasticsearch.bootstrap.Elasticsearch -p /var/run/elasticsearch/elasticsearch.pid <span class="_">-d</span> -Edefault.path.logs=/var/<span class="built_in">log</span>/elasticsearch -Edefault.path.data=/var/lib/elasticsearch -Edefault.path.conf=/etc/elasticsearch</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line"><span class="comment">#通过日志观察，elasticsearch监听了9200(http port)和9300俩端口</span></div><div class="line">[root@ELK ~]<span class="comment"># ss -tunlp | grep 9200</span></div><div class="line">tcp    LISTEN     0      128     ::ffff:127.0.0.1:9200                 :::*      users:((<span class="string">"java"</span>,3508,108))</div><div class="line">tcp    LISTEN     0      128                  ::1:9200                 :::*      users:((<span class="string">"java"</span>,3508,109))</div><div class="line">[root@ELK ~]<span class="comment"># ss -tunlp | grep 9300</span></div><div class="line">tcp    LISTEN     0      128     ::ffff:127.0.0.1:9300                 :::*      users:((<span class="string">"java"</span>,3508,101))</div><div class="line">tcp    LISTEN     0      128                  ::1:9300                 :::*      users:((<span class="string">"java"</span>,3508,99))</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@ELK ~]<span class="comment"># curl 'http://localhost:9200'   #显示这个就表示启动成功了</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span> : <span class="string">"mlayMmR"</span>,</div><div class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elasticsearch"</span>,</div><div class="line">  <span class="string">"cluster_uuid"</span> : <span class="string">"QIe1zquiRS24X-NsfmwTNA"</span>,</div><div class="line">  <span class="string">"version"</span> : &#123;</div><div class="line">    <span class="string">"number"</span> : <span class="string">"5.6.1"</span>,</div><div class="line">    <span class="string">"build_hash"</span> : <span class="string">"667b497"</span>,</div><div class="line">    <span class="string">"build_date"</span> : <span class="string">"2017-09-14T19:22:05.189Z"</span>,</div><div class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</div><div class="line">    <span class="string">"lucene_version"</span> : <span class="string">"6.6.1"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></div><div class="line">&#125;</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@ELK ~]<span class="comment"># curl localhost:9200/_cat/health?v   #集群健康检查</span></div><div class="line">epoch      timestamp cluster       status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</div><div class="line">1481282834 19:27:14  elasticsearch yellow          1         1      1   1    0    0        1             0                  -                 50.0%</div><div class="line">[root@ELK ~]<span class="comment"># curl localhost:9200/_cat/nodes?v    #获取集群中节点列表</span></div><div class="line">ip        heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name</div><div class="line">127.0.0.1            3          96   9    0.06    0.20     0.19 mdi       *      9AsElX3</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line">[root@ELK ~]<span class="comment"># curl localhost:9200/_cat/allocation?v</span></div><div class="line">shards disk.indices disk.used disk.avail disk.total disk.percent host      ip        node</div><div class="line">     1        3.1kb     4.7gb     44.3gb       49gb            9 127.0.0.1 127.0.0.1 9AsElX3</div><div class="line">     1                                                                               UNASSIGNED</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line">[root@ELK ~]<span class="comment"># curl 'localhost:9200/_cat/indices?v'     #获取ElasticSearch索引</span></div><div class="line">health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size</div><div class="line">yellow open   logstash-message-2016.12.23 6apP2ZYOQnyewF9E7zNIsQ   5   1       1999            0      1.1mb          1.1mb</div><div class="line">yellow open   logstash-message-2016.12.27 5cisTsn1RKS3oUcAcTERbw   5   1       1195            0    924.6kb        924.6kb</div><div class="line">yellow open   .kibana                     z4SDEnWrRnePE3tcz_woLA   1   1          2            0      9.6kb          9.6kb</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line"><span class="comment">#yellow黄色意味着某些复制没有（或者还未）被分配。因为现在是单节点所以不能被复制，当另一节点加入集群后会复制，则会变成绿色</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#安装kibana</span></div><div class="line">[root@ELK ~]<span class="comment"># yum -y install kibana-5.1.1-x86_64.rpm</span></div><div class="line">[root@ELK ~]<span class="comment"># grep -v '^$' /etc/kibana/kibana.yml | grep -v '^#'</span></div><div class="line">server.host: <span class="string">"192.168.31.100"</span></div><div class="line">elasticsearch.url: <span class="string">"http://localhost:9200"</span></div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line">[root@ELK ~]<span class="comment"># chkconfig --add kibana</span></div><div class="line">[root@ELK ~]<span class="comment"># chkconfig kibana on</span></div><div class="line">[root@ELK ~]<span class="comment"># /etc/init.d/kibana start</span></div><div class="line">kibana started</div><div class="line">[root@ELK ~]<span class="comment"># ps -ef | grep kibana | grep -v grep</span></div><div class="line">kibana     3613      1 37 19:38 pts/0    00:00:16 /usr/share/kibana/bin/../node/bin/node --no-warnings /usr/share/kibana/bin/../src/cli -c /etc/kibana/kibana.yml</div><div class="line">[root@ELK ~]<span class="comment"># ss -tunlp | grep 5601</span></div><div class="line">tcp    LISTEN     0      128       192.168.31.100:5601                  *:*      users:((<span class="string">"node"</span>,3613,11))</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line"><span class="comment">#kibana日志文件位置</span></div><div class="line">[root@ELK ~]<span class="comment"># ls /var/log/kibana/</span></div><div class="line">kibana.stderr  kibana.stdout</div><div class="line">[root@ELK ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#安装logstash</span></div><div class="line"><span class="comment">#需要对Java做软链接，链接到/usr/bin/java，否则安装logstash-5.1.1.rpm时报错</span></div><div class="line">[root@ELK ~]<span class="comment"># ln -s /usr/local/jdk1.8.0_73/bin/java /usr/bin/</span></div><div class="line">[root@ELK ~]<span class="comment"># whereis java</span></div><div class="line">java: /usr/bin/java</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line">[root@ELK ~]<span class="comment"># yum -y install logstash-5.1.1.rpm</span></div><div class="line">[root@ELK ~]<span class="comment"># ls /usr/share/logstash/bin/</span></div><div class="line">cpdump  logstash  logstash.bat  logstash.lib.sh  logstash-plugin  logstash-plugin.bat  setup.bat  system-install</div><div class="line">[root@ELK ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h3 id="logstash调试"><a href="#logstash调试" class="headerlink" title="logstash调试"></a>logstash调试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#简单测试1</span></div><div class="line">[root@ELK ~]<span class="comment"># /usr/share/logstash/bin/logstash --path.settings /etc/logstash -e 'input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;'</span></div><div class="line">Sending Logstash<span class="string">'s logs to /var/log/logstash which is now configured via log4j2.properties</span></div><div class="line">The stdin plugin is now waiting for input:</div><div class="line">hello world</div><div class="line">2016-12-12T09:36:50.758Z 0.0.0.0 hello world</div><div class="line">...</div><div class="line">注：要加--path.settings /etc/logstash指定配置文件目录，否则报错</div><div class="line">#再启一个窗口可以看到logstash进程，不能关掉上面测试命令，screen(crtl+D)后台运行</div><div class="line">[root@ELK ~]# ps -ef | grep logstash</div><div class="line">root       1934   1153 14 17:33 pts/0    00:03:35 /usr/local/jdk1.8.0_73/bin/java -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+DisableExplicitGC -Djava.awt.headless=true -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError -Xmx1g -Xms256m -Xss2048k -Djffi.boot.library.path=/usr/share/logstash/vendor/jruby/lib/jni -Xbootclasspath/a:/usr/share/logstash/vendor/jruby/lib/jruby.jar -classpath : -Djruby.home=/usr/share/logstash/vendor/jruby -Djruby.lib=/usr/share/logstash/vendor/jruby/lib -Djruby.script=jruby -Djruby.shell=/bin/sh org.jruby.Main --1.9 /usr/share/logstash/lib/bootstrap/environment.rb logstash/runner.rb --path.settings /etc/logstash -e input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;</div><div class="line">root       2012   1982  0 17:57 pts/2    00:00:00 grep logstash</div><div class="line">[root@ELK ~]#</div><div class="line">#Logstash日志文件位置</div><div class="line">[root@ELK ~]# tail -f /var/log/logstash/logstash-plain.log</div><div class="line">[2016-12-12T17:34:11,669][INFO ][logstash.agent           ] No config files found in path &#123;:path=&gt;"/etc/logstash/conf.d/*"&#125;</div><div class="line">[2016-12-12T17:34:12,498][INFO ][logstash.pipeline        ] Starting pipeline &#123;"id"=&gt;"main", "pipeline.workers"=&gt;1, "pipeline.batch.size"=&gt;125, "pipeline.batch.delay"=&gt;5, "pipeline.max_inflight"=&gt;125&#125;</div><div class="line">[2016-12-12T17:34:12,517][INFO ][logstash.pipeline        ] Pipeline main started</div><div class="line">[2016-12-12T17:34:13,000][INFO ][logstash.agent           ] Successfully started Logstash API endpoint &#123;:port=&gt;9600&#125;</div><div class="line">···</div></pre></td></tr></table></figure>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#简单测试2</span></div><div class="line">[root@<span class="type">ELK</span> ~]<span class="comment"># cat /etc/logstash/conf.d/test.conf </span></div><div class="line">input &#123;</div><div class="line">	<span class="literal">stdin</span> &#123;&#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">	<span class="literal">stdout</span> &#123;</div><div class="line">		codec =&gt; rubydebug&#123;&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">[root@<span class="type">ELK</span> ~]<span class="comment">#</span></div><div class="line">[root@<span class="type">ELK</span> ~]<span class="comment"># /usr/share/logstash/bin/logstash --path.settings /etc/logstash -f /etc/logstash/conf.d/test.conf</span></div><div class="line"><span class="type">Sending</span> <span class="type">Logstash</span>'s logs to /<span class="keyword">var</span>/log/logstash which <span class="keyword">is</span> now configured via log4j2.properties</div><div class="line"><span class="type">The</span> <span class="literal">stdin</span> plugin <span class="keyword">is</span> now waiting <span class="keyword">for</span> input:</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="string">"@timestamp"</span> =&gt; <span class="number">2016</span>-<span class="number">12</span>-<span class="number">13</span>T09:<span class="number">24</span>:<span class="number">18</span>.<span class="number">123</span>Z,</div><div class="line">      <span class="string">"@version"</span> =&gt; <span class="string">"1"</span>,</div><div class="line">          <span class="string">"host"</span> =&gt; <span class="string">"0.0.0.0"</span>,</div><div class="line">       <span class="string">"message"</span> =&gt; <span class="string">""</span>,</div><div class="line">          <span class="string">"tags"</span> =&gt; []</div><div class="line">&#125;</div><div class="line">hello world</div><div class="line">&#123;</div><div class="line">    <span class="string">"@timestamp"</span> =&gt; <span class="number">2016</span>-<span class="number">12</span>-<span class="number">13</span>T09:<span class="number">24</span>:<span class="number">26</span>.<span class="number">328</span>Z,</div><div class="line">      <span class="string">"@version"</span> =&gt; <span class="string">"1"</span>,</div><div class="line">          <span class="string">"host"</span> =&gt; <span class="string">"0.0.0.0"</span>,</div><div class="line">       <span class="string">"message"</span> =&gt; <span class="string">"hello world"</span>,</div><div class="line">          <span class="string">"tags"</span> =&gt; []</div><div class="line">&#125;</div><div class="line"><span class="comment">#host 标记事件发生在哪里。</span></div><div class="line"><span class="comment">#type 标记事件的唯一类型。</span></div><div class="line"><span class="comment">#tags 标记事件的某方面属性。这是一个数组，一个事件可以有多个标签。</span></div><div class="line"><span class="comment">#注：每个 logstash 过滤插件，都会有四个方法叫 add_tag, remove_tag, add_field 和 remove_field。它们在插件过滤匹配成功时生效</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#后台运行Logstash</span></div><div class="line">1. nohup /usr/share/logstash/bin/logstash --path.settings /etc/logstash <span class="_">-f</span> /etc/logstash/conf.d/test.conf &amp;</div><div class="line">2. screen -S logstash_start</div><div class="line">screen会新开一个会话</div><div class="line">输入/usr/share/logstash/bin/logstash --path.settings /etc/logstash <span class="_">-f</span> /etc/logstash/conf.d/test.conf，按ctrl+A+D</div><div class="line">[root@ELK ~]<span class="comment"># ps -ef | grep logstash | grep -v grep</span></div><div class="line">root      11458      1  0 17:34 ?        00:00:00 SCREEN -S logstash_start</div><div class="line">root      11505  11459 55 17:35 pts/2    00:00:54 /usr/<span class="built_in">local</span>/jdk1.8.0_73/bin/java -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+DisableExplicitGC -Djava.awt.headless=<span class="literal">true</span> -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError -Xmx1g -Xms256m -Xss2048k -Djffi.boot.library.path=/usr/share/logstash/vendor/jruby/lib/jni -Xbootclasspath/a:/usr/share/logstash/vendor/jruby/lib/jruby.jar -classpath : -Djruby.home=/usr/share/logstash/vendor/jruby -Djruby.lib=/usr/share/logstash/vendor/jruby/lib -Djruby.script=jruby -Djruby.shell=/bin/sh org.jruby.Main --1.9 /usr/share/logstash/lib/bootstrap/environment.rb logstash/runner.rb --path.settings /etc/logstash <span class="_">-f</span> /etc/logstash/conf.d/test.conf</div><div class="line">logstash  11554      1 79 17:36 ?        00:00:22 /usr/bin/java -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+DisableExplicitGC -Djava.awt.headless=<span class="literal">true</span> -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError -Xmx1g -Xms256m -Xss2048k -Djffi.boot.library.path=/usr/share/logstash/vendor/jruby/lib/jni -Xbootclasspath/a:/usr/share/logstash/vendor/jruby/lib/jruby.jar -classpath : -Djruby.home=/usr/share/logstash/vendor/jruby -Djruby.lib=/usr/share/logstash/vendor/jruby/lib -Djruby.script=jruby -Djruby.shell=/bin/sh org.jruby.Main --1.9 /usr/share/logstash/lib/bootstrap/environment.rb logstash/runner.rb --path.settings /etc/logstash</div><div class="line">[root@ELK ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logstash-output-stdout插件，最主要的用途是调试。在其不太有效时，加上命令行参数 -vv 运行，查看更多详细的调试信息</div></pre></td></tr></table></figure>
<h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q &amp; A"></a>Q &amp; A</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#如果启动多个logstash需要手动指定 --path.data /data/ELK_data/logstash/data_1.21_program 才行，否则报错.</span></div><div class="line"></div><div class="line">报错信息：Logstash could not be started because there is already another instance using the configured data directory.  If you wish to run multiple instances, you must change the <span class="string">"path.data"</span> setting.</div><div class="line"></div><div class="line">[root@ELK ~]<span class="comment"># /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/conf.d/logstash_192.168.1.21.conf --path.data /data/ELK_data/logstash/data_1.21_program</span></div><div class="line">Sending Logstash<span class="string">'s logs to /data/ELK_data/logstash/logs which is now configured via log4j2.properties</span></div></pre></td></tr></table></figure>
<p>访问<a href="http://ip:5601打开kibana首页" target="_blank" rel="external">http://ip:5601打开kibana首页</a><br><img src="http://note.youdao.com/yws/api/personal/file/12B3FD77299D42BAB4FA2226F3C5EDF2?method=download&amp;shareKey=c514141f708fb56c52d0b33d4a40cf8d" alt="image">  </p>
<p>logstash流程图：<br><img src="http://note.youdao.com/yws/api/personal/file/C09204B066524EA4BC2893B6224E02A6?method=download&amp;shareKey=fe98a78bb4797c7d75f6e8d8350e7c4e" alt="image">  </p>
<p>===============================<br>Question1：如果日志里面报内核问题，可以忽略，我现在用的是Centos 6.6，内核是2.6，所以会报错..<br>参考：<a href="https://discuss.elastic.co/t/elasticsearch-warn-unable-to-install-syscall-filter/42819/1" target="_blank" rel="external">https://discuss.elastic.co/t/elasticsearch-warn-unable-to-install-syscall-filter/42819/1</a><br><img src="http://note.youdao.com/yws/api/personal/file/F11F2EFCDC334D0AA76BBE60643FD2EF?method=download&amp;shareKey=4b5f95081f8a0e4024ade293e181707d" alt="image">  </p>
<p>Question2：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">需要对Java做软链接，链接到<span class="meta-keyword">/usr/</span>bin/java，否则安装logstash<span class="number">-5.1</span><span class="number">.1</span>.rpm时报错</div><div class="line"><span class="meta">#报错信息如下：↓↓↓↓↓↓↓↓↓</span></div><div class="line">Running Transaction</div><div class="line">  Installing : <span class="number">1</span>:logstash<span class="number">-5.1</span><span class="number">.1</span><span class="number">-1.</span>noarch                                                                                          <span class="number">1</span>/<span class="number">1</span> </div><div class="line">Using provided startup.options file: <span class="meta-keyword">/etc/</span>logstash/startup.options</div><div class="line"><span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/logstash/</span>vendor<span class="meta-keyword">/jruby/</span>bin/jruby: line <span class="number">388</span>: <span class="meta-keyword">/usr/</span>bin/java: No such file or directory</div><div class="line"><span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/logstash/</span>vendor<span class="meta-keyword">/jruby/</span>bin/jruby: line <span class="number">388</span>: exec: <span class="meta-keyword">/usr/</span>bin/java: cannot execute: No such file or directory</div><div class="line">Unable to install system startup script for Logstash.</div><div class="line">  Verifying  : <span class="number">1</span>:logstash<span class="number">-5.1</span><span class="number">.1</span><span class="number">-1.</span>noarch                                                                                          <span class="number">1</span>/<span class="number">1</span> </div><div class="line"><span class="symbol"></span></div><div class="line">Installed:</div><div class="line">  logstash.noarch <span class="number">1</span>:<span class="number">5.1</span><span class="number">.1</span><span class="number">-1</span>                                                                                                    </div><div class="line"></div><div class="line">Complete!</div><div class="line">[root@ELK ~]<span class="meta">#</span></div><div class="line"><span class="meta">#↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑</span></div><div class="line">卸载重新安装logstash<span class="number">-5.1</span><span class="number">.1</span>.rpm即可</div><div class="line">[root@ELK ~]<span class="meta"># ln -s /usr/local/jdk1.8.0_73/bin/java /usr/bin/</span></div><div class="line">[root@ELK ~]<span class="meta"># whereis java</span></div><div class="line"><span class="symbol">java:</span> <span class="meta-keyword">/usr/</span>bin/java</div><div class="line">[root@ELK ~]<span class="meta">#</span></div></pre></td></tr></table></figure></p>
<p>Question3：简单测试时需要指定配置文件路径，yum否则报错<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root<span class="meta">@ELK</span> ~]# /usr/share/logstash/bin/logstash -e <span class="string">'input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;'</span></div><div class="line">WARNING: Could not find logstash.yml which <span class="keyword">is</span> typically located <span class="keyword">in</span> $LS_HOME/config or /etc/logstash. You can specify the path using --path.settings. Continuing using the defaults</div><div class="line">Could not find log4j2 configuration at path /usr/share/logstash/config/log4j2.properties. Using <span class="keyword">default</span> config which logs to console</div><div class="line">The stdin plugin <span class="keyword">is</span> now waiting <span class="keyword">for</span> input:</div><div class="line"><span class="number">17</span>:<span class="number">06</span>:<span class="number">57.595</span> [[main]-pipeline-manager] INFO  logstash.pipeline - Starting pipeline &#123;<span class="string">"id"</span>=&gt;<span class="string">"main"</span>, <span class="string">"pipeline.workers"</span>=&gt;<span class="number">1</span>, <span class="string">"pipeline.batch.size"</span>=&gt;<span class="number">125</span>, <span class="string">"pipeline.batch.delay"</span>=&gt;<span class="number">5</span>, <span class="string">"pipeline.max_inflight"</span>=&gt;<span class="number">125</span>&#125;</div><div class="line"><span class="number">17</span>:<span class="number">06</span>:<span class="number">57.607</span> [[main]-pipeline-manager] INFO  logstash.pipeline - Pipeline main started</div><div class="line"><span class="number">17</span>:<span class="number">06</span>:<span class="number">57.738</span> [Api Webserver] INFO  logstash.agent - Successfully started Logstash API endpoint &#123;:port=&gt;<span class="number">9600</span>&#125;</div><div class="line">hello world</div><div class="line"><span class="number">2016</span><span class="number">-12</span><span class="number">-12</span>T09:<span class="number">10</span>:<span class="number">08.651</span>Z <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> hello world</div><div class="line"><span class="number">17</span>:<span class="number">10</span>:<span class="number">14.145</span> [LogStash::Runner] WARN  logstash.agent - stopping pipeline &#123;:id=&gt;<span class="string">"main"</span>&#125;</div><div class="line">[root<span class="meta">@ELK</span> ~]#</div><div class="line">注：要加--path.settings /etc/logstash指定配置文件目录，否则报错↑↑↑</div><div class="line">正确方法：</div><div class="line">[root<span class="meta">@ELK</span> ~]# /usr/share/logstash/bin/logstash --path.settings /etc/logstash -e <span class="string">'input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;'</span></div></pre></td></tr></table></figure></p>
<p>Question4：访问Kibana时返回502，如下图：<br>解决办法是：检查下当前电脑是否有打开翻墙软件或IE代理<br><img src="http://note.youdao.com/yws/api/personal/file/A89D2F7B081341BC98AF4D563A8071EE?method=download&amp;shareKey=9d88dec8bbae431f93f6609a4527fa43" alt="Kibana_502">  </p>
<p>附件：<br><a href="http://note.youdao.com/yws/api/personal/file/361B0F5AD67B4909A88EBA48DA8752E1?method=download&amp;shareKey=a693da8e5d71c8ee627cf20bef32b233" target="_blank" rel="external">logstash-5.1.1.rpm</a><br><a href="http://note.youdao.com/yws/api/personal/file/61BD9F64C30A40ED954AE45758804059?method=download&amp;shareKey=381ac62877d82b385f600470a6b81cc2" target="_blank" rel="external">kibana-5.1.1-x86_64.rpm</a><br><a href="http://note.youdao.com/yws/api/personal/file/35D87D7FF5394DDC8EDC3CEB84AC9295?method=download&amp;shareKey=73b2b4d7d169653b407798ceb90e837" target="_blank" rel="external">elasticsearch-5.1.1.rpm</a><br><a href="http://note.youdao.com/share/?id=79ab2b5e16b3d5b484023689fb07918e&amp;type=note#/" target="_blank" rel="external">jdk-8u73-linux-x64.gz</a></p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/11/22/ELK安装-基础/">http://www.yfshare.vip/2017/11/22/ELK安装-基础/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ELK是三个开源软件的缩写，分别表示：Elasticsearch , Logstash, Kibana , 它们都是开源软件&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="ELK" scheme="http://www.yfshare.vip/tags/ELK/"/>
    
      <category term="Elasticsearch" scheme="http://www.yfshare.vip/tags/Elasticsearch/"/>
    
      <category term="Logstash" scheme="http://www.yfshare.vip/tags/Logstash/"/>
    
      <category term="Kibana" scheme="http://www.yfshare.vip/tags/Kibana/"/>
    
  </entry>
  
  <entry>
    <title>Logstash插件</title>
    <link href="http://www.yfshare.vip/2017/11/18/Logstash%E6%8F%92%E4%BB%B6/"/>
    <id>http://www.yfshare.vip/2017/11/18/Logstash插件/</id>
    <published>2017-11-17T16:00:00.000Z</published>
    <updated>2017-11-17T15:54:56.973Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Logstash插件主要分为（常用插件）：input、filter、output、Codec等<br><a id="more"></a><br>Logstash input plugins：<a href="https://www.elastic.co/guide/en/logstash/5.1/input-plugins.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/input-plugins.html</a><br>Logstash filter plugins：<a href="https://www.elastic.co/guide/en/logstash/5.1/filter-plugins.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/filter-plugins.html</a><br>Logstash output plugins：<a href="https://www.elastic.co/guide/en/logstash/5.1/output-plugins.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/output-plugins.html</a><br>Logstash Codec plugins：<a href="https://www.elastic.co/guide/en/logstash/5.1/codec-plugins.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/codec-plugins.html</a>  </p>
<p>环境：Centos 6.6<br>　　　ElasticSearch 5.1.1<br>　　　Logstash 5.1.1<br>　　　Kibana 5.1.1  </p>
<h4 id="Logstash的codec用法之Logstash展示Nginx日志"><a href="#Logstash的codec用法之Logstash展示Nginx日志" class="headerlink" title="Logstash的codec用法之Logstash展示Nginx日志"></a>Logstash的codec用法之Logstash展示Nginx日志</h4><p>参考：<a href="https://www.elastic.co/guide/en/logstash/5.1/codec-plugins.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/codec-plugins.html</a><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">#文件必须以.<span class="keyword">conf</span>结尾，因为Logstash默认扫描*.<span class="keyword">conf</span>文件</div><div class="line">[root@ELK ~]# <span class="keyword">cat</span> /etc/logstash/              #在用grok时可以直接调用<span class="keyword">conf</span>.<span class="keyword">d</span>/nginx.<span class="keyword">conf</span> </div><div class="line"><span class="keyword">input</span> &#123;</div><div class="line">	<span class="keyword">file</span> &#123;</div><div class="line">		path =&gt; [<span class="string">"/var/log/nginx/access.log"</span>]</div><div class="line">		<span class="keyword">type</span> =&gt; <span class="string">"nginx"</span></div><div class="line">		start_position =&gt; <span class="string">"beginning"</span>  #这里参数可以写beginning和end</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">output &#123;</div><div class="line">	stdout &#123;</div><div class="line">		codec =&gt; rubydebug&#123;&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">[root@ELK ~]#</div><div class="line">[root@ELK ~]# /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/<span class="keyword">conf</span>.<span class="keyword">d</span>/nginx.<span class="keyword">conf</span> </div><div class="line">Sending Logstash's logs to /<span class="keyword">var</span>/<span class="keyword">log</span>/logstash <span class="keyword">which</span> is now configured via log4j2.properties</div><div class="line">&#123;</div><div class="line">          <span class="string">"path"</span> =&gt; <span class="string">"/var/log/nginx/access.log"</span>,</div><div class="line">    <span class="string">"@timestamp"</span> =&gt; 2016-12-14T03:39:56.805Z,</div><div class="line">      <span class="string">"@version"</span> =&gt; <span class="string">"1"</span>,</div><div class="line">          <span class="string">"host"</span> =&gt; <span class="string">"0.0.0.0"</span>,</div><div class="line">       <span class="string">"message"</span> =&gt; <span class="string">"192.168.31.100 - - [13/Dec/2016:18:22:21 +0800] \"</span>GET / HTTP/1.1\<span class="string">" 200 612 \"</span>-\<span class="string">" \"</span>curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.15.3 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\<span class="string">" \"</span>-\<span class="string">""</span>,</div><div class="line">          <span class="string">"type"</span> =&gt; <span class="string">"nginx"</span>,</div><div class="line">          <span class="string">"tags"</span> =&gt; []</div><div class="line">&#125;</div><div class="line">....</div><div class="line">#当再次请求Nginx时（即Nginx access.<span class="keyword">log</span>日志再次输出时），会打印到屏幕</div></pre></td></tr></table></figure></p>
<p>注，beginning和end区别：<br><code>beginning是文件从头开始读取</code>，<code>end是读取最新内容</code>。第一次读取后会生成缓存文件 (隐藏文件)记录读取的进度，如：<code>.sincedb_d883144359d3b4f516b37dba51fab2a2(隐藏文件)</code>。rpm安装的在<code>/var/lib/logstash/plugins/inputs/file</code>这个目录下，具体位置需要搜索。  </p>
<h4 id="Logstash的codec插件之multiline用法"><a href="#Logstash的codec插件之multiline用法" class="headerlink" title="Logstash的codec插件之multiline用法"></a>Logstash的codec插件之multiline用法</h4><p>参考：<a href="https://www.elastic.co/guide/en/logstash/5.1/plugins-codecs-multiline.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/plugins-codecs-multiline.html</a><br><a href="https://kibana.logstash.es/content/logstash/plugins/codec/multiline.html" target="_blank" rel="external">https://kibana.logstash.es/content/logstash/plugins/codec/multiline.html</a>  </p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">[root@ELK ~]<span class="comment"># cat /etc/logstash/conf.d/multiline.conf </span></div><div class="line">input &#123;</div><div class="line">	stdin &#123;</div><div class="line">		codec =&gt; multiline &#123;</div><div class="line">			pattern =&gt; <span class="string">"^\["</span></div><div class="line">			negate =&gt; <span class="keyword">true</span></div><div class="line">			what =&gt; <span class="string">"previous"</span></div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">output &#123;</div><div class="line">	stdout &#123;</div><div class="line">		codec =&gt; rubydebug&#123;&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">[root@ELK ~]<span class="comment">#</span></div><div class="line"><span class="comment">#测试配置文件语法</span></div><div class="line">[root@ELK ~]<span class="comment"># /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/conf.d/multiline.conf -t</span></div><div class="line">Sending Logstash<span class="string">'s logs to /var/log/logstash which is now configured via log4j2.properties</span></div><div class="line">Configuration OK</div><div class="line">[root@ELK ~]#</div><div class="line">[root@ELK ~]# /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/conf.d/multiline.conf</div><div class="line">Sending Logstash's logs to /<span class="keyword">var</span>/log/logstash which is now configured via log4j2.properties</div><div class="line">The stdin plugin is now waiting <span class="keyword">for</span> input:</div><div class="line">[hello world]</div><div class="line">[Windows of the world]</div><div class="line">&#123;</div><div class="line">    <span class="string">"@timestamp"</span> =&gt; <span class="number">2016</span><span class="number">-12</span><span class="number">-14</span>T07:<span class="number">53</span>:<span class="number">20.808</span>Z,</div><div class="line">      <span class="string">"@version"</span> =&gt; <span class="string">"1"</span>,</div><div class="line">          <span class="string">"host"</span> =&gt; <span class="string">"0.0.0.0"</span>,</div><div class="line">       <span class="string">"message"</span> =&gt; <span class="string">"[hello world]"</span>,</div><div class="line">          <span class="string">"tags"</span> =&gt; []</div><div class="line">&#125;</div><div class="line">Good mornning</div><div class="line">[</div><div class="line">&#123;</div><div class="line">    <span class="string">"@timestamp"</span> =&gt; <span class="number">2016</span><span class="number">-12</span><span class="number">-14</span>T07:<span class="number">54</span>:<span class="number">00.060</span>Z,</div><div class="line">      <span class="string">"@version"</span> =&gt; <span class="string">"1"</span>,</div><div class="line">          <span class="string">"host"</span> =&gt; <span class="string">"0.0.0.0"</span>,</div><div class="line">       <span class="string">"message"</span> =&gt; <span class="string">"[Windows of the world]\nGood mornning"</span>,</div><div class="line">          <span class="string">"tags"</span> =&gt; [</div><div class="line">        [<span class="number">0</span>] <span class="string">"multiline"</span></div><div class="line">    ]</div><div class="line">&#125;</div><div class="line"><span class="comment">#multiline插件是以“[”做标记，如果出现“[”，则把两个“[”之间的内容在message输出，“[”是结尾符</span></div></pre></td></tr></table></figure>
<h4 id="Logstash的filter插件之grok用法"><a href="#Logstash的filter插件之grok用法" class="headerlink" title="Logstash的filter插件之grok用法"></a>Logstash的filter插件之grok用法</h4><p>参考：<a href="https://www.elastic.co/guide/en/logstash/5.1/plugins-filters-grok.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/plugins-filters-grok.html</a><br><a href="http://kibana.logstash.es/content/logstash/plugins/filter/grok.html" target="_blank" rel="external">http://kibana.logstash.es/content/logstash/plugins/filter/grok.html</a>  </p>
<p>主要是做正则匹配，拆分<br>下面两个地址需要拨VPN才能访问：<br>官方提供的grok表达式：<a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns" target="_blank" rel="external">https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns</a><br>grok在线调试：<a href="https://grokdebug.herokuapp.com/" target="_blank" rel="external">https://grokdebug.herokuapp.com/</a><br>grok正则表达式：<a href="https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/grok-patterns" target="_blank" rel="external">https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/grok-patterns</a><br>在用grok时可以直接调用，也可以自己写，如：<br><img src="http://note.youdao.com/yws/api/personal/file/9E3F41215A5B44F98B4DE31A1D194559?method=download&amp;shareKey=694a15483adc321844d8f3ac40ff77b7" alt="image">  </p>
<p>grok里正则在这里<a href="https://grokdebug.herokuapp.com/" target="_blank" rel="external">调试</a><br><img src="http://note.youdao.com/yws/api/personal/file/CBEC3EEBC35B457CBC28DFE516A32D28?method=download&amp;shareKey=fe1269199d3998d52b92fdb53814dc6f" alt="image">  </p>
<p>#日志内容本身都是一个类似于key-value 的格式，但是格式具体的样式却是多种多样的。logstash提供filters/kv插件，帮助处理不同样式的key-value日志，变成实际的LogStash::Event数据。  </p>
<p>#kv没用会，下面是摘抄的示例<br><a href="https://kibana.logstash.es/content/logstash/plugins/filter/kv.html" target="_blank" rel="external">https://kibana.logstash.es/content/logstash/plugins/filter/kv.html</a><br><a href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-kv.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/current/plugins-filters-kv.html</a><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">#解析<span class="keyword">test</span>.<span class="keyword">log</span>文件内容</div><div class="line">[root@ELK ~]# <span class="keyword">cat</span> /root/<span class="keyword">test</span>.<span class="keyword">log</span> </div><div class="line">192.168.31.105 - - [14/<span class="keyword">Dec</span>/2016:15:17:56 +0800] <span class="string">"GET / HTTP/1.1"</span> 304 0 <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36"</span> <span class="string">"-"</span></div><div class="line">[root@ELK ~]#</div><div class="line">[root@ELK ~]# <span class="keyword">cat</span> /etc/logstash/<span class="keyword">conf</span>.<span class="keyword">d</span>/samp.<span class="keyword">conf</span> </div><div class="line"><span class="keyword">input</span> &#123;</div><div class="line">	<span class="keyword">file</span> &#123;</div><div class="line">		path =&gt; <span class="string">"/root/test.log"</span></div><div class="line">		start_position =&gt; <span class="string">"beginning"</span></div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">filter &#123;</div><div class="line">	grok &#123;</div><div class="line">		match =&gt; [<span class="string">"message"</span>,<span class="string">"%&#123;IPV4:remote_addr&#125; \- %&#123;USERNAME:remote_user&#125; \[%&#123;DATA:time_local&#125;\] (?&lt;http_request&gt;\"</span>[A-Za-z][A-Za-z]+\s*\/\s*[A-Za-z][A-Za-z]+\/[0-9][0-9]*\.[0-9][0-9]*\<span class="string">") (?&lt;status&gt;[0-9][0-9]*) (?&lt;body_bytes_sent&gt;[0-9][0-9]*) (?&lt;http_referer&gt;\"</span>[\s\S]*?\<span class="string">") (?&lt;http_user_agent&gt;\"</span>[\s\S]*?\<span class="string">") (?&lt;http_x_forwarded_for&gt;\"</span>[\s\S]*?\<span class="string">")"</span>]</div><div class="line">	&#125;</div><div class="line">    kv &#123;</div><div class="line">        source =&gt; <span class="string">"http_user_agent"</span></div><div class="line">        field_split =&gt; <span class="string">";"</span></div><div class="line">        value_split =&gt; <span class="string">"="</span></div><div class="line">        remove_field =&gt; [ <span class="string">"\\"</span>"]</div><div class="line">        &#125;</div><div class="line">	urldecode &#123;</div><div class="line">		all_fields =&gt; true</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">#这里的kv插件好像没有效果额..，kv适合有规律的拆分</div><div class="line">output &#123;</div><div class="line">	stdout &#123;</div><div class="line">		codec =&gt; rubydebug</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">[root@ELK ~]#</div><div class="line">[root@ELK ~]# /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/<span class="keyword">conf</span>.<span class="keyword">d</span>/samp.<span class="keyword">conf</span> -t</div><div class="line">Sending Logstash's logs to /<span class="keyword">var</span>/<span class="keyword">log</span>/logstash <span class="keyword">which</span> is now configured via log4j2.properties</div><div class="line">Configuration OK</div><div class="line">[root@ELK ~]# /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/<span class="keyword">conf</span>.<span class="keyword">d</span>/samp.<span class="keyword">conf</span></div><div class="line">Sending Logstash's logs to /<span class="keyword">var</span>/<span class="keyword">log</span>/logstash <span class="keyword">which</span> is now configured via log4j2.properties</div><div class="line">&#123;</div><div class="line">             <span class="string">"remote_addr"</span> =&gt; <span class="string">"192.168.31.105"</span>,</div><div class="line">         <span class="string">"body_bytes_sent"</span> =&gt; <span class="string">"0"</span>,</div><div class="line">              <span class="string">"time_local"</span> =&gt; <span class="string">"14/Dec/2016:15:17:56 +0800"</span>,</div><div class="line">                 <span class="string">"message"</span> =&gt; <span class="string">"192.168.31.105 - - [14/Dec/2016:15:17:56 +0800] \"</span>GET / HTTP/1.1\<span class="string">" 304 0 \"</span>-\<span class="string">" \"</span>Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36\<span class="string">" \"</span>-\<span class="string">""</span>,</div><div class="line">                    <span class="string">"tags"</span> =&gt; [],</div><div class="line">         <span class="string">"http_user_agent"</span> =&gt; <span class="string">"\"</span>Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36\<span class="string">""</span>,</div><div class="line">             <span class="string">"remote_user"</span> =&gt; <span class="string">"-"</span>,</div><div class="line">                    <span class="string">"path"</span> =&gt; <span class="string">"/root/test.log"</span>,</div><div class="line">              <span class="string">"@timestamp"</span> =&gt; 2016-12-14T16:05:20.443Z,</div><div class="line">            <span class="string">"http_referer"</span> =&gt; <span class="string">"\"</span>-\<span class="string">""</span>,</div><div class="line">                <span class="string">"@version"</span> =&gt; <span class="string">"1"</span>,</div><div class="line">                    <span class="string">"host"</span> =&gt; <span class="string">"0.0.0.0"</span>,</div><div class="line">    <span class="string">"http_x_forwarded_for"</span> =&gt; <span class="string">"\"</span>-\<span class="string">""</span>,</div><div class="line">            <span class="string">"http_request"</span> =&gt; <span class="string">"\"</span>GET / HTTP/1.1\<span class="string">""</span>,</div><div class="line">                  <span class="string">"status"</span> =&gt; <span class="string">"304"</span></div><div class="line">&#125;</div><div class="line">...</div><div class="line">[root@ELK ~]#</div><div class="line">#Logstash日志输出</div><div class="line">[root@ELK ~]# tail -f /<span class="keyword">var</span>/<span class="keyword">log</span>/logstash/logstash-plain.<span class="keyword">log</span> </div><div class="line">[2016-12-15T00:02:28,195][INFO ][logstash.runner          ] Using config.test_and_exit mode. Config Validation Result: OK. Exiting Logstash</div><div class="line">[2016-12-15T00:05:21,397][INFO ][logstash.pipeline        ] Starting pipeline &#123;<span class="string">"id"</span>=&gt;<span class="string">"main"</span>, <span class="string">"pipeline.workers"</span>=&gt;1, <span class="string">"pipeline.batch.size"</span>=&gt;125, <span class="string">"pipeline.batch.delay"</span>=&gt;5, <span class="string">"pipeline.max_inflight"</span>=&gt;125&#125;</div><div class="line">[2016-12-15T00:05:21,477][INFO ][logstash.pipeline        ] Pipeline main started</div><div class="line">[2016-12-15T00:05:22,156][INFO ][logstash.agent           ] Successfully started Logstash API endpoint &#123;:port=&gt;9600&#125;</div><div class="line">...</div><div class="line">[root@ELK ~]#</div></pre></td></tr></table></figure></p>
<p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">filter &#123;</div><div class="line">    ruby &#123;</div><div class="line">        init =&gt; <span class="string">"@kname = ['method','uri','verb']"</span></div><div class="line">        code =&gt; <span class="string">"</span></div><div class="line">            new_event = LogStash::Event.new(Hash[@kname.zip(event.get('request').split('|'))])</div><div class="line">            new_event.remove('@timestamp')</div><div class="line">            event.append(new_event)</div><div class="line">        "</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> [uri] &#123;</div><div class="line">        ruby &#123;</div><div class="line">            init =&gt; <span class="string">"@kname = ['url_path','url_args']"</span></div><div class="line">            code =&gt; <span class="string">"</span></div><div class="line">                new_event = LogStash::Event.new(Hash[@kname.zip(event.get('uri').split('?'))])</div><div class="line">                new_event.remove('@timestamp')</div><div class="line">                event.append(new_event)</div><div class="line">            "</div><div class="line">        &#125;</div><div class="line">        kv &#123;</div><div class="line">            prefix =&gt; <span class="string">"url_"</span></div><div class="line">            <span class="built_in">source</span> =&gt; <span class="string">"url_args"</span></div><div class="line">            field_split =&gt; <span class="string">"&amp;"</span></div><div class="line">            remove_field =&gt; [ <span class="string">"url_args"</span>, <span class="string">"uri"</span>, <span class="string">"request"</span> ]</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#解释</span></div><div class="line">Nginx 访问日志中的 <span class="variable">$request</span>，通过这段配置，可以详细切分成 method, url_path, verb, url_a, url_b ...</div><div class="line"></div><div class="line">进一步的，如果 url_args 中有过多字段，可能导致 Elasticsearch 集群因为频繁 update mapping 或者消耗太多内存在 cluster state 上而宕机。所以，更优的选择，是只保留明确有用的 url_args 内容，其他部分舍去</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">kv &#123;</div><div class="line">    prefix =&gt; <span class="string">"url_"</span></div><div class="line">    <span class="built_in">source</span> =&gt; <span class="string">"url_args"</span></div><div class="line">    field_split =&gt; <span class="string">"&amp;"</span></div><div class="line">    include_keys =&gt; [ <span class="string">"uid"</span>, <span class="string">"cip"</span> ]</div><div class="line">    remove_field =&gt; [ <span class="string">"url_args"</span>, <span class="string">"uri"</span>, <span class="string">"request"</span> ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#grok分析/var/log/secure日志</span></div><div class="line">input &#123;</div><div class="line">   file &#123;</div><div class="line">	path =&gt; [<span class="string">"/var/log/secure"</span>]</div><div class="line">	start_position =&gt; <span class="string">"end"</span></div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line">filter &#123;</div><div class="line">		grok &#123;</div><div class="line">   			match =&gt; [<span class="string">"message"</span>,<span class="string">".* sshd\[\d+\]: (?&lt;status&gt;\S+) .* (?&lt;ClientIP&gt;(?:\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;)?) .*"</span>]</div><div class="line">		&#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">    stdout &#123;</div><div class="line">		codec =&gt; rubydebug&#123;&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Logstash的filter插件之json用法"><a href="#Logstash的filter插件之json用法" class="headerlink" title="Logstash的filter插件之json用法"></a>Logstash的filter插件之json用法</h4><p>参考：<a href="https://www.elastic.co/guide/en/logstash/5.1/plugins-filters-json.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/plugins-filters-json.html</a><br><a href="https://kibana.logstash.es/content/logstash/plugins/filter/json.html" target="_blank" rel="external">https://kibana.logstash.es/content/logstash/plugins/filter/json.html</a><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">#修改Nginx日志格式</div><div class="line">[root@ELK ~]# head -32 /etc/nginx/nginx.<span class="keyword">conf</span> | tail -15</div><div class="line">#    log_format  main  '<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] <span class="string">"$request"</span> '</div><div class="line">#                      '<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> <span class="string">"$http_referer"</span> '</div><div class="line">#                      '<span class="string">"$http_user_agent"</span> <span class="string">"$http_x_forwarded_for"</span>';</div><div class="line"></div><div class="line">    log_format json '&#123;<span class="string">"clinet"</span>:<span class="string">"$remote_addr"</span>,'</div><div class="line">		'<span class="string">"@timestamp"</span>:<span class="string">"$time_iso8601"</span>,'</div><div class="line">		'<span class="string">"@version"</span>:<span class="string">"1"</span>,'</div><div class="line">		'<span class="string">"host"</span>:<span class="string">"$server_addr"</span>,'</div><div class="line">		'<span class="string">"size"</span>:<span class="variable">$body_bytes_sent</span>,'</div><div class="line">		'<span class="string">"responsetime"</span>:<span class="variable">$request_time</span>,'</div><div class="line">		'<span class="string">"domain"</span>:<span class="string">"$host"</span>,'</div><div class="line">		'<span class="string">"status"</span>:<span class="string">"$status"</span>,'</div><div class="line">		'<span class="string">"ua"</span>:<span class="string">"$http_user_agent"</span>&#125;';</div><div class="line"></div><div class="line">    access_log  /<span class="keyword">var</span>/<span class="keyword">log</span>/nginx/access.<span class="keyword">log</span>  json;</div><div class="line">[root@ELK ~]#</div><div class="line">[root@ELK ~]# <span class="keyword">cat</span> /etc/logstash/<span class="keyword">conf</span>.<span class="keyword">d</span>/json.<span class="keyword">conf</span> </div><div class="line"><span class="keyword">input</span> &#123;</div><div class="line">	<span class="keyword">file</span> &#123;</div><div class="line">		path =&gt; [<span class="string">"/var/log/nginx/access.log"</span>]</div><div class="line">		<span class="keyword">type</span> =&gt; <span class="string">"Nginx"</span></div><div class="line">		start_position =&gt; <span class="string">"end"</span></div><div class="line">		codec =&gt; json</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">output &#123;</div><div class="line">	stdout &#123;</div><div class="line">		codec =&gt; rubydebug&#123;&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">[root@ELK ~]#</div><div class="line">[root@ELK ~]# /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/<span class="keyword">conf</span>.<span class="keyword">d</span>/json.<span class="keyword">conf</span> -t</div><div class="line">Sending Logstash's logs to /<span class="keyword">var</span>/<span class="keyword">log</span>/logstash <span class="keyword">which</span> is now configured via log4j2.properties</div><div class="line">Configuration OK</div><div class="line">[root@ELK ~]#</div><div class="line">[root@ELK ~]# /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/<span class="keyword">conf</span>.<span class="keyword">d</span>/json.<span class="keyword">conf</span></div><div class="line">Sending Logstash's logs to /<span class="keyword">var</span>/<span class="keyword">log</span>/logstash <span class="keyword">which</span> is now configured via log4j2.properties</div><div class="line">&#123;</div><div class="line">            <span class="string">"path"</span> =&gt; <span class="string">"/var/log/nginx/access.log"</span>,</div><div class="line">      <span class="string">"@timestamp"</span> =&gt; 2016-12-15T07:33:00.000Z,</div><div class="line">            <span class="string">"size"</span> =&gt; 0,</div><div class="line">          <span class="string">"domain"</span> =&gt; <span class="string">"192.168.31.100"</span>,</div><div class="line">        <span class="string">"@version"</span> =&gt; <span class="string">"1"</span>,</div><div class="line">            <span class="string">"host"</span> =&gt; <span class="string">"192.168.31.100"</span>,</div><div class="line">    <span class="string">"responsetime"</span> =&gt; 0.0,</div><div class="line">              <span class="string">"ua"</span> =&gt; <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36"</span>,</div><div class="line">            <span class="string">"type"</span> =&gt; <span class="string">"Nginx"</span>,</div><div class="line">          <span class="string">"clinet"</span> =&gt; <span class="string">"192.168.31.105"</span>,</div><div class="line">          <span class="string">"status"</span> =&gt; <span class="string">"304"</span>,</div><div class="line">            <span class="string">"tags"</span> =&gt; []</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="Logstash的filter插件之geoip用法"><a href="#Logstash的filter插件之geoip用法" class="headerlink" title="Logstash的filter插件之geoip用法"></a>Logstash的filter插件之geoip用法</h4><p>参考：<a href="https://www.elastic.co/guide/en/logstash/5.1/plugins-filters-geoip.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/plugins-filters-geoip.html</a><br><a href="https://kibana.logstash.es/content/logstash/plugins/filter/geoip.html" target="_blank" rel="external">https://kibana.logstash.es/content/logstash/plugins/filter/geoip.html</a><br>GeoIP 是最常见的免费IP地址归类查询库<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># logstash v5.6.4</span></div><div class="line"><span class="comment"># logstash 配置文件</span></div><div class="line"><span class="comment"># cat logstash_10.20.conf</span></div><div class="line"><span class="keyword">input</span> &#123;</div><div class="line">   file &#123;</div><div class="line">	<span class="attr">path</span> =&gt; [<span class="string">"/root/test.log"</span>]</div><div class="line">	<span class="attr">start_position</span> =&gt; <span class="string">"end"</span></div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">filter</span> &#123;</div><div class="line">	grok &#123;</div><div class="line">   		<span class="attr">match</span> =&gt; [<span class="string">"message"</span>,<span class="string">"%&#123;IPV4:remote_addr&#125; [\-] %&#123;USERNAME:remote_user&#125; \[%&#123;DATA:time_local&#125;\] \"(?&lt;request&gt;[^\"]*)\" (?&lt;status&gt;\d+) (?&lt;body_bytes_sent&gt;\d+) \"(?&lt;http_referer&gt;[^\"]*)\" \"(?&lt;http_user_agent&gt;[^\"]*)\" \"%&#123;IPV4:http_x_forwarded_for&#125;"</span>]	&#125;</div><div class="line">	<span class="keyword">geoip</span> &#123;</div><div class="line">		<span class="attr">source</span> =&gt; <span class="string">"http_x_forwarded_for"</span></div><div class="line">		<span class="attr">fields</span> =&gt; [<span class="string">"ip"</span>,<span class="string">"city_name"</span>,<span class="string">"country_name"</span>,<span class="string">"location"</span>,<span class="string">"latitude"</span>,<span class="string">"longitude"</span>,<span class="string">"timezone"</span>,<span class="string">"region_name"</span>]</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">output</span> &#123;</div><div class="line">	stdout &#123;</div><div class="line">		<span class="attr">codec</span> =&gt; rubydebug&#123;&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#nginx 日志</span></div><div class="line">100.116.46.20 - - [15/Nov/2017:11:59:34 +0800] <span class="string">"GET /static/js/util/plugins/cordova-plugin-geolocation/www/geolocation.js HTTP/1.0"</span> 200 8629 <span class="string">"https://qian.julend.com/static/pageHtml/loan.html?s_qian=iOS"</span> <span class="string">"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 GrowingIO/0.9.47-20170111143620 (4303466304)"</span> <span class="string">"27.8.223.7"</span></div><div class="line"></div><div class="line"><span class="comment">#nginx grok匹配</span></div><div class="line">%&#123;IPV4:remote_addr&#125; [\-] %&#123;USERNAME:remote_user&#125; \[%&#123;DATA:time_local&#125;\] \<span class="string">"(?&lt;request&gt;[^\"]*)\" (?&lt;status&gt;\d+) (?&lt;body_bytes_sent&gt;\d+) \"(?&lt;http_referer&gt;[^\"]*)\" \"(?&lt;http_user_agent&gt;[^\"]*)\" \"%&#123;IPV4:http_x_forwarded_for&#125;</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/conf.d/logstash_10.20.conf --path.data /data/elk_data/logstash/</span></div><div class="line">dataSending Logstash<span class="string">'s logs to /data/elk_data/logstash/logs which is now configured via log4j2.properties</span></div><div class="line">&#123;</div><div class="line">             "remote_addr" =&gt; "100.116.46.20",</div><div class="line">                 "request" =&gt; "GET /static/js/util/plugins/cordova-plugin-geolocation/www/geolocation.js HTTP/1.0",</div><div class="line">                   "geoip" =&gt; &#123;</div><div class="line">           "city_name" =&gt; "Chongqing",</div><div class="line">            "timezone" =&gt; "Asia/Shanghai",</div><div class="line">                  "ip" =&gt; "27.8.223.7",</div><div class="line">            "latitude" =&gt; 29.5628,</div><div class="line">        "country_name" =&gt; "China",</div><div class="line">         "region_name" =&gt; "Chongqing",</div><div class="line">            "location" =&gt; &#123;</div><div class="line">            "lon" =&gt; 106.5528,</div><div class="line">            "lat" =&gt; 29.5628</div><div class="line">        &#125;,</div><div class="line">           "longitude" =&gt; 106.5528</div><div class="line">    &#125;,</div><div class="line">         "body_bytes_sent" =&gt; "8629",</div><div class="line">              "time_local" =&gt; "15/Nov/2017:11:59:34 +0800",</div><div class="line">                 "message" =&gt; "100.116.46.20 - - [15/Nov/2017:11:59:34 +0800] \"GET /static/js/util/plugins/cordova-plugin-geolocation/www/geolocation.js HTTP/1.0\" 200 8629 \"https://qian.julend.com/static/pageHtml/loan.html?s_qian=iOS\" \"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 GrowingIO/0.9.47-20170111143620 (4303466304)\" \"27.8.223.7\"",</div><div class="line">         "http_user_agent" =&gt; "Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 GrowingIO/0.9.47-20170111143620(4303466304)", </div><div class="line">             "remote_user" =&gt; "-",</div><div class="line">                    "path" =&gt; "/root/test.log",</div><div class="line">              "@timestamp" =&gt; 2017-11-15T06:16:03.829Z,</div><div class="line">            "http_referer" =&gt; "https://qian.julend.com/static/pageHtml/loan.html?s_qian=iOS",</div><div class="line">                "@version" =&gt; "1",</div><div class="line">                    "host" =&gt; "elk-cluster3",</div><div class="line">    "http_x_forwarded_for" =&gt; "27.8.223.7",</div><div class="line">                  "status" =&gt; "200"</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 去掉geoip后，nginx日志拆分</span></div><div class="line">&#123;</div><div class="line">             <span class="string">"remote_addr"</span> =&gt; <span class="string">"100.116.46.20"</span>,</div><div class="line">                 <span class="string">"request"</span> =&gt; <span class="string">"GET /static/js/util/plugins/cordova-plugin-geolocation/www/geolocation.js HTTP/1.0"</span>,</div><div class="line">         <span class="string">"body_bytes_sent"</span> =&gt; <span class="string">"8629"</span>,</div><div class="line">              <span class="string">"time_local"</span> =&gt; <span class="string">"15/Nov/2017:10:59:34 +0800"</span>,</div><div class="line">                 <span class="string">"message"</span> =&gt; <span class="string">"100.116.46.20 - - [15/Nov/2017:10:59:34 +0800] \"GET /static/js/util/plugins/cordova-plugin-geolocation/www/geolocation.js HTTP/1.0\" 200 8629 \"https://qian.julend.com/static/pageHtml/loan.html?s_qian=iOS\" \"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 GrowingIO/0.9.47-20170111143620 (4303466304)\" \"27.8.223.7\""</span>,</div><div class="line">         <span class="string">"http_user_agent"</span> =&gt; <span class="string">"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 GrowingIO/0.9.47-20170111143620 (4303466304)"</span>,</div><div class="line">             <span class="string">"remote_user"</span> =&gt; <span class="string">"-"</span>,</div><div class="line">                    <span class="string">"path"</span> =&gt; <span class="string">"/root/test.log"</span>,</div><div class="line">              <span class="string">"@timestamp"</span> =&gt; 2017-11-15T06:01:24.940Z,</div><div class="line">            <span class="string">"http_referer"</span> =&gt; <span class="string">"https://qian.julend.com/static/pageHtml/loan.html?s_qian=iOS"</span>,</div><div class="line">                <span class="string">"@version"</span> =&gt; <span class="string">"1"</span>,</div><div class="line">                    <span class="string">"host"</span> =&gt; <span class="string">"elk-cluster3"</span>,</div><div class="line">    <span class="string">"http_x_forwarded_for"</span> =&gt; <span class="string">"27.8.223.7"</span>,</div><div class="line">                  <span class="string">"status"</span> =&gt; <span class="string">"200"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Logstash的filter插件之date时间处理"><a href="#Logstash的filter插件之date时间处理" class="headerlink" title="Logstash的filter插件之date时间处理"></a>Logstash的filter插件之date时间处理</h4><p>参考：<a href="https://www.elastic.co/guide/en/logstash/5.6/plugins-filters-date.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.6/plugins-filters-date.html</a><br><a href="https://kibana.logstash.es/content/logstash/plugins/filter/date.html" target="_blank" rel="external">https://kibana.logstash.es/content/logstash/plugins/filter/date.html</a><br>filters/date 插件可以用来转换你的日志记录中的时间字符串，变成 LogStash::Timestamp 对象，然后转存到 @timestamp 字段里<br><code>注意：因为在稍后的 outputs/elasticsearch 中常用的 %{+YYYY.MM.dd} 这种写法必须读取 @timestamp 数据，所以一定不要直接删掉这个字段保留自己的字段，而是应该用 filters/date 转换后删除自己的字段！</code>  </p>
<p><code>建议打开 Nginx 的 access_log 配置项的 buffer 参数，对极限响应性能有极大提升！</code></p>
<p>filters/date 插件支持五种时间格式  </p>
<ul>
<li>ISO8601<br>类似 “2011-04-19T03:44:01.103Z” 这样的格式。具体Z后面可以有 “08:00”也可以没有，”.103”这个也可以没有。常用场景里来说，Nginx 的 log_format 配置里就可以使用 $time_iso8601 变量来记录请求时间成这种格式。  </li>
<li>UNIX<br>UNIX 时间戳格式，记录的是从 1970 年起始至今的总秒数。Squid 的默认日志格式中就使用了这种格式。  </li>
<li>UNIX_MS<br>这个时间戳则是从 1970 年起始至今的总毫秒数。据我所知，JavaScript 里经常使用这个时间格式。  </li>
<li>TAI64N<br>TAI64N 格式比较少见，是这个样子的：@4000000052f88ea32489532c。我目前只知道常见应用中， qmail 会用这个格式。  </li>
<li>Joda-Time 库<br>Logstash 内部使用了 Java 的 Joda 时间库来作时间处理。所以我们可以使用 Joda 库所支持的时间格式来作具体定义。Joda 时间格式定义见下表：</li>
</ul>
<p>时间格式：  </p>
<table>
<thead>
<tr>
<th>Symbol</th>
<th>Meaning</th>
<th>Presentation</th>
<th>Examples</th>
</tr>
</thead>
<tbody>
<tr>
<td>G</td>
<td>era</td>
<td>text</td>
<td>AD</td>
</tr>
<tr>
<td>C</td>
<td>century of era (&gt;=0)</td>
<td>number</td>
<td>20</td>
</tr>
<tr>
<td>Y</td>
<td>year of era (&gt;=0)</td>
<td>year</td>
<td>1996</td>
</tr>
<tr>
<td>x</td>
<td>weekyear</td>
<td>year</td>
<td>1996</td>
</tr>
<tr>
<td>w</td>
<td>week of weekyear</td>
<td>number</td>
<td>27</td>
</tr>
<tr>
<td>e</td>
<td>day of week</td>
<td>number</td>
<td>2</td>
</tr>
<tr>
<td>E</td>
<td>day of week</td>
<td>text</td>
<td>Tuesday; Tue</td>
</tr>
<tr>
<td>y</td>
<td>year</td>
<td>year</td>
<td>1996</td>
</tr>
<tr>
<td>D</td>
<td>day of year</td>
<td>number</td>
<td>189</td>
</tr>
<tr>
<td>M</td>
<td>month of year</td>
<td>month</td>
<td>July; Jul; 07</td>
</tr>
<tr>
<td>d</td>
<td>day of month</td>
<td>number</td>
<td>10</td>
</tr>
<tr>
<td>a</td>
<td>halfday of day</td>
<td>text</td>
<td>PM</td>
</tr>
<tr>
<td>K</td>
<td>hour of halfday (0~11)</td>
<td>number</td>
<td>0</td>
</tr>
<tr>
<td>h</td>
<td>clockhour of halfday (1~12)</td>
<td>number</td>
<td>12</td>
</tr>
<tr>
<td>H</td>
<td>hour of day (0~23)</td>
<td>number</td>
<td>0</td>
</tr>
<tr>
<td>k</td>
<td>clockhour of day (1~24)</td>
<td>number</td>
<td>24</td>
</tr>
<tr>
<td>m</td>
<td>minute of hour</td>
<td>number</td>
<td>30</td>
</tr>
<tr>
<td>s</td>
<td>second of minute</td>
<td>number</td>
<td>55</td>
</tr>
<tr>
<td>S</td>
<td>fraction of second</td>
<td>number</td>
<td>978</td>
</tr>
<tr>
<td>z</td>
<td>time zone</td>
<td>text</td>
<td>Pacific Standard Time; PST</td>
</tr>
<tr>
<td>Z</td>
<td>time zone offset/id</td>
<td>zone</td>
<td>-0800; -08:00; America/Los_Angeles</td>
</tr>
<tr>
<td>‘</td>
<td>escape for text</td>
<td>delimiter</td>
<td></td>
</tr>
<tr>
<td>‘’</td>
<td>single quote</td>
<td>literal</td>
<td>‘</td>
</tr>
</tbody>
</table>
<p><a href="http://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html" target="_blank" rel="external">http://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html</a>  </p>
<p>Joda 时间格式的配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">filter &#123;</div><div class="line">    grok &#123;</div><div class="line">        match =&gt; [<span class="string">"message"</span>, <span class="string">"%&#123;HTTPDATE:logdate&#125;"</span>]</div><div class="line">    &#125;</div><div class="line">    date &#123;</div><div class="line">        match =&gt; [<span class="string">"logdate"</span>, <span class="string">"dd/MMM/yyyy:HH:mm:ss Z"</span>]</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意：时区偏移量只需要用一个字母 <code>Z</code> 即可  </p>
<h4 id="Logstash的filter插件之secure日志切割"><a href="#Logstash的filter插件之secure日志切割" class="headerlink" title="Logstash的filter插件之secure日志切割"></a>Logstash的filter插件之secure日志切割</h4><p>参考：<a href="https://www.elastic.co/guide/en/logstash/5.6/plugins-filters-mutate.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.6/plugins-filters-mutate.html</a><br>这个需要配合filebeat操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># grep -iv '#' /etc/filebeat/filebeat.yml |grep -iv '^$'</span></div><div class="line">filebeat.prospectors:</div><div class="line">- input_type: <span class="built_in">log</span></div><div class="line">  paths:</div><div class="line">    - /var/<span class="built_in">log</span>/secure</div><div class="line">  document_type: secure_2.250</div><div class="line">  exclude_lines: [<span class="string">"system"</span>]      <span class="comment">#过滤不含system日志</span></div><div class="line">  include_lines: [<span class="string">"Accepted"</span>]    <span class="comment">#过滤含Accepted的日志</span></div><div class="line">output.logstash:</div><div class="line">  hosts: [<span class="string">"192.168.1.41:5044"</span>]</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#logstash配置文件</span></div><div class="line"><span class="comment"># cat logstash_test.conf</span></div><div class="line">input &#123;</div><div class="line">	beats &#123;</div><div class="line">		port =&gt; 5045</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">filter &#123;</div><div class="line">	<span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">'secure_2.250'</span>&#123;</div><div class="line">		grok &#123;</div><div class="line">   			match =&gt; [<span class="string">"message"</span>,<span class="string">".* sshd\[\d+\]: (?&lt;status&gt;\S+) .* (?&lt;ClientIP&gt;(?:\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;)?) .*"</span>]        <span class="comment">#正则过滤secure日志，且赋值到message字段</span></div><div class="line">		&#125;</div><div class="line"> 		mutate&#123;</div><div class="line">     			split =&gt; [<span class="string">"message"</span>,<span class="string">" "</span>]     <span class="comment">#把message字段以空格拆分，message字段的值来自grok</span></div><div class="line">	        	add_field =&gt;   &#123;</div><div class="line">        	    		<span class="string">"username"</span> =&gt; <span class="string">"%&#123;[message][8]&#125;"</span>         <span class="comment">#数组是以0开始的，第9个字段在数组里角标为8</span></div><div class="line">	            		<span class="string">"loginip"</span> =&gt; <span class="string">"%&#123;[message][10]&#125;"</span></div><div class="line">        	    		<span class="string">"login_result"</span> =&gt; <span class="string">"%&#123;[message][5]&#125;"</span></div><div class="line">        		&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">	stdout &#123;</div><div class="line">		codec =&gt; rubydebug&#123;&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#输出结果</span></div><div class="line">&#123;</div><div class="line">          <span class="string">"offset"</span> =&gt; 136859,</div><div class="line">      <span class="string">"input_type"</span> =&gt; <span class="string">"log"</span>,</div><div class="line">          <span class="string">"source"</span> =&gt; <span class="string">"/var/log/secure"</span>,</div><div class="line">    <span class="string">"login_result"</span> =&gt; <span class="string">"Accepted"</span>,</div><div class="line">         <span class="string">"message"</span> =&gt; [</div><div class="line">        [ 0] <span class="string">"Nov"</span>,</div><div class="line">        [ 1] <span class="string">"16"</span>,</div><div class="line">        [ 2] <span class="string">"14:38:14"</span>,</div><div class="line">        [ 3] <span class="string">"localhost"</span>,</div><div class="line">        [ 4] <span class="string">"sshd[9305]:"</span>,</div><div class="line">        [ 5] <span class="string">"Accepted"</span>,</div><div class="line">        [ 6] <span class="string">"publickey"</span>,</div><div class="line">        [ 7] <span class="string">"for"</span>,</div><div class="line">        [ 8] <span class="string">"yfshare"</span>,</div><div class="line">        [ 9] <span class="string">"from"</span>,</div><div class="line">        [10] <span class="string">"192.168.1.123"</span>,</div><div class="line">        [11] <span class="string">"port"</span>,</div><div class="line">        [12] <span class="string">"2269"</span>,</div><div class="line">        [13] <span class="string">"ssh2:"</span>,</div><div class="line">        [14] <span class="string">"RSA"</span>,</div><div class="line">        [15] <span class="string">"51:37:66:2f:2b:c0:74:d1:0b:15:f8:9c:7f:84:64:0a"</span></div><div class="line">    ],</div><div class="line">            <span class="string">"type"</span> =&gt; <span class="string">"secure_2.250"</span>,</div><div class="line">        <span class="string">"ClientIP"</span> =&gt; <span class="string">"192.168.1.123"</span>,</div><div class="line">            <span class="string">"tags"</span> =&gt; [</div><div class="line">        [0] <span class="string">"beats_input_codec_plain_applied"</span></div><div class="line">    ],</div><div class="line">      <span class="string">"@timestamp"</span> =&gt; 2017-11-16T06:38:19.012Z,</div><div class="line">         <span class="string">"loginip"</span> =&gt; <span class="string">"192.168.1.123"</span>,</div><div class="line">        <span class="string">"@version"</span> =&gt; <span class="string">"1"</span>,</div><div class="line">            <span class="string">"beat"</span> =&gt; &#123;</div><div class="line">            <span class="string">"name"</span> =&gt; <span class="string">"localhost"</span>,</div><div class="line">        <span class="string">"hostname"</span> =&gt; <span class="string">"localhost"</span>,</div><div class="line">         <span class="string">"version"</span> =&gt; <span class="string">"5.6.4"</span></div><div class="line">    &#125;,</div><div class="line">            <span class="string">"host"</span> =&gt; <span class="string">"localhost"</span>,</div><div class="line">          <span class="string">"status"</span> =&gt; <span class="string">"Accepted"</span>,</div><div class="line">        <span class="string">"username"</span> =&gt; <span class="string">"yfshare"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在Kibana上的Visualize上选择Data Table。<br><img src="https://note.youdao.com/yws/api/personal/file/D6AC34D06690457AB5DBA55FC9A7768E?method=download&amp;shareKey=90c8da2df75c8d76924f8127a5e586a4" alt="Kianan_Visualize_dataTable"><br>如果报上面的错误<code>no cached mapping for this field. refresh field list from the management &gt; index patterns pageTransform</code><br>原因是我们自己新增字段后，Kibana上index是之前加上的，新增字段不存在会报错，刷新下index即可<br>解决方案是：<code>management &gt; index patterns</code>，刷新对应的index即可<br><img src="https://note.youdao.com/yws/api/personal/file/52309F704287411BA92143E8BEE341D0?method=download&amp;shareKey=55aa29e1eb3960f040f21e887c82c4fb" alt="Kianan_Visualize_dataTable">  </p>
<h4 id="Logstash的output插件之发生email"><a href="#Logstash的output插件之发生email" class="headerlink" title="Logstash的output插件之发生email"></a>Logstash的output插件之发生email</h4><p>参考：<a href="https://www.elastic.co/guide/en/logstash/5.1/plugins-outputs-email.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.1/plugins-outputs-email.html</a><br><a href="https://kibana.logstash.es/content/logstash/plugins/output/email.html" target="_blank" rel="external">https://kibana.logstash.es/content/logstash/plugins/output/email.html</a><br>outputs/email 插件支持 SMTP 协议和 sendmail 两种方式，通过 <code>via</code> 参数设置。SMTP 方式有较多的 options 参数可配置。sendmail 只能利用本机上的 sendmail 服务来完成  </p>
<p>126 邮箱发送到 qq 邮箱示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">output &#123;</div><div class="line">    email &#123;</div><div class="line">        port           =&gt;    <span class="string">"25"</span></div><div class="line">        address        =&gt;    <span class="string">"smtp.126.com"</span></div><div class="line">        username       =&gt;    <span class="string">"test@126.com"</span></div><div class="line">        password       =&gt;    <span class="string">""</span></div><div class="line">        authentication =&gt;    <span class="string">"plain"</span></div><div class="line">        use_tls        =&gt;    <span class="literal">true</span></div><div class="line">        from           =&gt;    <span class="string">"test@126.com"</span></div><div class="line">        subject        =&gt;    <span class="string">"Warning: %&#123;title&#125;"</span></div><div class="line">        to             =&gt;    <span class="string">"test@qq.com"</span></div><div class="line">        via            =&gt;    <span class="string">"smtp"</span></div><div class="line">        body           =&gt;    <span class="string">"%&#123;message&#125;"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="Logstash的output插件之发生HDFS"><a href="#Logstash的output插件之发生HDFS" class="headerlink" title="Logstash的output插件之发生HDFS"></a>Logstash的output插件之发生HDFS</h4><p>参考：<a href="https://www.elastic.co/guide/en/logstash/5.6/plugins-outputs-webhdfs.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.6/plugins-outputs-webhdfs.html</a><br><a href="https://kibana.logstash.es/content/logstash/plugins/output/hdfs.html" target="_blank" rel="external">https://kibana.logstash.es/content/logstash/plugins/output/hdfs.html</a><br>该插件最初来源于社区，目前已被官方收录，Logstash 5.6支持，使用的是Hadoop的 WebHDFS 接口，其本质是发送 POST 数据<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">  ...</div><div class="line">&#125;</div><div class="line">filter &#123;</div><div class="line">  ...</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">  webhdfs &#123;</div><div class="line">    host =&gt; <span class="string">"127.0.0.1"</span>                 <span class="comment"># (required)</span></div><div class="line">    port =&gt; 50070                       <span class="comment"># (optional, default: 50070)</span></div><div class="line">    path =&gt; <span class="string">"/user/logstash/dt=%&#123;+YYYY-MM-dd&#125;/logstash-%&#123;+HH&#125;.log"</span>  <span class="comment"># (required)</span></div><div class="line">    user =&gt; <span class="string">"hue"</span>                       <span class="comment"># (required)</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>更多插件请见：<a href="https://kibana.logstash.es/content/logstash/plugins/filter/" target="_blank" rel="external">https://kibana.logstash.es/content/logstash/plugins/filter/</a>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/11/18/Logstash插件/">http://www.yfshare.vip/2017/11/18/Logstash插件/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Logstash插件主要分为（常用插件）：input、filter、output、Codec等&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="ELK" scheme="http://www.yfshare.vip/tags/ELK/"/>
    
      <category term="Logstash" scheme="http://www.yfshare.vip/tags/Logstash/"/>
    
      <category term="插件" scheme="http://www.yfshare.vip/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch监控相关</title>
    <link href="http://www.yfshare.vip/2017/11/14/Elasticsearch%E7%9B%91%E6%8E%A7%E7%9B%B8%E5%85%B3/"/>
    <id>http://www.yfshare.vip/2017/11/14/Elasticsearch监控相关/</id>
    <published>2017-11-14T15:05:33.000Z</published>
    <updated>2017-11-14T15:08:38.845Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Elasticsearch相关监控接口<br><a id="more"></a></p>
<h4 id="监控相关接口"><a href="#监控相关接口" class="headerlink" title="监控相关接口"></a>监控相关接口</h4><h5 id="集群健康状态"><a href="#集群健康状态" class="headerlink" title="集群健康状态"></a>集群健康状态</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@ELK-test ~]<span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_cluster/health?pretty</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"cluster_name"</span> : <span class="string">"Julend_ES-cluster"</span>,</div><div class="line">  <span class="string">"status"</span> : <span class="string">"green"</span>,</div><div class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</div><div class="line">  <span class="string">"number_of_nodes"</span> : 3,</div><div class="line">  <span class="string">"number_of_data_nodes"</span> : 3,</div><div class="line">  <span class="string">"active_primary_shards"</span> : 5929,</div><div class="line">  <span class="string">"active_shards"</span> : 11859,</div><div class="line">  <span class="string">"relocating_shards"</span> : 0,</div><div class="line">  <span class="string">"initializing_shards"</span> : 0,</div><div class="line">  <span class="string">"unassigned_shards"</span> : 0,</div><div class="line">  <span class="string">"delayed_unassigned_shards"</span> : 0,</div><div class="line">  <span class="string">"number_of_pending_tasks"</span> : 0,</div><div class="line">  <span class="string">"number_of_in_flight_fetch"</span> : 0,</div><div class="line">  <span class="string">"task_max_waiting_in_queue_millis"</span> : 0,</div><div class="line">  <span class="string">"active_shards_percent_as_number"</span> : 100.0</div><div class="line">&#125;</div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>status状态信息：  </p>
<ul>
<li>green（绿灯）：所有分片正常运行，集群非常健康</li>
<li>yellow（黄灯）：所有主分片正常运行，但副本分片有缺失。这种情况指Elasticsearch当前是正常运行的，但有一定风险</li>
<li>red（红灯）：有主分片缺失。这部分数据完全不可用。而Elasticsearch在写入端是简单的取余算法，轮到这个分片上的数据也会持续写入报错</li>
</ul>
<p>其他数据：  </p>
<ul>
<li><code>number_of_nodes</code>: 集群内的总节点数</li>
<li><code>number_of_data_nodes</code>: 集群内的总数据节点数</li>
<li><code>active_primary_shards</code>：集群内所有索引的主分片总数</li>
<li><code>active_shards</code>: 集群内所有索引的分片总数</li>
<li><code>relocating_shards</code>：正在迁移的分片数</li>
<li><code>Initializing_shards</code>：正在初始化的分片数</li>
<li><code>unassigned_shards</code>：未分配到具体节点上的分片数</li>
<li><code>delayed_unassigned_shards</code>：延时待分配到具体节点上的分片数</li>
</ul>
<p>level请求参数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -XGET -u elastic:admin@julend  http://localhost:9200/_cluster/health?level=indices</div></pre></td></tr></table></figure></p>
<h5 id="节点状态"><a href="#节点状态" class="headerlink" title="节点状态"></a>节点状态</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_nodes/stats?pretty=true</span></div><div class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</div><div class="line">                                 Dload  Upload   Total   Spent    Left  Speed</div><div class="line">100 42846  100 42846    0     0   5123      0  0:00:08  0:00:08 --:--:-- 12874</div><div class="line">&#123;</div><div class="line">  <span class="string">"_nodes"</span> : &#123;</div><div class="line">    <span class="string">"total"</span> : 3,</div><div class="line">    <span class="string">"successful"</span> : 3,</div><div class="line">    <span class="string">"failed"</span> : 0</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"cluster_name"</span> : <span class="string">"Julend_ES-cluster"</span>,</div><div class="line">  <span class="string">"nodes"</span> : &#123;</div><div class="line">    <span class="string">"mXtk8dQeQh-amui-d5pVoA"</span> : &#123;</div><div class="line">      <span class="string">"timestamp"</span> : 1509868787579,</div><div class="line">      <span class="string">"name"</span> : <span class="string">"Julend_es1"</span>,</div><div class="line">      <span class="string">"transport_address"</span> : <span class="string">"192.168.1.41:9300"</span>,</div><div class="line">      <span class="string">"host"</span> : <span class="string">"192.168.1.41"</span>,</div><div class="line">      <span class="string">"ip"</span> : <span class="string">"192.168.1.41:9300"</span>,</div><div class="line">      <span class="string">"roles"</span> : [</div><div class="line">        <span class="string">"master"</span>,</div><div class="line">        <span class="string">"data"</span>,</div><div class="line">        <span class="string">"ingest"</span></div><div class="line">      ],</div><div class="line">...</div></pre></td></tr></table></figure>
<h5 id="索引信息"><a href="#索引信息" class="headerlink" title="索引信息"></a>索引信息</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_nodes/stats?pretty=true</span></div><div class="line">...</div><div class="line">        <span class="string">"store"</span> : &#123;</div><div class="line">          <span class="string">"size_in_bytes"</span> : 38046324034,</div><div class="line">          <span class="string">"throttle_time_in_millis"</span> : 0</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"indexing"</span> : &#123;</div><div class="line">          <span class="string">"index_total"</span> : 21895145,</div><div class="line">          <span class="string">"index_time_in_millis"</span> : 4513185,</div><div class="line">          <span class="string">"index_current"</span> : 0,</div><div class="line">          <span class="string">"index_failed"</span> : 0,</div><div class="line">          <span class="string">"delete_total"</span> : 0,</div><div class="line">          <span class="string">"delete_time_in_millis"</span> : 0,</div><div class="line">          <span class="string">"delete_current"</span> : 0,</div><div class="line">          <span class="string">"noop_update_total"</span> : 0,</div><div class="line">          <span class="string">"is_throttled"</span> : <span class="literal">false</span>,</div><div class="line">          <span class="string">"throttle_time_in_millis"</span> : 0</div><div class="line">        &#125;,</div><div class="line">...</div></pre></td></tr></table></figure>
<ul>
<li><code>docs.count</code> 是节点上存储的数据条目总数</li>
<li><code>store.size_in_bytes</code> 是节点上存储的数据占用磁盘实际大小</li>
<li><code>store.throttle_time_in_millis</code> 则是Elasticsearch进程在做segment merge时出现磁盘限速的时长。如果在Elasticsearch日志中经常看到限速声明，则这个值也会偏大</li>
<li><code>indexing.index_total</code> 是一个递增的累计数，表示节点完成的数据写入总次数</li>
<li><code>indexing.delete_total</code> 记录删除的数据条数</li>
<li><code>indexing.is_throttled</code> 为Elasticsearch 2.0新增计数，因为从此Elasticsearch开始自动管理throttle</li>
</ul>
<h5 id="读取性能"><a href="#读取性能" class="headerlink" title="读取性能"></a>读取性能</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_nodes/stats?pretty=true</span></div><div class="line">...</div><div class="line">        <span class="string">"get"</span> : &#123;</div><div class="line">          <span class="string">"total"</span> : 167,</div><div class="line">          <span class="string">"time_in_millis"</span> : 18,</div><div class="line">          <span class="string">"exists_total"</span> : 167,</div><div class="line">          <span class="string">"exists_time_in_millis"</span> : 18,</div><div class="line">          <span class="string">"missing_total"</span> : 0,</div><div class="line">          <span class="string">"missing_time_in_millis"</span> : 0,</div><div class="line">          <span class="string">"current"</span> : 0</div><div class="line">        &#125;,</div><div class="line">...</div></pre></td></tr></table></figure>
<ul>
<li><code>get</code> 显示的是直接使用<code>_id</code>读取数据的状态</li>
</ul>
<h5 id="搜索性能"><a href="#搜索性能" class="headerlink" title="搜索性能"></a>搜索性能</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_nodes/stats?pretty=true</span></div><div class="line">...</div><div class="line">        <span class="string">"search"</span> : &#123;</div><div class="line">          <span class="string">"open_contexts"</span> : 0,</div><div class="line">          <span class="string">"query_total"</span> : 10560,</div><div class="line">          <span class="string">"query_time_in_millis"</span> : 12189,</div><div class="line">          <span class="string">"query_current"</span> : 0,</div><div class="line">          <span class="string">"fetch_total"</span> : 7078,</div><div class="line">          <span class="string">"fetch_time_in_millis"</span> : 3383,</div><div class="line">          <span class="string">"fetch_current"</span> : 0,</div><div class="line">          <span class="string">"scroll_total"</span> : 1150,</div><div class="line">          <span class="string">"scroll_time_in_millis"</span> : 6697,</div><div class="line">          <span class="string">"scroll_current"</span> : 0,</div><div class="line">          <span class="string">"suggest_total"</span> : 0,</div><div class="line">          <span class="string">"suggest_time_in_millis"</span> : 0,</div><div class="line">          <span class="string">"suggest_current"</span> : 0</div><div class="line">        &#125;,</div><div class="line">...</div></pre></td></tr></table></figure>
<ul>
<li><code>search.open_contexts</code> 表示当前正在进行的搜索</li>
<li><code>search.query_total</code> 表示节点启动以来完成的搜索数</li>
<li><code>search.query_time_in_millis</code> 表示完成上次搜索花费的时间总和。search.query_time_in_millis除以 search.query_total 越大，说明性能越差，可以通过Elasticsearch 的slowlog获取具体的搜索语句，做出针对性的优化</li>
<li><code>search.fetch_total</code> 等指标含义类似。因为Elasticsearch的搜索默认是<code>query-then-fetch</code>式的，所以fetch一般小而快。如果计算search.fetch_time_in_millis &gt; search.query_time_in_millis，说明有人采用了较大的size参数做分页查询，通过showlog抓到具体的语句，相机优化成 scan式搜索</li>
</ul>
<h5 id="段合并性能"><a href="#段合并性能" class="headerlink" title="段合并性能"></a>段合并性能</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_nodes/stats?pretty=true</span></div><div class="line">...</div><div class="line">        <span class="string">"merges"</span> : &#123;</div><div class="line">          <span class="string">"current"</span> : 0,</div><div class="line">          <span class="string">"current_docs"</span> : 0,</div><div class="line">          <span class="string">"current_size_in_bytes"</span> : 0,</div><div class="line">          <span class="string">"total"</span> : 15675,</div><div class="line">          <span class="string">"total_time_in_millis"</span> : 8422758,38 16295         </div><div class="line">          <span class="string">"total_docs"</span> : 142493991,</div><div class="line">          <span class="string">"total_size_in_bytes"</span> : 75031786583,</div><div class="line">          <span class="string">"total_stopped_time_in_millis"</span> : 0,</div><div class="line">          <span class="string">"total_throttled_time_in_millis"</span> : 222454,</div><div class="line">          <span class="string">"total_auto_throttle_in_bytes"</span> : 839578885310</div><div class="line">          &#125;,</div><div class="line">...</div></pre></td></tr></table></figure>
<ul>
<li><code>merges</code> 数据分为两部分，current开头的是当前正在发生的段合并行为统计；total开头的历史统计总数。作为ELK，以数据写入压力为主，merges相关数据会比较突出</li>
</ul>
<h5 id="过滤器缓存"><a href="#过滤器缓存" class="headerlink" title="过滤器缓存"></a>过滤器缓存</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_nodes/stats?pretty=true</span></div><div class="line">...</div><div class="line"><span class="string">"filter_cache"</span>: &#123;</div><div class="line">    <span class="string">"memory_size_in_bytes"</span>: 48,</div><div class="line">    <span class="string">"evictions"</span>: 0</div><div class="line">&#125;,</div><div class="line">...</div></pre></td></tr></table></figure>
<ul>
<li><code>filter_cache.memory_size_in_bytes</code> 表示过滤器缓存使用的内存</li>
<li><code>filter_cache.evictions</code> 表示因内存满被回收的缓存大小，如果这个数比较大，说明过滤器缓存大小不足，或者过滤器本身不太适合缓存<br><em>注：过滤器缓存是建立在 megment 基础上，在当天新日志搜索中，存在大量或多或少的 segment。一个5G的segment和一个2M的segment，发生一次<code>filter_cache.evictions</code> 对搜索性能影响区别是巨大的。但节点状态中本身这个计数并不能反应这点区别。所以尽量减少这个数值，如果搜索本身感觉不慢，这几个值也无所谓</em>  </li>
</ul>
<h5 id="id缓存"><a href="#id缓存" class="headerlink" title="id缓存"></a>id缓存</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_nodes/stats?pretty=true</span></div><div class="line">...</div><div class="line"><span class="string">"id_cache"</span>: &#123;</div><div class="line">    <span class="string">"memory_size_in_bytes"</span>: 0</div><div class="line">&#125;,</div><div class="line">...</div></pre></td></tr></table></figure>
<ul>
<li><code>id_cache</code> 是 <code>parent/child mappings</code> 使用的内存。不过在ELK中，一般不会用到这个性能，所以此处数据一般为0  </li>
</ul>
<h5 id="fielddata"><a href="#fielddata" class="headerlink" title="fielddata"></a>fielddata</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_nodes/stats?pretty=true</span></div><div class="line">...</div><div class="line">        <span class="string">"fielddata"</span> : &#123;</div><div class="line">          <span class="string">"memory_size_in_bytes"</span> : 32480,</div><div class="line">          <span class="string">"evictions"</span> : 0</div><div class="line">        &#125;,</div><div class="line">...</div></pre></td></tr></table></figure>
<p>此处显示fielddata使用的内存大小。fielddata用来做聚合、排序等工作。  </p>
<h5 id="segments"><a href="#segments" class="headerlink" title="segments"></a>segments</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_nodes/stats?pretty=true</span></div><div class="line">...</div><div class="line">        <span class="string">"segments"</span> : &#123;</div><div class="line">          <span class="string">"count"</span> : 18741,</div><div class="line">          <span class="string">"memory_in_bytes"</span> : 193556533,</div><div class="line">          <span class="string">"terms_memory_in_bytes"</span> : 152266264,</div><div class="line">          <span class="string">"stored_fields_memory_in_bytes"</span> : 17067832,</div><div class="line">          <span class="string">"term_vectors_memory_in_bytes"</span> : 0,</div><div class="line">          <span class="string">"norms_memory_in_bytes"</span> : 13141184,</div><div class="line">          <span class="string">"points_memory_in_bytes"</span> : 2426489,</div><div class="line">          <span class="string">"doc_values_memory_in_bytes"</span> : 8654764,</div><div class="line">          <span class="string">"index_writer_memory_in_bytes"</span> : 0,</div><div class="line">          <span class="string">"version_map_memory_in_bytes"</span> : 0,</div><div class="line">          <span class="string">"fixed_bit_set_memory_in_bytes"</span> : 1552,</div><div class="line">          <span class="string">"max_unsafe_auto_id_timestamp"</span> : 1509866960317,</div><div class="line">          <span class="string">"file_sizes"</span> : &#123; &#125;</div><div class="line">        &#125;,</div><div class="line">...</div></pre></td></tr></table></figure>
<ul>
<li><code>segments.count</code> 表示节点上所有索引的segment 数目总和。一般来说，一个索引通常会有50-150个 segment ，再多就对性能有较大影响了（可能merge 速度跟不上新segment 出现的速度）。  </li>
<li><code>segments.memory_in_bytes</code>  表示segment本身底层数据结构所使用的内存大小。像索引的倒排表，词典，bloom Filter（Elasticsearch 1.4以后默认关闭）等，所以过多的segment会导致这个数值迅速变大。  </li>
</ul>
<h4 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h4><h5 id="等待执行的任务列表"><a href="#等待执行的任务列表" class="headerlink" title="等待执行的任务列表"></a>等待执行的任务列表</h5><p>master只有集群状态的数据维护，一般来说，这个任务列表都是空的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_cluster/pending_tasks?pretty</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"tasks"</span> : [ ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果遇到集群有异常，比如频繁更新索引，数据恢复，分片分配或者初始化的时候反复出错，就会看到一些任务了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#集群故障了，出现了很多任务</span></div><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_cluster/pending_tasks?pretty</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"tasks"</span> : [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"insert_order"</span> : 1959,</div><div class="line">      <span class="string">"priority"</span> : <span class="string">"URGENT"</span>,</div><div class="line">      <span class="string">"source"</span> : <span class="string">"shard-started shard id [[192.168.1.24-thirdparty_errorlog-2017.11.02][2]], allocation id [rUOqVHjmTZiqL</span></div><div class="line">COvSaYDnA], primary term [0], message [after existing recovery]",      <span class="string">"executing"</span> : <span class="literal">true</span>,</div><div class="line">      <span class="string">"time_in_queue_millis"</span> : 833,</div><div class="line">      <span class="string">"time_in_queue"</span> : <span class="string">"833ms"</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="string">"insert_order"</span> : 1960,</div><div class="line">      <span class="string">"priority"</span> : <span class="string">"URGENT"</span>,</div><div class="line">      <span class="string">"source"</span> : <span class="string">"shard-started shard id [[192.168.1.21-thirdparty_log-2017.11.02][4]], allocation id [kmyECWLXRSKM4YDlsX</span></div><div class="line">mRcA], primary term [0], message [after existing recovery]",      <span class="string">"executing"</span> : <span class="literal">false</span>,</div><div class="line">      <span class="string">"time_in_queue_millis"</span> : 809,</div><div class="line">      <span class="string">"time_in_queue"</span> : <span class="string">"809ms"</span></div><div class="line">    &#125;,</div><div class="line">...</div></pre></td></tr></table></figure></p>
<p>集群存储长期数据导致索引映射数据确实大到了master节点内存不足以快速处理的地步。<br>根据实际情况，可以选择：  </p>
<ul>
<li>索引特别多：给master加内存</li>
<li>索引字段太多：改用nested object 方式节省字段数量</li>
<li>索引多到内存不够了：把一部分数据拆出来到另一个集群</li>
</ul>
<h5 id="新版任务管理"><a href="#新版任务管理" class="headerlink" title="新版任务管理"></a>新版任务管理</h5><p>新版任务并没有独立的接口，发起的具体某次search、snapshot、reindex等操作，自动就成了一个任务。而任务的列表可以通过<code>/_tasks</code>或者<code>/_cat/tasks</code>接口来获取。和其他操作一样，手动操作用cat，写程序时用JSON接口。  </p>
<p>取消某个任务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:admin@julend http://localhost:9200/_cat/tasks?v #获取当前任务</span></div><div class="line">action                         task_id                       parent_task_id                <span class="built_in">type</span> start_time    timest</div><div class="line">amp  running_time ip           nodeindices:monitor/stats          Go1e5drSSum7gbrKpIef8g:175591 -                             transport 1509884620079 20:23:</div><div class="line">40  487ms        192.168.1.43 Julend_es3indices:monitor/stats[n]       VQf-ph7NRTeiEVHqAT4pRw:140954 Go1e5drSSum7gbrKpIef8g:175591 netty     1509884619871 20:23:</div><div class="line">39  410.2ms      192.168.1.42 Julend_es2cluster:monitor/tasks/lists    mXtk8dQeQh-amui<span class="_">-d</span>5pVoA:145705 -                             transport 1509884621290 20:23:</div><div class="line">41  17.3ms       192.168.1.41 Julend_es1cluster:monitor/tasks/lists[n] VQf-ph7NRTeiEVHqAT4pRw:140959 mXtk8dQeQh-amui<span class="_">-d</span>5pVoA:145705 netty     1509884620249 20:23:</div><div class="line">40  32ms         192.168.1.42 Julend_es2cluster:monitor/tasks/lists[n] Go1e5drSSum7gbrKpIef8g:175595 mXtk8dQeQh-amui<span class="_">-d</span>5pVoA:145705 netty     1509884620544 20:23:</div><div class="line">40  21.4ms       192.168.1.43 Julend_es3cluster:monitor/tasks/lists[n] mXtk8dQeQh-amui<span class="_">-d</span>5pVoA:145706 mXtk8dQeQh-amui<span class="_">-d</span>5pVoA:145705 direct    1509884621306 20:23:</div><div class="line">41  1.3ms        192.168.1.41 Julend_es1</div><div class="line"></div><div class="line"><span class="comment"># curl -XPOST 'http://localhost:9200/_tasks/task_id:175591/_cancel'</span></div></pre></td></tr></table></figure></p>
<p>而 search任务和 reindex任务不同。Elasticsearch从5.1.1版本开始支持取消还在运行的search任务，但这个行为并不能立即生效。<br>默认情况下，对search tasks的管理粒度是以segment为单位的。即，这个搜索会在执行完当前segment后才停止。历史索引已经经过 forcemerge接口优化，一个分片里面只有一个segment，那么这个cancel可以认为是无效的。<br>对于这种情况，Elasticsearch提供了另一个更细粒度但是也更消耗资源的方法。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST 'http://localhost:9200/_cluster/settings' -d '&#123;</span></div><div class="line">    <span class="string">"persistent"</span>: &#123;</div><div class="line">        <span class="string">"search.low_level_cancellation"</span>: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<p>这时，所有的搜索任务，都会定期检查自己是否被取消了。也这可能导致比较慢的搜索，执行时间更加漫长。  </p>
<h5 id="cat接口命令行使用"><a href="#cat接口命令行使用" class="headerlink" title="cat接口命令行使用"></a>cat接口命令行使用</h5><p>用户日常运维，可以读取各种监控数据  </p>
<ul>
<li><code>/_cat/nodes</code></li>
<li><code>/_cat/shards</code></li>
<li><code>/_cat/shards/{index}</code></li>
<li><code>/_cat/aliases</code></li>
<li><code>/_cat/aliases/{alias}</code></li>
<li><code>/_cat/tasks</code></li>
<li><code>/_cat/master</code></li>
<li><code>/_cat/plugins</code></li>
<li><code>/_cat/fielddata</code></li>
<li><code>/_cat/fielddata/{fields}</code></li>
<li><code>/_cat/pending_tasks</code></li>
<li><code>/_cat/count</code></li>
<li><code>/_cat/count/{index}</code></li>
<li><code>/_cat/snapshots/{repository}</code></li>
<li><code>/_cat/recovery</code></li>
<li><code>/_cat/recovery/{index}</code></li>
<li><code>/_cat/segments</code></li>
<li><code>/_cat/segments/{index}</code></li>
<li><code>/_cat/thread_pool</code></li>
<li><code>/_cat/thread_pool/{thread_pools}/_cat/nodeattrs</code></li>
<li><code>/_cat/allocation</code></li>
<li><code>/_cat/repositories</code></li>
<li><code>/_cat/health</code></li>
<li><code>/_cat/indices</code></li>
<li><code>/_cat/indices/{index}</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET -u elastic:password http://localhost:9200/_cat/nodes?help</span></div><div class="line">id           | id,nodeId      | unique node id           </div><div class="line">pid          | p              | process id               </div><div class="line">ip           | i              | ip address               </div><div class="line">port         | po             | bound transport port     </div><div class="line">http_address | http           | bound http address       </div><div class="line">version      | v              | es version</div><div class="line">...</div></pre></td></tr></table></figure>
<h5 id="bigdesk"><a href="#bigdesk" class="headerlink" title="bigdesk"></a>bigdesk</h5><p>地址：<a href="https://github.com/hlstudio/bigdesk" target="_blank" rel="external">https://github.com/hlstudio/bigdesk</a><br>bigdesk是一款针对Elasticsearch 性能的开源实时监控方案。  </p>
<h5 id="zabbix-trapper"><a href="#zabbix-trapper" class="headerlink" title="zabbix trapper"></a>zabbix trapper</h5><p>地址：<a href="https://github.com/Wprosdocimo/Elasticsearch-zabbix" target="_blank" rel="external">https://github.com/Wprosdocimo/Elasticsearch-zabbix</a><br><a href="https://github.com/untergeek/zabbix-grab-bag/blob/master/Elasticsearch/es_stats_zabbix.README.md" target="_blank" rel="external">https://github.com/untergeek/zabbix-grab-bag/blob/master/Elasticsearch/es_stats_zabbix.README.md</a>  </p>
<h4 id="Percolator接口"><a href="#Percolator接口" class="headerlink" title="Percolator接口"></a>Percolator接口</h4><p>ELK stack告警方式：  </p>
<ol>
<li>对于匹配报警，采用Elasticsearch的 Percolator接口做响应告警。  </li>
<li>对于时序统计，采用定时任务方式，发送Elasticsearch aggs请求，分析响应体报警。</li>
</ol>
<p>在Elasticsearch 5.0后，对Percolator 功能大幅改造，而现在作为一种 mapping类型，在创建索引时需要预先定义。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPUT http://localhost:9200/syslog -d '&#123;</span></div><div class="line">    <span class="string">"mappings"</span>: &#123;</div><div class="line">        <span class="string">"syslog"</span>: &#123;</div><div class="line">            <span class="string">"properties"</span>: &#123;</div><div class="line">                <span class="string">"message"</span>: &#123;</div><div class="line">                    <span class="string">"type"</span>: <span class="string">"text"</span></div><div class="line">                &#125;,</div><div class="line">                <span class="string">"severity"</span>: &#123;</div><div class="line">                    <span class="string">"type"</span>: <span class="string">"long"</span></div><div class="line">                &#125;,</div><div class="line">                <span class="string">"program"</span>: &#123;</div><div class="line">                    <span class="string">"type"</span>: <span class="string">"keyword"</span></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"queries"</span>: &#123;</div><div class="line">            <span class="string">"properties"</span>: &#123;</div><div class="line">                <span class="string">"query"</span>: &#123;</div><div class="line">                    <span class="string">"type"</span>: <span class="string">"percolator"</span></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<p>然后往 <code>syslog/queries</code> 里注册两条 percolator 请求规则：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPUT http://localhost:9200/syslog/queries/memory -d '&#123;</span></div><div class="line">    <span class="string">"query"</span>: &#123;</div><div class="line">        <span class="string">"query_string"</span>: &#123;</div><div class="line">            <span class="string">"default_field"</span>: <span class="string">"message"</span>,</div><div class="line">            <span class="string">"default_operator"</span>: <span class="string">"OR"</span>,</div><div class="line">            <span class="string">"query"</span>: <span class="string">"mem DMA segfault page allocation AND severity: &gt;2 AND program:kernel"</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPUT http://localhost:9200/syslog/queries/disk -d '&#123;</span></div><div class="line">    <span class="string">"query"</span>: &#123;</div><div class="line">        <span class="string">"query_string"</span>: &#123;</div><div class="line">            <span class="string">"default_field"</span>: <span class="string">"message"</span>,</div><div class="line">            <span class="string">"default_operator"</span>: <span class="string">"OR"</span>,</div><div class="line">            <span class="string">"query"</span>: <span class="string">"scsi sata hdd sda AND severity:&gt;2 AND program:kernal"</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure>
<p>然后，将标准的数据写入请求改成通过搜索接口进行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/syslog/_search -d '&#123;</span></div><div class="line">    <span class="string">"query"</span>: &#123;</div><div class="line">        <span class="string">"percolate"</span>: &#123;</div><div class="line">            <span class="string">"field"</span>: <span class="string">"query"</span>,</div><div class="line">            <span class="string">"document_type"</span>: <span class="string">"syslog"</span>,</div><div class="line">            <span class="string">"document"</span>: &#123;</div><div class="line">                <span class="string">"program"</span>: <span class="string">"kernel"</span>,</div><div class="line">                <span class="string">"severity"</span>: 3,</div><div class="line">                <span class="string">"message"</span>: <span class="string">"swapper/0: page allocation failure: order:4, mode:0x4020"</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<p>得到的结果如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    ...</div><div class="line">    <span class="string">"hits"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="string">"_index"</span>: <span class="string">"syslog"</span>,</div><div class="line">            <span class="string">"_type"</span>: <span class="string">"queries"</span>,</div><div class="line">            <span class="string">"_id"</span>: <span class="string">"memory"</span>,</div><div class="line">            ...</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这条syslog 日志匹配上了memory内存异常。下面就可以发送给报警系统了。<br>如果syslog 索引中已经有数据了，也可以重新 Percolator 查询。比如：有一条之前已经写入到 <a href="http://localhost:9200/syslog/cisco/1234567" target="_blank" rel="external">http://localhost:9200/syslog/cisco/1234567</a> 的数据，如果把这条数据在过一次 Percolate：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/syslog/_search -d '&#123;</span></div><div class="line">    <span class="string">"query"</span>: &#123;</div><div class="line">        <span class="string">"percolate"</span>: &#123;</div><div class="line">            <span class="string">"field"</span>: <span class="string">"query"</span>,</div><div class="line">            <span class="string">"document_type"</span>: <span class="string">"syslog"</span>,</div><div class="line">            <span class="string">"index"</span>: <span class="string">"syslog"</span>,</div><div class="line">            <span class="string">"type"</span>: <span class="string">"cisco"</span>,</div><div class="line">            <span class="string">"id"</span>: <span class="string">"1234567"</span>,</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<p>更复杂的 query DSL 做 Percolator 请求示例，参考：<a href="https://www.elastic.co/blog/using-percolator-geo-tagging" target="_blank" rel="external">https://www.elastic.co/blog/using-percolator-geo-tagging</a>  </p>
<h4 id="报警机制"><a href="#报警机制" class="headerlink" title="报警机制"></a>报警机制</h4><h5 id="Watcher报警"><a href="#Watcher报警" class="headerlink" title="Watcher报警"></a>Watcher报警</h5><p>现在已经集成到X-PACK，安装X-PACK即可<br>参考：<a href="https://www.elastic.co/cn/products/x-pack/alerting" target="_blank" rel="external">https://www.elastic.co/cn/products/x-pack/alerting</a>  </p>
<h5 id="ElastAlert"><a href="#ElastAlert" class="headerlink" title="ElastAlert"></a>ElastAlert</h5><p>与 Watcher 属于同类型产品。<br>参考：<a href="http://elastalert.readthedocs.io/en/latest/" target="_blank" rel="external">http://elastalert.readthedocs.io/en/latest/</a>  </p>
<h5 id="Etsy的-Kale-异常检测"><a href="#Etsy的-Kale-异常检测" class="headerlink" title="Etsy的 Kale 异常检测"></a>Etsy的 Kale 异常检测</h5><p>Kale 系统是一个监控分析系统，分为：skyline 和 oculus。<br>参考：<a href="https://codeascraft.com/2013/06/11/introducing-kale/" target="_blank" rel="external">https://codeascraft.com/2013/06/11/introducing-kale/</a>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/11/14/Elasticsearch监控相关/">http://www.yfshare.vip/2017/11/14/Elasticsearch监控相关/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Elasticsearch相关监控接口&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="Elasticsearch" scheme="http://www.yfshare.vip/tags/Elasticsearch/"/>
    
      <category term="Monitor" scheme="http://www.yfshare.vip/tags/Monitor/"/>
    
  </entry>
  
  <entry>
    <title>部署FileBeat+logstash+elasticsearch集群+kibana</title>
    <link href="http://www.yfshare.vip/2017/11/04/%E9%83%A8%E7%BD%B2FileBeat-logstash-elasticsearch%E9%9B%86%E7%BE%A4-kibana/"/>
    <id>http://www.yfshare.vip/2017/11/04/部署FileBeat-logstash-elasticsearch集群-kibana/</id>
    <published>2017-11-04T13:48:47.000Z</published>
    <updated>2017-11-04T14:07:20.636Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>ELK由Elasticsearch、Logstash和Kibana三部分组件组成，这里新增了一个FileBeat，它是一个轻量级的日志收集处理工具(Agent)，Filebeat占用资源少，适合于在各个服务器上搜集日志后传输给Logstash，官方也推荐此工具<br><a id="more"></a><br>Filebeat隶属于Beats。目前Beats包含四种工具：  </p>
<ol>
<li>Packetbeat（搜集网络流量数据）  </li>
<li>Topbeat（搜集系统、进程和文件系统级别的 CPU 和内存使用情况等数据）</li>
<li>Filebeat（搜集文件数据）</li>
<li>Winlogbeat（搜集 Windows 事件日志数据）</li>
</ol>
<p>官方文档<br>Filebeat：<br><a href="https://www.elastic.co/cn/products/beats/filebeat" target="_blank" rel="external">https://www.elastic.co/cn/products/beats/filebeat</a><br><a href="https://www.elastic.co/guide/en/beats/filebeat/5.6/index.html" target="_blank" rel="external">https://www.elastic.co/guide/en/beats/filebeat/5.6/index.html</a>  </p>
<p>Logstash：<br><a href="https://www.elastic.co/cn/products/logstash" target="_blank" rel="external">https://www.elastic.co/cn/products/logstash</a><br><a href="https://www.elastic.co/guide/en/logstash/5.6/index.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.6/index.html</a></p>
<p>Elasticsearch：<br><a href="https://www.elastic.co/cn/products/elasticsearch" target="_blank" rel="external">https://www.elastic.co/cn/products/elasticsearch</a><br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/index.html" target="_blank" rel="external">https://www.elastic.co/guide/en/elasticsearch/reference/5.6/index.html</a>  </p>
<p>elasticsearch中文社区：<br><a href="https://elasticsearch.cn/" target="_blank" rel="external">https://elasticsearch.cn/</a> </p>
<p>官方ELK架构图：<br><img src="http://note.youdao.com/yws/api/personal/file/DCE29CF684C34FC3BA73809D566B0150?method=download&amp;shareKey=798f64543357202a0efb9a95d35c4e5b" alt="filebeat">  </p>
<p>本次环境的拓扑图：<br><img src="http://note.youdao.com/yws/api/personal/file/4772759A56704D82A3D1C6056C76613F?method=download&amp;shareKey=3c9825a509086b1a28b8ffd34aa9c6b0" alt="ELK_拓扑图">  </p>
<p>环境：<br>　　　Centos 7.3<br>　　　Filebeat 5.6.1<br>　　　Logstash 5.6.1<br>　　　Kibana 5.6.1  </p>
<p>软件下载：<br><a href="http://note.youdao.com/yws/api/personal/file/09E0C74E473348FA8DCBDB96F3AEE13D?method=download&amp;shareKey=9d9dc334d3d6c72613c00359372887a9" target="_blank" rel="external">filebeat-5.6.1-x86_64.rpm</a><br><a href="http://note.youdao.com/yws/api/personal/file/85468EC34C484B3F8D2B0AF3B7386841?method=download&amp;shareKey=e00a03bcfbc3d4b63c419ab1139a8765" target="_blank" rel="external">kibana-5.6.1-x86_64.rpm</a><br><a href="http://note.youdao.com/yws/api/personal/file/3D218AEF94474D4A9BC755B4AAADFE0B?method=download&amp;shareKey=3f79c453a9993cd899f38420983db94e" target="_blank" rel="external">logstash-5.6.1.rpm</a><br><a href="http://note.youdao.com/yws/api/personal/file/430B5F758002423A92C9023EF656C1E5?method=download&amp;shareKey=7507f90e005394aff511356bd60fc28e" target="_blank" rel="external">elasticsearch-5.6.1.rpm</a>  </p>
<h3 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#环境部署（安装）</span></div><div class="line"><span class="comment">#每台机器上都需要安装JDK</span></div><div class="line">[root@DevEVN-21 ~]<span class="comment"># curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.6.1-x86_64.rpm</span></div><div class="line">[root@DevEVN-21 ~]<span class="comment"># rpm -ivh filebeat-5.6.1-x86_64.rpm</span></div><div class="line">[root@DevEVN-21 ~]<span class="comment"># rpm -qa | grep -i filebeat</span></div><div class="line">filebeat-5.6.1-1.x86_64</div><div class="line">[root@DevEVN-21 ~]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@ELK-test software]<span class="comment"># wget https://artifacts.elastic.co/downloads/logstash/logstash-5.6.1.rpm</span></div><div class="line">[root@ELK-test software]<span class="comment"># wget http://download.oracle.com/otn-pub/java/jdk/8u144-b01/090f390dda5b47b9b721c7dfaa008135/jdk-8u144-linux-x64.tar.gz?AuthParam=1505893074_6e8dfac4ee1e712087b65acabe8b2506 -O jdk-8u144-linux-x64.tar.gz</span></div><div class="line">[root@ELK-test software]<span class="comment"># tar -zxf jdk-8u144-linux-x64.tar.gz  -C /usr/local/</span></div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div><div class="line">[root@ELK-test ~]<span class="comment"># cat /etc/profile.d/java.sh</span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="built_in">export</span> JAVA_HOME=<span class="string">'/usr/local/jdk1.8.0_144'</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></div><div class="line">[root@ELK-test ~]<span class="comment"># source /etc/profile.d/java.sh</span></div><div class="line">[root@ELK-test ~]<span class="comment"># java -version</span></div><div class="line">java version <span class="string">"1.8.0_144"</span></div><div class="line">Java(TM) SE Runtime Environment (build 1.8.0_144-b01)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)</div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div><div class="line">[root@ELK-test software]<span class="comment"># rpm -ivh logstash-5.6.1.rpm</span></div><div class="line">[root@ELK-test software]<span class="comment"># rpm -qa | grep logstash</span></div><div class="line">logstash-5.6.1-1.noarch</div><div class="line">[root@ELK-test software]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@ELK-test software]<span class="comment"># wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.1.rpm</span></div><div class="line">[root@ELK-test software]<span class="comment"># yum install elasticsearch-5.6.1.rpm</span></div><div class="line">[root@ELK-test software]<span class="comment"># rpm -qa | grep elasticsearch</span></div><div class="line">elasticsearch-5.6.1-1.noarch</div><div class="line">[root@ELK-test software]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@ELK-test software]<span class="comment"># wget https://artifacts.elastic.co/downloads/kibana/kibana-5.6.1-x86_64.rpm</span></div><div class="line">[root@ELK-test software]<span class="comment"># rpm -ivh kibana-5.6.1-x86_64.rpm</span></div><div class="line">[root@ELK-test software]<span class="comment"># rpm -qa | grep kibana</span></div><div class="line">kibana-5.6.1-1.x86_64</div><div class="line">[root@ELK-test software]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@ELK-test ~]<span class="comment"># ll /data/ELK_data/*</span></div><div class="line">/data/ELK_data/elasticsearch:</div><div class="line">total 8</div><div class="line">drwxr-xr-x. 3 elasticsearch elasticsearch 4096 Sep 22 17:25 data</div><div class="line">drwxr-xr-x. 2 elasticsearch elasticsearch 4096 Oct 19 19:54 logs</div><div class="line"></div><div class="line">/data/ELK_data/kibana:</div><div class="line">total 8</div><div class="line">drwxr-xr-x. 2 kibana kibana 4096 Sep 22 16:50 data</div><div class="line">drwxr-xr-x. 2 kibana kibana 4096 Sep 22 16:50 logs</div><div class="line"></div><div class="line">/data/ELK_data/logstash:</div><div class="line">total 8</div><div class="line">drwxr-xr-x. 4 logstash logstash 4096 Oct 19 19:51 data_192.168.1.21</div><div class="line">drwxr-xr-x. 2 logstash logstash 4096 Oct 19 17:41 logs</div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="配置-filebeart"><a href="#配置-filebeart" class="headerlink" title="配置 filebeart"></a>配置 filebeart</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#配置filebeart</span></div><div class="line">[root@DevEVN-21 ~]<span class="comment"># grep -iv '#' /etc/filebeat/filebeat.yml | grep -iv '^$'</span></div><div class="line">filebeat.prospectors:</div><div class="line">- input_type: <span class="built_in">log</span>  <span class="comment">#指定文件的输入类型log(默认)或者stdin</span></div><div class="line">  paths:   <span class="comment">#指定要监控的日志，目前按照Go语言的glob函数处理，没有对配置目录做递归处理，如果指定的文件为/var/log/*.log的话，会读取该目录下所有以log结尾的文件，但是这样不好，在logstash上不好处理，会写到一个文件内，kibana显示会很乱，建议分开写</span></div><div class="line">    - /data/soros/logs/soros-account-service-error.log      <span class="comment">#指定filebeat读取的文件（绝对路径）</span></div><div class="line">  document_type: 192.168.1.21-account_errorlog   <span class="comment">#设定Elasticsearch输出时的document的type字段，也可以用来给日志进行分类</span></div><div class="line"></div><div class="line">- input_type: <span class="built_in">log</span></div><div class="line">  paths:</div><div class="line">    - /data/soros/logs/soros-account-service.log</div><div class="line">  document_type: 192.168.1.21-account_log</div><div class="line"></div><div class="line">output.logstash:</div><div class="line">  hosts: [<span class="string">"192.168.1.41:5044"</span>]     <span class="comment">#指定logstash服务器地址及端口，可以指定多个logstash</span></div><div class="line">[root@DevEVN-21 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>参考：<a href="http://blog.csdn.net/xiongzhichao/article/details/51783704" target="_blank" rel="external">Filebeat的高级配置</a><br><a href="http://www.cnblogs.com/zlslch/p/6622079.html" target="_blank" rel="external">filebeat.yml配置详解</a><br><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-elk-filebeat/index.html" target="_blank" rel="external">ELK+Filebeat 集中式日志解决方案详解</a>  </p>
<h4 id="配置-logstash"><a href="#配置-logstash" class="headerlink" title="配置 logstash"></a>配置 logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">[root@ELK-test ~]<span class="comment"># grep -iv '#' /etc/logstash/logstash.yml | grep -iv '^$'</span></div><div class="line">path.data: /data/ELK_data/logstash/data</div><div class="line">path.config: /etc/logstash/conf.d</div><div class="line">http.host: <span class="string">"0.0.0.0"</span></div><div class="line">path.logs: /data/ELK_data/logstash/logs</div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#配置logstash</span></div><div class="line">[root@ELK-test ~]<span class="comment"># grep -iv '#' /etc/logstash/conf.d/logstash_192.168.1.21.conf | grep -iv '^$'</span></div><div class="line"><span class="comment">#指定logstash监听filebeat的端口</span></div><div class="line">input &#123;</div><div class="line">  beats &#123;</div><div class="line">    port =&gt; 5044</div><div class="line">    codec =&gt; multiline &#123;</div><div class="line">         pattern =&gt; <span class="string">"^%&#123;YEAR&#125;[/-]%&#123;MONTHNUM&#125;[/-]%&#123;MONTHDAY&#125;[/_]%&#123;TIME&#125; "</span></div><div class="line">         negate =&gt; <span class="literal">true</span></div><div class="line">         what =&gt; previous</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">#pattern：多行日志开始的那一行匹配的</span></div><div class="line"><span class="comment">#pattern negate：是否需要对pattern条件转置使用，不翻转设为true，反转设置为false</span></div><div class="line"><span class="comment">#match：匹配pattern后，与前面(后面)的内容合并为一条日志</span></div><div class="line"><span class="comment">#max_lines：合并的最多行数(包含匹配pattern的那一行)，到了timeout之后，即使没有匹配一个新的pattern（发生一个新的事件），也把已经匹配的日志事件发送出去</span></div><div class="line"></div><div class="line"><span class="comment">#output测试输出到控制台</span></div><div class="line">output &#123;</div><div class="line"><span class="comment">#program logs</span></div><div class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">'192.168.1.21-account_errorlog'</span>&#123;        <span class="comment">#'192.168.1.21-account_errorlog'为filebeat配置中由document_type定义的</span></div><div class="line">        elasticsearch &#123;          <span class="comment">#输出到elasticsearch中</span></div><div class="line">                hosts =&gt; [<span class="string">"192.168.1.41:9200"</span>,<span class="string">"192.168.1.42:9200"</span>,<span class="string">"192.168.1.43:9200"</span>]       <span class="comment">#指定elasticsearch主机</span></div><div class="line">		index =&gt; <span class="string">"%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;"</span></div><div class="line">		document_type =&gt; <span class="string">"log"</span>       <span class="comment">#设定Elasticsearch输出时的document的type字段，也可以用来给日志进行分类</span></div><div class="line">		template_overwrite =&gt; <span class="literal">true</span>       <span class="comment">#如果设置为true，模板名字一样的时候，新的模板会覆盖旧的模板</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">'192.168.1.21-account_log'</span>&#123;</div><div class="line">        elasticsearch &#123;</div><div class="line">                hosts =&gt; [<span class="string">"192.168.1.41:9200"</span>,<span class="string">"192.168.1.42:9200"</span>,<span class="string">"192.168.1.43:9200"</span>]</div><div class="line">		index =&gt; <span class="string">"%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;"</span></div><div class="line">		document_type =&gt; <span class="string">"log"</span></div><div class="line">		template_overwrite =&gt; <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div><div class="line"></div><div class="line">其他机器的logstash配置同上</div></pre></td></tr></table></figure>
<p>参考：<a href="http://blog.csdn.net/shudaqi2010/article/details/53941389" target="_blank" rel="external">Elasticsearch之<em>default</em>—— 为索引添加默认映射</a><br><a href="http://blog.chinaunix.net/uid-532511-id-4845841.html" target="_blank" rel="external">logstash 多行数据合并 &amp; 日志时间字段解析</a>  </p>
<h4 id="配置-elasticsearch集群"><a href="#配置-elasticsearch集群" class="headerlink" title="配置 elasticsearch集群"></a>配置 elasticsearch集群</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Julend_es1 节点</span></div><div class="line">[root@ELK-test ~]<span class="comment"># grep -iv '#' /etc/elasticsearch/elasticsearch.yml | grep -iv '^$'</span></div><div class="line">cluster.name: <span class="string">"Julend_ES-cluster"</span></div><div class="line">node.name: Julend_es1</div><div class="line">node.data: <span class="literal">true</span></div><div class="line">http.enabled: <span class="literal">true</span></div><div class="line">path.data: /data/ELK_data/elasticsearch/data</div><div class="line">path.logs: /data/ELK_data/elasticsearch/logs</div><div class="line">network.host: 0.0.0.0</div><div class="line">http.port: 9200</div><div class="line">http.cors.enabled: <span class="literal">true</span></div><div class="line">http.cors.allow-origin: <span class="string">"*"</span></div><div class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.1.41"</span>, <span class="string">"192.168.1.42"</span>, <span class="string">"192.168.1.43"</span>]</div><div class="line">discovery.zen.minimum_master_nodes: 3</div><div class="line">gateway.recover_after_nodes: 2</div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Julend_es2 节点</span></div><div class="line">[root@ELK-test2 ~]<span class="comment"># grep -iv '#' /etc/elasticsearch/elasticsearch.yml | grep -iv '^$'</span></div><div class="line">cluster.name: <span class="string">"Julend_ES-cluster"</span></div><div class="line">node.name: Julend_es2</div><div class="line">node.data: <span class="literal">true</span></div><div class="line">http.enabled: <span class="literal">true</span></div><div class="line">path.data: /data/ELK_data/elasticsearch/data</div><div class="line">path.logs: /data/ELK_data/elasticsearch/logs</div><div class="line">network.host: 0.0.0.0</div><div class="line">http.port: 9200</div><div class="line">http.cors.enabled: <span class="literal">true</span></div><div class="line">http.cors.allow-origin: <span class="string">"*"</span></div><div class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.1.41"</span>, <span class="string">"192.168.1.42"</span>, <span class="string">"193.168.1.43"</span>]</div><div class="line">discovery.zen.minimum_master_nodes: 3</div><div class="line">gateway.recover_after_nodes: 2</div><div class="line">[root@ELK-test2 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Julend_es3 节点</span></div><div class="line">[root@ELK-test3 ~]<span class="comment"># grep -iv '#' /etc/elasticsearch/elasticsearch.yml | grep -iv '^$'</span></div><div class="line">cluster.name: <span class="string">"Julend_ES-cluster"</span></div><div class="line">node.name: Julend_es3</div><div class="line">node.data: <span class="literal">true</span></div><div class="line">http.enabled: <span class="literal">true</span></div><div class="line">path.data: /data/ELK_data/elasticsearch/data</div><div class="line">path.logs: /data/ELK_data/elasticsearch/logs</div><div class="line">network.host: 0.0.0.0</div><div class="line">http.port: 9200</div><div class="line">http.cors.enabled: <span class="literal">true</span></div><div class="line">http.cors.allow-origin: <span class="string">"*"</span></div><div class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.1.41"</span>, <span class="string">"192.168.1.42"</span>,<span class="string">"192.168.1.43"</span>]</div><div class="line">discovery.zen.minimum_master_nodes: 3</div><div class="line">gateway.recover_after_nodes: 2</div><div class="line">[root@ELK-test3 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>参考：<a href="http://blog.csdn.net/shudaqi2010/article/details/53941389" target="_blank" rel="external">http://blog.csdn.net/shudaqi2010/article/details/53941389</a><br><a href="http://blog.chinaunix.net/uid-532511-id-4854331.html" target="_blank" rel="external">http://blog.chinaunix.net/uid-532511-id-4854331.html</a><br><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html" target="_blank" rel="external">https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html</a>  </p>
<h4 id="配置-Kibana"><a href="#配置-Kibana" class="headerlink" title="配置 Kibana"></a>配置 Kibana</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#kibana只是一个WEB GUI展示工具，数据均存储在elasticsearch中，故登陆任何一台kibana看到的数据都一样</span></div><div class="line"><span class="comment">#kibana1配置：</span></div><div class="line">[root@ELK-test ~]<span class="comment"># grep -iv '#' /etc/kibana/kibana.yml | grep -iv '^$'</span></div><div class="line">server.port: 5601</div><div class="line">server.host: <span class="string">"192.168.1.41"</span></div><div class="line">server.name: <span class="string">"Julend_Kibana"</span></div><div class="line">elasticsearch.url: <span class="string">"http://192.168.1.42:9200"</span></div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#kibana2配置：</span></div><div class="line">[root@ELK-test2 ~]<span class="comment"># grep -iv '#' /etc/kibana/kibana.yml | grep -iv '^$'</span></div><div class="line">server.port: 5601</div><div class="line">server.host: <span class="string">"192.168.1.42"</span></div><div class="line">elasticsearch.url: <span class="string">"http://192.168.1.42:9200"</span></div><div class="line">[root@ELK-test2 ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#kibana3配置：</span></div><div class="line">[root@ELK-test3 ~]<span class="comment"># grep -iv '#' /etc/kibana/kibana.yml | grep -iv '^$'</span></div><div class="line">server.port: 5601</div><div class="line">server.host: <span class="string">"192.168.1.43"</span></div><div class="line">elasticsearch.url: <span class="string">"http://192.168.1.43:9200"</span></div><div class="line">[root@ELK-test3 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>参考：<a href="http://blog.csdn.net/ming_311/article/details/50619859" target="_blank" rel="external">Kibana基本使用</a><br><a href="https://segmentfault.com/a/1190000002972420" target="_blank" rel="external">ELK：kibana使用的lucene查询语法</a><br><a href="http://www.ttlsa.com/elk/elk-kibana-query-and-filter/" target="_blank" rel="external">ELK kibana查询与过滤</a><br><a href="http://blog.csdn.net/caisini_vc/article/details/53377756" target="_blank" rel="external">Lucene查询语法详解（Lucene query syntax）- 用于Kibana搜索语句</a>  </p>
<h4 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#nginx配置</span></div><div class="line">[root@nginx ~]<span class="comment"># cat /etc/nginx/conf.d/192.168.1.41-43.conf </span></div><div class="line">server &#123;</div><div class="line">	listen       443;</div><div class="line">	server_name  domain_name;</div><div class="line">	ssl on;</div><div class="line">	include conf.d/ssl_conf;</div><div class="line"></div><div class="line">	access_log  /var/<span class="built_in">log</span>/kibana/access.log main;</div><div class="line">	error_log /var/<span class="built_in">log</span>/kibana/error.log;</div><div class="line"></div><div class="line">	location / &#123;</div><div class="line">	auth_basic <span class="string">"Restricted"</span>;</div><div class="line">	auth_basic_user_file /etc/nginx/conf.d/.site_kibana_pass;</div><div class="line">	proxy_pass http://testelk;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen 80;</div><div class="line">	server_name domain_name;</div><div class="line">	rewrite ^/(.*)$ https://domain_name permanent;</div><div class="line">&#125;</div><div class="line"></div><div class="line">upstream domain_name &#123;</div><div class="line">	ip_hash;</div><div class="line">	server 192.168.1.41:5601 max_fails=4 fail_timeout=20s weight=4;</div><div class="line">	server 192.168.1.42:5601 max_fails=4 fail_timeout=20s weight=4;</div><div class="line">	server 192.168.1.43:5601 max_fails=4 fail_timeout=20s weight=4;</div><div class="line">&#125;</div><div class="line">[root@nginx ~]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@nginx ~]<span class="comment"># nginx -t</span></div><div class="line">[root@nginx ~]<span class="comment"># nginx -s reload</span></div></pre></td></tr></table></figure>
<h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@DevEVN-21 ~]<span class="comment"># systemctl enable filebeat</span></div><div class="line">[root@DevEVN-21 ~]<span class="comment"># systemctl start filebeat</span></div><div class="line"></div><div class="line">[root@ELK-test ~]<span class="comment"># /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/conf.d/logstash_192.168.1.21.conf --path.data /data/ELK_data/logstash/data_192.168.1.21</span></div><div class="line">Sending Logstash<span class="string">'s logs to /data/ELK_data/logstash/logs which is now configured via log4j2.properties</span></div><div class="line">...</div><div class="line">[root@ELK-test ~]#</div><div class="line"></div><div class="line">#启动三台elasticsearch</div><div class="line">[root@ELK-test ~]# systemctl enable elasticsearch</div><div class="line">[root@ELK-test ~]# systemctl start elasticsearch</div><div class="line"></div><div class="line">[root@ELK-test ~]# systemctl enable kibana</div><div class="line">[root@ELK-test ~]# systemctl start kibana</div></pre></td></tr></table></figure>
<h5 id="logstash-服务启动日志"><a href="#logstash-服务启动日志" class="headerlink" title="logstash 服务启动日志"></a>logstash 服务启动日志</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># tail -f /data/ELK_data/logstash/logs/logstash-plain.log </span></div><div class="line">[2017-10-19T16:35:07,048][INFO ][logstash.outputs.elasticsearch] Running health check to see <span class="keyword">if</span> an Elasticsearch connection is working &#123;:healthcheck_url=&gt;http://localhost:9</div><div class="line">200/, :path=&gt;<span class="string">"/"</span>&#125;[2017-10-19T16:35:07,146][WARN ][logstash.outputs.elasticsearch] Restored connection to ES instance &#123;:url=&gt;<span class="string">"http://localhost:9200/"</span>&#125;</div><div class="line">[2017-10-19T16:35:07,148][INFO ][logstash.outputs.elasticsearch] Using mapping template from &#123;:path=&gt;nil&#125;</div><div class="line">[2017-10-19T16:35:07,188][INFO ][logstash.outputs.elasticsearch] Attempting to install template &#123;:manage_template=&gt;&#123;<span class="string">"template"</span>=&gt;<span class="string">"logstash-*"</span>, <span class="string">"version"</span>=&gt;50001, <span class="string">"settings"</span>=&gt;</div><div class="line">&#123;<span class="string">"index.refresh_interval"</span>=&gt;<span class="string">"5s"</span>&#125;, <span class="string">"mappings"</span>=&gt;&#123;<span class="string">"_default_"</span>=&gt;&#123;<span class="string">"_all"</span>=&gt;&#123;<span class="string">"enabled"</span>=&gt;<span class="literal">true</span>, <span class="string">"norms"</span>=&gt;<span class="literal">false</span>&#125;, <span class="string">"dynamic_templates"</span>=&gt;[&#123;<span class="string">"message_field"</span>=&gt;&#123;<span class="string">"path_match"</span>=&gt;<span class="string">"message"</span>, <span class="string">"match_mapping_type"</span>=&gt;<span class="string">"string"</span>, <span class="string">"mapping"</span>=&gt;&#123;<span class="string">"type"</span>=&gt;<span class="string">"text"</span>, <span class="string">"norms"</span>=&gt;<span class="literal">false</span>&#125;&#125;&#125;, &#123;<span class="string">"string_fields"</span>=&gt;&#123;<span class="string">"match"</span>=&gt;<span class="string">"*"</span>, <span class="string">"match_mapping_type"</span>=&gt;<span class="string">"string"</span>, <span class="string">"mapping"</span>=&gt;&#123;<span class="string">"type"</span>=&gt;<span class="string">"text"</span>, <span class="string">"norms"</span>=&gt;<span class="literal">false</span>, <span class="string">"fields"</span>=&gt;&#123;<span class="string">"keyword"</span>=&gt;&#123;<span class="string">"type"</span>=&gt;<span class="string">"keyword"</span>, <span class="string">"ignore_above"</span>=&gt;256&#125;&#125;&#125;&#125;&#125;], <span class="string">"properties"</span>=&gt;&#123;<span class="string">"@timestamp"</span>=&gt;&#123;<span class="string">"type"</span>=&gt;<span class="string">"date"</span>, <span class="string">"include_in_all"</span>=&gt;<span class="literal">false</span>&#125;, <span class="string">"@version"</span>=&gt;&#123;<span class="string">"type"</span>=&gt;<span class="string">"keyword"</span>, <span class="string">"include_in_all"</span>=&gt;<span class="literal">false</span>&#125;, <span class="string">"geoip"</span>=&gt;&#123;<span class="string">"dynamic"</span>=&gt;<span class="literal">true</span>, <span class="string">"properties"</span>=&gt;&#123;<span class="string">"ip"</span>=&gt;&#123;<span class="string">"type"</span>=&gt;<span class="string">"ip"</span>&#125;, <span class="string">"location"</span>=&gt;&#123;<span class="string">"type"</span>=&gt;<span class="string">"geo_point"</span>&#125;, <span class="string">"latitude"</span>=&gt;&#123;<span class="string">"type"</span>=&gt;<span class="string">"half_float"</span>&#125;, <span class="string">"longitude"</span>=&gt;&#123;<span class="string">"type"</span>=&gt;<span class="string">"half_float"</span>&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;[2017-10-19T16:35:07,194][INFO ][logstash.outputs.elasticsearch] New Elasticsearch output &#123;:class=&gt;<span class="string">"LogStash::Outputs::ElasticSearch"</span>, :hosts=&gt;[<span class="string">"//localhost:9200"</span>]&#125;</div><div class="line">[2017-10-19T16:35:07,197][INFO ][logstash.pipeline        ] Starting pipeline &#123;<span class="string">"id"</span>=&gt;<span class="string">"main"</span>, <span class="string">"pipeline.workers"</span>=&gt;2, <span class="string">"pipeline.batch.size"</span>=&gt;125, <span class="string">"pipeline.batch.delay"</span>=&gt;5, <span class="string">"</span></div><div class="line">pipeline.max_inflight"=&gt;250&#125;[2017-10-19T16:35:07,582][INFO ][logstash.inputs.beats    ] Beats inputs: Starting input listener &#123;:address=&gt;<span class="string">"0.0.0.0:5044"</span>&#125;</div><div class="line">[2017-10-19T16:35:07,615][INFO ][logstash.pipeline        ] Pipeline main started</div><div class="line">[2017-10-19T16:35:07,623][INFO ][org.logstash.beats.Server] Starting server on port: 5044</div><div class="line">[2017-10-19T16:35:07,702][INFO ][logstash.agent           ] Successfully started Logstash API endpoint &#123;:port=&gt;9600&#125;</div></pre></td></tr></table></figure>
<h5 id="filebeat-服务启动日志"><a href="#filebeat-服务启动日志" class="headerlink" title="filebeat 服务启动日志"></a>filebeat 服务启动日志</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@DevEVN-21 ~]<span class="comment"># tail -f /var/log/filebeat/filebeat</span></div><div class="line">2017-10-19T15:29:38+08:00 INFO Prospector with previous states loaded: 1</div><div class="line">2017-10-19T15:29:38+08:00 INFO Starting prospector of <span class="built_in">type</span>: <span class="built_in">log</span>; id: 14402121705362619298 </div><div class="line">2017-10-19T15:29:38+08:00 INFO Prospector with previous states loaded: 4</div><div class="line">2017-10-19T15:29:38+08:00 INFO Starting prospector of <span class="built_in">type</span>: <span class="built_in">log</span>; id: 3085250400820318742 </div><div class="line">2017-10-19T15:29:38+08:00 INFO Prospector with previous states loaded: 10</div><div class="line">2017-10-19T15:29:38+08:00 INFO Starting prospector of <span class="built_in">type</span>: <span class="built_in">log</span>; id: 9380947956116938860 </div><div class="line">2017-10-19T15:29:38+08:00 INFO Prospector with previous states loaded: 6</div><div class="line">2017-10-19T15:29:38+08:00 INFO Starting prospector of <span class="built_in">type</span>: <span class="built_in">log</span>; id: 8452203097583608250 </div><div class="line">2017-10-19T15:29:38+08:00 INFO Loading and starting Prospectors completed. Enabled prospectors: 41</div><div class="line">2017-10-19T15:29:48+08:00 INFO Harvester started <span class="keyword">for</span> file: /data/soros/logs/soros-batch.log</div><div class="line">2017-10-19T15:29:48+08:00 INFO Harvester started <span class="keyword">for</span> file: /data/soros/logs/soros-marketing-service-error.log</div><div class="line">2017-10-19T15:29:48+08:00 INFO Harvester started <span class="keyword">for</span> file: /data/soros/logs/soros-marketing-service.log</div><div class="line">2017-10-19T15:29:48+08:00 INFO Harvester started <span class="keyword">for</span> file: /data/soros/logs/soros-order-service.log</div><div class="line">2017-10-19T15:29:58+08:00 INFO Harvester started <span class="keyword">for</span> file: /data/soros/logs/soros-pay-service.log</div><div class="line">2017-10-19T15:29:58+08:00 INFO Harvester started <span class="keyword">for</span> file: /data/soros/logs/soros-risk-service.log</div><div class="line">2017-10-19T15:30:08+08:00 INFO Non-zero metrics <span class="keyword">in</span> the last 30s: filebeat.harvester.open_files=8 filebeat.harvester.running=8 filebeat.harvester.started=8 libbeat.logstash.</div><div class="line">call_count.PublishEvents=6 libbeat.logstash.publish.read_bytes=108 libbeat.logstash.publish.write_bytes=125904 libbeat.logstash.published_and_acked_events=4469 libbeat.publisher.published_events=4469 publish.events=4535 registrar.states.current=58 registrar.states.update=4535 registrar.writes=6</div><div class="line">2017-10-19T15:30:38+08:00 INFO Non-zero metrics <span class="keyword">in</span> the last 30s: filebeat.harvester.open_files=12 filebeat.harvester.running=12 filebeat.harvester.started=12 libbeat.logsta</div><div class="line">sh.call_count.PublishEvents=7 libbeat.logstash.publish.read_bytes=54 libbeat.logstash.publish.write_bytes=127592 libbeat.logstash.published_and_acked_events=4581 libbeat.publisher.published_events=4581 publish.events=4593 registrar.states.update=4593 registrar.writes=7</div><div class="line">...</div><div class="line">[root@DevEVN-21 ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h5 id="elasticsearch-服务启动日志"><a href="#elasticsearch-服务启动日志" class="headerlink" title="elasticsearch 服务启动日志"></a>elasticsearch 服务启动日志</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">[root@ELK-test logs]<span class="comment"># tail -f  Julend_ES-cluster.log</span></div><div class="line">[2017-10-19T17:45:58,104][INFO ][o.e.n.Node               ] [Julend_es1] initializing ...</div><div class="line">[2017-10-19T17:45:58,180][INFO ][o.e.e.NodeEnvironment    ] [Julend_es1] using [1] data paths, mounts [[/data (/dev/sdb1)]], net usable_space [270.3gb], net total_space [29</div><div class="line">5.1gb], spins? [possibly], types [ext4][2017-10-19T17:45:58,180][INFO ][o.e.e.NodeEnvironment    ] [Julend_es1] heap size [1.9gb], compressed ordinary object pointers [<span class="literal">true</span>]</div><div class="line">[2017-10-19T17:45:58,857][INFO ][o.e.n.Node               ] [Julend_es1] node name [Julend_es1], node ID [mXtk8dQeQh-amui<span class="_">-d</span>5pVoA]</div><div class="line">[2017-10-19T17:45:58,857][INFO ][o.e.n.Node               ] [Julend_es1] version[5.6.1], pid[8287], build[667b497/2017-09-14T19:22:05.189Z], OS[Linux/3.10.0-514.el7.x86_64/</div><div class="line">amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_144/25.144-b01][2017-10-19T17:45:58,857][INFO ][o.e.n.Node               ] [Julend_es1] JVM arguments [-Xms2g, -Xmx2g, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:</div><div class="line">+UseCMSInitiatingOccupancyOnly, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=<span class="literal">true</span>, -Dfile.encoding=UTF-8, -Djna.nosys=<span class="literal">true</span>, -Djdk.io.permissionsUseCanonicalPath=<span class="literal">true</span>, -Dio.netty.noUnsafe=<span class="literal">true</span>, -Dio.netty.noKeySetOptimization=<span class="literal">true</span>, -Dio.netty.recycler.maxCapacityPerThread=0, -D<span class="built_in">log</span>4j.shutdownHookEnabled=<span class="literal">false</span>, -D<span class="built_in">log</span>4j2.disable.jmx=<span class="literal">true</span>, -D<span class="built_in">log</span>4j.skipJansi=<span class="literal">true</span>, -XX:+HeapDumpOnOutOfMemoryError, -Des.path.home=/usr/share/elasticsearch][2017-10-19T17:45:59,707][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [aggs-matrix-stats]</div><div class="line">[2017-10-19T17:45:59,707][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [ingest-common]</div><div class="line">[2017-10-19T17:45:59,707][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [lang-expression]</div><div class="line">[2017-10-19T17:45:59,707][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [lang-groovy]</div><div class="line">[2017-10-19T17:45:59,707][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [lang-mustache]</div><div class="line">[2017-10-19T17:45:59,707][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [lang-painless]</div><div class="line">[2017-10-19T17:45:59,707][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [parent-join]</div><div class="line">[2017-10-19T17:45:59,707][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [percolator]</div><div class="line">[2017-10-19T17:45:59,707][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [reindex]</div><div class="line">[2017-10-19T17:45:59,708][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [transport-netty3]</div><div class="line">[2017-10-19T17:45:59,708][INFO ][o.e.p.PluginsService     ] [Julend_es1] loaded module [transport-netty4]</div><div class="line">[2017-10-19T17:45:59,708][INFO ][o.e.p.PluginsService     ] [Julend_es1] no plugins loaded</div><div class="line">[2017-10-19T17:46:01,565][INFO ][o.e.d.DiscoveryModule    ] [Julend_es1] using discovery <span class="built_in">type</span> [zen]</div><div class="line">[2017-10-19T17:46:02,716][INFO ][o.e.n.Node               ] [Julend_es1] initialized</div><div class="line">[2017-10-19T17:46:02,716][INFO ][o.e.n.Node               ] [Julend_es1] starting ...</div><div class="line">[2017-10-19T17:46:02,854][INFO ][o.e.t.TransportService   ] [Julend_es1] publish_address &#123;192.168.1.41:9300&#125;, bound_addresses &#123;[::]:9300&#125;</div><div class="line">[2017-10-19T17:46:02,863][INFO ][o.e.b.BootstrapChecks    ] [Julend_es1] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks</div><div class="line">[2017-10-19T17:46:05,946][WARN ][o.e.d.z.ZenDiscovery     ] [Julend_es1] failed to connect to master [&#123;Julend_es3&#125;&#123;Go1e5drSSum7gbrKpIef8g&#125;&#123;KF8fUy32Q-WhSJDBCrdVrQ&#125;&#123;192.168.1</div><div class="line">.43&#125;&#123;192.168.1.43:9300&#125;], retrying...org.elasticsearch.transport.ConnectTransportException: [Julend_es3][192.168.1.43:9300] connect_timeout[30s]</div><div class="line">	at org.elasticsearch.transport.netty4.Netty4Transport.connectToChannels(Netty4Transport.java:361) ~[?:?]</div><div class="line">	at org.elasticsearch.transport.TcpTransport.openConnection(TcpTransport.java:561) ~[elasticsearch-5.6.1.jar:5.6.1]</div><div class="line">	at org.elasticsearch.transport.TcpTransport.connectToNode(TcpTransport.java:464) ~[elasticsearch-5.6.1.jar:5.6.1]</div><div class="line">	at org.elasticsearch.transport.TransportService.connectToNode(TransportService.java:332) ~[elasticsearch-5.6.1.jar:5.6.1]</div><div class="line">	at org.elasticsearch.transport.TransportService.connectToNode(TransportService.java:319) ~[elasticsearch-5.6.1.jar:5.6.1]</div><div class="line">	at org.elasticsearch.discovery.zen.ZenDiscovery.joinElectedMaster(ZenDiscovery.java:458) [elasticsearch-5.6.1.jar:5.6.1]</div><div class="line">	at org.elasticsearch.discovery.zen.ZenDiscovery.innerJoinCluster(ZenDiscovery.java:410) [elasticsearch-5.6.1.jar:5.6.1]</div><div class="line">	at org.elasticsearch.discovery.zen.ZenDiscovery.access<span class="variable">$4100</span>(ZenDiscovery.java:82) [elasticsearch-5.6.1.jar:5.6.1]</div><div class="line">	at org.elasticsearch.discovery.zen.ZenDiscovery<span class="variable">$JoinThreadControl</span><span class="variable">$1</span>.run(ZenDiscovery.java:1188) [elasticsearch-5.6.1.jar:5.6.1]</div><div class="line">	at org.elasticsearch.common.util.concurrent.ThreadContext<span class="variable">$ContextPreservingRunnable</span>.run(ThreadContext.java:569) [elasticsearch-5.6.1.jar:5.6.1]</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_144]</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624) [?:1.8.0_144]</div><div class="line">	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]</div><div class="line">Caused by: io.netty.channel.AbstractChannel<span class="variable">$AnnotatedConnectException</span>: Connection refused: 192.168.1.43/192.168.1.43:9300</div><div class="line">	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[?:?]</div><div class="line">	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[?:?]</div><div class="line">	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:352) ~[?:?]</div><div class="line">	at io.netty.channel.nio.AbstractNioChannel<span class="variable">$AbstractNioUnsafe</span>.finishConnect(AbstractNioChannel.java:340) ~[?:?]</div><div class="line">	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:632) ~[?:?]</div><div class="line">	at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:544) ~[?:?]</div><div class="line">	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[?:?]</div><div class="line">	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458) ~[?:?]</div><div class="line">	at io.netty.util.concurrent.SingleThreadEventExecutor<span class="variable">$5</span>.run(SingleThreadEventExecutor.java:858) ~[?:?]</div><div class="line">	... 1 more</div><div class="line">Caused by: java.net.ConnectException: Connection refused</div><div class="line">	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[?:?]</div><div class="line">	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[?:?]</div><div class="line">	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:352) ~[?:?]</div><div class="line">	at io.netty.channel.nio.AbstractNioChannel<span class="variable">$AbstractNioUnsafe</span>.finishConnect(AbstractNioChannel.java:340) ~[?:?]</div><div class="line">	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:632) ~[?:?]</div><div class="line">	at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:544) ~[?:?]</div><div class="line">	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[?:?]</div><div class="line">	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458) ~[?:?]</div><div class="line">	at io.netty.util.concurrent.SingleThreadEventExecutor<span class="variable">$5</span>.run(SingleThreadEventExecutor.java:858) ~[?:?]</div><div class="line">	... 1 more</div><div class="line">[2017-10-19T17:46:08,968][WARN ][o.e.d.z.ZenDiscovery     ] [Julend_es1] not enough master nodes discovered during pinging (found [[Candidate&#123;node=&#123;Julend_es2&#125;&#123;VQf-ph7NRTei</div><div class="line">EVHqAT4pRw&#125;&#123;v2HyA4hTT0miTzlFmi1vZg&#125;&#123;192.168.1.42&#125;&#123;192.168.1.42:9300&#125;, clusterStateVersion=-1&#125;, Candidate&#123;node=&#123;Julend_es1&#125;&#123;mXtk8dQeQh-amui<span class="_">-d</span>5pVoA&#125;&#123;1f1jfhuQQCyor5YXnm8oAg&#125;&#123;192.168.1.41&#125;&#123;192.168.1.41:9300&#125;, clusterStateVersion=-1&#125;]], but needed [3]), pinging again[2017-10-19T17:46:11,971][WARN ][o.e.d.z.ZenDiscovery     ] [Julend_es1] not enough master nodes discovered during pinging (found [[Candidate&#123;node=&#123;Julend_es2&#125;&#123;VQf-ph7NRTei</div><div class="line">EVHqAT4pRw&#125;&#123;v2HyA4hTT0miTzlFmi1vZg&#125;&#123;192.168.1.42&#125;&#123;192.168.1.42:9300&#125;, clusterStateVersion=-1&#125;, Candidate&#123;node=&#123;Julend_es1&#125;&#123;mXtk8dQeQh-amui<span class="_">-d</span>5pVoA&#125;&#123;1f1jfhuQQCyor5YXnm8oAg&#125;&#123;192.168.1.41&#125;&#123;192.168.1.41:9300&#125;, clusterStateVersion=-1&#125;]], but needed [3]), pinging again[2017-10-19T17:46:15,025][INFO ][o.e.c.s.ClusterService   ] [Julend_es1] detected_master &#123;Julend_es3&#125;&#123;Go1e5drSSum7gbrKpIef8g&#125;&#123;60Fb2YJZQ0Ct2uL7PcsuRQ&#125;&#123;192.168.1.43&#125;&#123;192.168.</div><div class="line">1.43:9300&#125;, added &#123;&#123;Julend_es2&#125;&#123;VQf-ph7NRTeiEVHqAT4pRw&#125;&#123;v2HyA4hTT0miTzlFmi1vZg&#125;&#123;192.168.1.42&#125;&#123;192.168.1.42:9300&#125;,&#123;Julend_es3&#125;&#123;Go1e5drSSum7gbrKpIef8g&#125;&#123;60Fb2YJZQ0Ct2uL7PcsuRQ&#125;&#123;192.168.1.43&#125;&#123;192.168.1.43:9300&#125;,&#125;, reason: zen-disco-receive(from master [master &#123;Julend_es3&#125;&#123;Go1e5drSSum7gbrKpIef8g&#125;&#123;60Fb2YJZQ0Ct2uL7PcsuRQ&#125;&#123;192.168.1.43&#125;&#123;192.168.1.43:9300&#125; committed version [1]])[2017-10-19T17:46:15,056][INFO ][o.e.h.n.Netty4HttpServerTransport] [Julend_es1] publish_address &#123;192.168.1.41:9200&#125;, bound_addresses &#123;[::]:9200&#125;</div><div class="line">[2017-10-19T17:46:15,056][INFO ][o.e.n.Node               ] [Julend_es1] started</div><div class="line">...</div><div class="line">[root@ELK-test logs]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h4 id="查看-elasticsearch-集群状态"><a href="#查看-elasticsearch-集群状态" class="headerlink" title="查看 elasticsearch 集群状态"></a>查看 elasticsearch 集群状态</h4><h5 id="获取集群中节点列表"><a href="#获取集群中节点列表" class="headerlink" title="获取集群中节点列表"></a>获取集群中节点列表</h5><p><code>curl &#39;localhost:9200/_cat/nodes?v&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/329B6F6EA752494CB4C4D6031C77B479?method=download&amp;shareKey=a3fee6f200f0e9d1d5f6382d823d4748" alt="获取集群中节点列表">  </p>
<h5 id="集群健康检查"><a href="#集群健康检查" class="headerlink" title="集群健康检查"></a>集群健康检查</h5><p><code>curl &#39;localhost:9200/_cat/health?v&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/61C65EEE2B034AD09FC4AF4CF3DC3C12?method=download&amp;shareKey=b3bb5668a73fdb35647afed00419fd10" alt="集群健康检查">  </p>
<h5 id="获取ElasticSearch索引"><a href="#获取ElasticSearch索引" class="headerlink" title="获取ElasticSearch索引"></a>获取ElasticSearch索引</h5><p><code>curl &#39;localhost:9200/_cat/indices?v&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/E862D2654364496E8474E7F44E5F09A4?method=download&amp;shareKey=6b9d3f0297cc80f23b43479a6c8a9841" alt="获取ElasticSearch索引"> </p>
<h5 id="本机节点查询"><a href="#本机节点查询" class="headerlink" title="本机节点查询"></a>本机节点查询</h5><p><code>curl -XGET &#39;localhost:9200/_nodes/_local?pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/7986E5063E69469C9C77699A37CE0244?method=download&amp;shareKey=ed6aa6f801cc993ccfd70b443772637a" alt="本机节点查询1">  </p>
<p><code>curl -XGET &#39;localhost:9200/_nodes/_local/network?pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/0E9EBB54EC8D43B7A4014DA31E70ADDE?method=download&amp;shareKey=4c3db04e15fe968eb9e9cb288a4a0069" alt="本机节点查询2">  </p>
<h5 id="节点状态"><a href="#节点状态" class="headerlink" title="节点状态"></a>节点状态</h5><p><code>curl -XGET &#39;http://localhost:9200/_nodes/stats?pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/99AAAE558FE74153914FA78F844400F9?method=download&amp;shareKey=7b22a74b7e6c7226be128574a3af75a9" alt="节点状态1">  </p>
<p><code>curl -XGET &#39;http://localhost:9200/_nodes/stats/os,process?pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/C9B6B407B93E4214B63331975EB47EF6?method=download&amp;shareKey=298f0b1e82cc9785fb9e321199bf6909" alt="节点状态2">  </p>
<p><code>curl -XGET &#39;http://localhost:9200/_nodes?pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/BB22940B585B4F90BFB2F8349A39B9FA?method=download&amp;shareKey=76c793558852d58d72fca64d37eec706" alt="节点状态3">  </p>
<p><code>curl -XGET &#39;http://localhost:9200/_nodes/process?pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/C29147AE73D345D8B50926CB00B4AF29?method=download&amp;shareKey=d32513c28c63fa9658abde8da2bde251" alt="节点状态4">  </p>
<p><code>curl -XGET &#39;http://localhost:9200/_nodes/os?pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/C7B4C4CFCCBB41C4AF799CAFE771E370?method=download&amp;shareKey=8aceb129875e52c7a00cc1b2457dabf7" alt="节点状态5">  </p>
<p><code>curl -XGET &#39;http://localhost:9200/_nodes/settings?pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/397DF0BEC4D94209B69D023C581406CA?method=download&amp;shareKey=5b2675affc9e3956f9a45fae3b45de59" alt="节点状态6">  </p>
<h5 id="获取集群健康状况"><a href="#获取集群健康状况" class="headerlink" title="获取集群健康状况"></a>获取集群健康状况</h5><p><code>curl -XGET &#39;http://localhost:9200/_cluster/health?pretty=true&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/45011E4E313142FAB9881CB9A5C6EF25?method=download&amp;shareKey=a37a6a50b678ebc5263086dd4c695d79" alt="获取集群健康状况">  </p>
<h5 id="集群状态"><a href="#集群状态" class="headerlink" title="集群状态"></a>集群状态</h5><p><code>curl -XGET &#39;http://localhost:9200/_cluster/state?pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/002F39A9F6CC407A87CE90BEB23C2039?method=download&amp;shareKey=f406f9dad95986261270cd10be864e58" alt="集群状态1">  </p>
<p><code>curl -XGET &#39;http://localhost:9200/_cluster/stats?human&amp;pretty&#39;</code><br><img src="http://note.youdao.com/yws/api/personal/file/63BC83C64A7242F88E43DA5BAA384F58?method=download&amp;shareKey=617d72ec5682fe56ad7d59b591abc205" alt="集群状态2">  </p>
<p>详细参考：<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-nodes-stats.html" target="_blank" rel="external">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-nodes-stats.html</a><br><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-nodes-info.html" target="_blank" rel="external">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-nodes-info.html</a>  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@ELK-test ~]<span class="comment"># ls /data/ELK_data/elasticsearch/logs/</span></div><div class="line">Julend_ES-cluster-2017-10-17.log  Julend_ES-cluster_deprecation.log             Julend_ES-cluster_index_search_slowlog.log</div><div class="line">Julend_ES-cluster-2017-10-18.log  Julend_ES-cluster_index_indexing_slowlog.log  Julend_ES-cluster.log</div><div class="line">[root@ELK-test ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>elasticsearch-head安装略  </p>
<p>第三个elasticsearch节点（之前有两个）加入到elasticsearch集群后，前两个elasticsearch节点会自动迁移同步数据到第三个节点<br>elasticsearch集群开始同步<br><img src="http://note.youdao.com/yws/api/personal/file/09534A80B39F4F178B3187517DAFA898?method=download&amp;shareKey=ce322eed4929d14ee88d4c92b950b364" alt="elasticsearch_cluster_status">  </p>
<p>elasticsearch集群同步完成后，各个elasticsearch节点几乎均匀分布，允许宕机一个节点<br><img src="http://note.youdao.com/yws/api/personal/file/B40C211E50634D648CF82E54B2FCD109?method=download&amp;shareKey=00425374d1c0425cbc224b1524ea90bf" alt="elasticsearch_cluster_status">  </p>
<h5 id="kibana-状态"><a href="#kibana-状态" class="headerlink" title="kibana 状态"></a>kibana 状态</h5><p><img src="http://note.youdao.com/yws/api/personal/file/26933567953E40EE8F284794F1CB78FC?method=download&amp;shareKey=56d001acd84646148ad4c51112103c24" alt="kibana">  </p>
<p><img src="http://note.youdao.com/yws/api/personal/file/644A2A5A28A24FE1B20C5ABFD27A9CDD?method=download&amp;shareKey=3251ff9b6046a236ff91f6e157e9ad41" alt="nginx+kibana">  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/11/04/部署FileBeat-logstash-elasticsearch集群-kibana/">http://www.yfshare.vip/2017/11/04/部署FileBeat-logstash-elasticsearch集群-kibana/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ELK由Elasticsearch、Logstash和Kibana三部分组件组成，这里新增了一个FileBeat，它是一个轻量级的日志收集处理工具(Agent)，Filebeat占用资源少，适合于在各个服务器上搜集日志后传输给Logstash，官方也推荐此工具&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="Elasticsearch" scheme="http://www.yfshare.vip/tags/Elasticsearch/"/>
    
      <category term="Logstash" scheme="http://www.yfshare.vip/tags/Logstash/"/>
    
      <category term="Kibana" scheme="http://www.yfshare.vip/tags/Kibana/"/>
    
      <category term="Filebeat" scheme="http://www.yfshare.vip/tags/Filebeat/"/>
    
      <category term="Elasticsearch Cluster" scheme="http://www.yfshare.vip/tags/Elasticsearch-Cluster/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch原理</title>
    <link href="http://www.yfshare.vip/2017/11/02/Elasticsearch%E5%8E%9F%E7%90%86/"/>
    <id>http://www.yfshare.vip/2017/11/02/Elasticsearch原理/</id>
    <published>2017-11-02T12:43:22.000Z</published>
    <updated>2017-11-02T12:46:05.303Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Elasticsearch原理<br><a id="more"></a></p>
<h3 id="动态更新的Lucene索引"><a href="#动态更新的Lucene索引" class="headerlink" title="动态更新的Lucene索引"></a>动态更新的Lucene索引</h3><p>Lucene处理方法，新收到的数据写到新文件里<br>Lucene把每次生成的倒排索引，叫做一个段（segment）。使用一个commit文件记录索引内所有的段，生产的segment的数据来源则是放在内存的buffer  </p>
<ol>
<li>当前索引有3个segment可用</li>
<li>新接收的数据进入内存buffer</li>
<li>内存buffer刷到磁盘，生成一个新的segment，commit文件同步更新<br><img src="http://note.youdao.com/yws/api/personal/file/E0FB3DE0ED34483699E2FD08AF8B07AA?method=download&amp;shareKey=4e8edcbd0741fefc8a26222648236865" alt="动态更新的Lucene索引">  </li>
</ol>
<h3 id="利用磁盘缓存实现的准实时检索"><a href="#利用磁盘缓存实现的准实时检索" class="headerlink" title="利用磁盘缓存实现的准实时检索"></a>利用磁盘缓存实现的准实时检索</h3><p>相对来说，磁盘处理速度很慢，因此在上述第三步中还存在一个中间状态  </p>
<ol>
<li>内存buffer生成一个新的segment，刷新到文件系统缓存中，Lucene即可检索这个新的segment</li>
<li>文件系统缓存真正同步到磁盘，commit文件更新<br>这一步刷新到文件系统缓存的步骤，在Elasticsearch中默认是1秒间隔，对于大部分应用来说，几乎是实时可搜索了。Elasticsearch也提供了单独的<code>/_refresh</code>接口，用户如果不满意，可以主动调整<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#加大refresh_interval参数</span></div><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/192.168.1.24-weixin_log-2017.10.28/_settings -d '</span></div><div class="line">&#123; <span class="string">"refresh_interval"</span>: <span class="string">"10s"</span> &#125;</div><div class="line"><span class="string">'</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>如果导入的是历史数据，可以关闭<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/192.168.1.24-weixin_log-2017.10.28 -d '</span></div><div class="line">&#123;</div><div class="line">    <span class="string">"settings"</span>: &#123;</div><div class="line">        <span class="string">"refresh_interval"</span>: <span class="string">"-1"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="string">'</span></div></pre></td></tr></table></figure></p>
<p>在导入完成后，修改回原来的值或者手动调用一次<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/192.168.1.24-weixin_log-2017.10.27/_refresh?pretty=true</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"_shards"</span> : &#123;</div><div class="line">    <span class="string">"total"</span> : 10,</div><div class="line">    <span class="string">"successful"</span> : 10,</div><div class="line">    <span class="string">"failed"</span> : 0</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://note.youdao.com/yws/api/personal/file/FD45A9D1BDDF4D92BFFBA09E04872591?method=download&amp;shareKey=735c6c6ebf035d8836ec5d827aa7e7fc" alt="利用磁盘缓存实现的准实时检索">  </p>
<h3 id="translog-提供的磁盘同步控制"><a href="#translog-提供的磁盘同步控制" class="headerlink" title="translog 提供的磁盘同步控制"></a>translog 提供的磁盘同步控制</h3><p>Elasticsearch在把数据写入到内存buffer时，还记录了一个translog的日志，来保证期间发生主机错误、硬件故障等异常情况时数据不会丢失<br>如果在这期间发生异常，Elasticsearch会从 commit 位置开始恢复整个translog文件中的记录<br><img src="http://note.youdao.com/yws/api/personal/file/6F91BABFB8B44FA2878D7FC4DF36EA8C?method=download&amp;shareKey=b5b3bb7b92596d736f0e8eb4b0b99079" alt="translog提供的磁盘同步控制"><br>等到真正把segment刷到磁盘，且commit 文件进行更新的时候，translog文件才清空，这一步叫flush。Elasticsearch也提供了<code>/_flush</code>接口<br>Elasticsearch默认设置为每30分钟主动执行一次flush，或者当translog文件大于512M时，两者分别可以通过<code>index.translog.flush_threshold_period</code>和<code>index.translog.flush_threshold_size</code>参数控制，Elasticsearch还可以通过<code>index.translog.flush_threshold_ops</code>参数设置每收到多少条数据后flush一次  </p>
<p>默认情况下，Elasticsearch每5秒，或每次请求操作结束前，会强制刷新 translog日志到磁盘。为了保证不丢数据 ，每次index、bulk、delete、update完成时，一定会触发新translog到磁盘，才给请求返回200 OK。这个改变提供数据安全性的同时降低了一点性能<br>可以在index template里设置如下参数来控制<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"index.translog.durability"</span>: <span class="string">"async"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="segment-merge的影响"><a href="#segment-merge的影响" class="headerlink" title="segment merge的影响"></a>segment merge的影响</h3><p>从前面看Lucene会写很多“新文件”，但这样会给服务器带来很大的负荷，每个文件都需要文件句柄，内存，CPU等各种资源，磁盘inode也有限<br>Elasticsearch通过segment merge操作将很多零散的segment做数据归并。这个过程有独立的线程来操作，并不影响新的segment的产生<br>当归并完成后，较大的segment刷到磁盘，commit文件做出相应变更，删除前面小的segment<br><img src="http://note.youdao.com/yws/api/personal/file/288CB47874D84FE5B4924D1DF06CA3A0?method=download&amp;shareKey=5cef29dfcfb7b1ed2d76c44fbe5da40d" alt="segment merge">  </p>
<p>并归线程配置<br>segment归并过程中，需要读取segment，归并计算，再写新的segment，最后还要保存到磁盘。此过程非常消耗磁盘I/O和CPU的任务。所以，Elasticsearch提供了对归并线程的限速机制，要确保这个任务不会影响到其他的任务<br>归并线程的限速配置<code>indices.store.throttle.max_bytes_per_sec</code>在Elasticsearch 5.0默认是10240MB，使用了Lucene CMS（ConcurrentMergeScheduler）的auto throttle机制，正常情况下不需要手动配置。配置参数如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPUT http://localhost:9200/_cluster/settings -d '</span></div><div class="line">&#123;</div><div class="line">        <span class="string">"persistent"</span>: &#123;</div><div class="line">            <span class="string">"indices.store.throttle.max_bytes_per_sec"</span>: <span class="string">"100mb"</span></div><div class="line">        &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<p>归并线程数目，Elasticsearch也通过计算公式控制：Math.min(3,Runtime.getRuntime().availableProcessors()/2)。即服务器CPU核数的一半大于3时，启用3个归并线程，否则启动跟CPU核数的一半相等的线程数。如果确定磁盘I/O不够，可以降低<code>index.merge.schedule.max_thread_count</code>配置修改  </p>
<p>归并策略主要有以下几条：  </p>
<ul>
<li><code>index.merge.policy.floor_segment</code> 默认2MB，小于这个值得segment优先被归并</li>
<li><code>index.merge.policy.max_merge_at_once</code> 默认一次归并10个segment</li>
<li><code>index.merge.policy.max_merge_at_once_explicit</code> 默认forcemerge时一次最多归并30个segment</li>
<li><code>index.merge.policy.max_merged_segment</code> 默认是5G，大于这个值得segment，不用参与归并，optimize除外</li>
</ul>
<p>forcemerge接口<br>segment最大为5G，也会存在很多的segment，但因归并任务太消耗资源，所以一般不选择加大<code>index.merge.policy.max_merged_segment</code>配置，而在较低负荷时间段，通过forcemerge接口，强行归并segment<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/192.168.1.24-weixin_log-2017.10.28/_forcemerge?max_num_segments=1</span></div><div class="line">&#123;<span class="string">"_shards"</span>:&#123;<span class="string">"total"</span>:10,<span class="string">"successful"</span>:10,<span class="string">"failed"</span>:0&#125;&#125;</div></pre></td></tr></table></figure></p>
<p>forcemerge线程消耗服务器资源比普通的归并线程还大，所以不要在写入数据的热索引执行这个操作，一般索引都是按天分割的  </p>
<h3 id="routing-和-replica的读写过程"><a href="#routing-和-replica的读写过程" class="headerlink" title="routing 和 replica的读写过程"></a>routing 和 replica的读写过程</h3><p>在Elasticsearch分布层面上，当一个Elasticsearch节点收到一条数据的请求时，通过以下方式来确认数据应该存储到哪个分片的  </p>
<ol>
<li>路由计算<br>Elasticsearch没有额外的依赖，对任意一条数据计算其对应分片的方式如下  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shard = <span class="built_in">hash</span>(routing) % number_of_primary_shards</div></pre></td></tr></table></figure>
</li>
</ol>
<p>每个数据都有一个routing参数，默认情况下，使用其<code>_id</code>值。将其<code>_id</code>值哈希计算后，对索引的主分片数取余，就是数据实际应该存储到的分片ID。<br>由于取余这种计算方式，完全依赖分母，所以不能修改索引的主分片数。一旦主分片数不一样，所有数据的存储位置计算结果都会改变，索引数据将完全不可读。  </p>
<p>副本一致性<br>数据副本是分布式系统的一个标配。数据流程如下：<br><img src="http://note.youdao.com/yws/api/personal/file/BA7FE1FF0D25420BB14CA1D7EEC67193?method=download&amp;shareKey=ac023a5a0bed3c9485219979e64ef9e3" alt="数据写入流程">  </p>
<ol>
<li>客户端请求发送给node1节点，图中node1为master节点</li>
<li>node1用数据的<code>id_</code>取余计算得到应该将数据存储到share0上，通过cluster state信息发现share0的主分片已经分配到node3上，node1将请求数据给node3  </li>
<li>node3完成请求数据的索引过程，存入主分片0，然后并行转发数据给分配由shard0的副本分片的node1和node2。当收到任一节点汇报副本分片数据写入成功，node3即返回给初始的接收节点node1，宣布数据写入成功。node1返回成功响应给客户端<br>下面几个参数可以控制这个过程：  </li>
</ol>
<ul>
<li><code>wait_for_active_shards</code>: 两个副本只要有一个成功，就返回给客户端，默认值计算如下<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">int((primary + number_of_replicas)/2 ) +1</div></pre></td></tr></table></figure>
</li>
</ul>
<p>该参数通过<code>index.write.wait_for_active_shards</code>在索引级别设置，也可以根据需要单个写入请求上作为参数使用，设置成为1仅写完主分片就返回；设置为all，表示等所有副本分片都写入完成才返回，还可以设置为介于1和<code>number_of_replicas +1</code>之间的值  </p>
<ul>
<li><code>timeout</code>: 如果集群出现异常，有些分片不可用，Elasticsearch会等待1分钟确认分片是否正常，可以用<code>?timeout=30s</code>参数来缩短这个等待的时间<br>副本配置和分片配置不一样，可以随时调整。有些较大的索引，甚至可以在做<code>optimize</code>前，先把副本全部取消，等<code>optimize</code>完成后，在重新开启副本，节约单个segment的重复归并消耗  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPUT http://localhost:9200/192.168.1.24-weixin_log-2017.10.28/_settings -d '</span></div><div class="line">&#123;</div><div class="line">    <span class="string">"index"</span>: &#123; <span class="string">"number_of_replicas"</span>: 0 &#125;</div><div class="line">&#125;</div><div class="line"><span class="string">'</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="shard-的-allocate-控制"><a href="#shard-的-allocate-控制" class="headerlink" title="shard 的 allocate 控制"></a>shard 的 allocate 控制</h3><p>Elasticsearch由以下策略来决定某个shard分配在哪个节点，是由Elasticsearch自行决定的  </p>
<ul>
<li>新索引的生成</li>
<li>索引的删除</li>
<li>新增副本分片</li>
<li>节点增减引发的数据平衡</li>
</ul>
<p>Elasticsearch控制这部分逻辑的参数如下：  </p>
<ul>
<li><code>cluster.routing.allocation.enable</code> 参数用来控制允许分配哪种分片。默认是all。可选项包含<code>primaries</code> 和<code>new_primaries</code>。<code>none</code>则彻底拒绝分片</li>
<li><code>cluster.routing.allocation.allow_rebalance</code> 参数用来控制什么时候允许数据平衡。默认是<code>indices_all_active</code>，即要求所有分片都正常启用以后，才可以进行数据平衡操作，否则在集群重启阶段，会浪费很多流量</li>
<li><code>cluster.routing.allocation.cluster_concurrent_rebalance</code> 参数用来控制集群内同时运行的数据均衡任务个数。默认是2个，如果有节点增减，且集群负载压力不高的情况下，可以适当加大</li>
<li><code>cluster.routing.allocation.node_initial_primaries_recoveries</code> 参数用来控制节点重启时，允许同时恢复几个主分片。默认是4个，如果节点是多磁盘，且I/O压力不大，可以适当增加</li>
<li><code>cluster.routing.allocation.node_concurrent_recoveries</code> 参数用来控制节点除了主分片重启恢复以外其他情况下，允许同时运行的数据恢复任务。默认是2个。所以，节点重启时，可以看到主分片通过本地恢复迅速完成，副分片通过网络复制的恢复却很慢，并发线程本身也减少了一半。在Elasticsearch 1.6后，冷索引的副本分片也可以本地恢复，可以适当加大</li>
<li><code>indices.recovery.concurrent_streams</code> 参数用来控制节点从网络复制恢复副本分片时的数据流个数。默认是3个，可以配合上一条配置一起加大  </li>
<li><code>indices.recovery.max_bytes_per_sec</code> 参数用来控制节点恢复时的速率。默认是 40MB</li>
</ul>
<p>运维人员较常见的策略有2种：  </p>
<ul>
<li><p>磁盘限额，为了保护节点数据安全。Elasticsearch会定时（<code>cluster.info.update.interval</code>默认为30秒）检查一下各节点的数据目录磁盘使用情况。在达到<code>cluster.routing.allocation.disk.watermark.low</code>（默认85%）的时候，新索引分片就不会再分配到这个节点上了。在达到<code>cluster.routing.allocation.disk.watermark.high</code>（默认90%）的时候就会触发该节点现存分片的数据平衡，把数据挪到其他节点上去。这两个值可以写成百分比或者具体字节数。可以适当修改参数配置：  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPUT http://localhost:9200/_cluster/settings -d '&#123;</span></div><div class="line"><span class="string">"transient"</span>: &#123;</div><div class="line">    <span class="string">"cluster.routing.allocation.disk.watermark.low"</span>: <span class="string">"85%"</span>,</div><div class="line">    <span class="string">"cluster.routing.allocation.disk.watermark.high"</span>: <span class="string">"10gb"</span>,</div><div class="line">    <span class="string">"cluster.info.update.interval"</span>: <span class="string">"1m"</span></div><div class="line">&#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure>
</li>
<li><p>热索引分片不均。默认情况下，Elasticsearch集群的数据均衡策略是以各节点的分片总数（<code>indices_all_active</code>）作为基准的。可以提高均衡搜索压力。一般压力集群中在新索引的数据写入方面，正常运行时，没有问题的。但当集群扩容时，新加入集群的节点，分片总数远低于其他节点，如果有新的索引创建，Elasticsearch的默认策略会导致新索引的所有主分片几乎全部分配到这个新节点上。整个集群的写入压力全部在这个节点上，可以会导致这个节点出现异常，集群出现异常。<br>在ELK环境中，需要预先计算好索引的分片数，配置好单节点的分片限额。比如：一个5节点的集群，索引主分片10个，副本1个，则平均下来每个节点应该有4个分片，则应配置为：  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPUT http://localhost:9200/192.168.1.24-weixin_log-2017.10.28/_settings -d '&#123;</span></div><div class="line">    <span class="string">"index"</span>: &#123; <span class="string">"routing.allocation.total_shards_per_node"</span>: <span class="string">"5"</span> &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>这里配置的是5而不是4，需要预防有机器故障，分片发生迁移失败的情况  </p>
<p>Elasticsearch中有一系列参数互相影响，最终联合决定分片分配：  </p>
<ul>
<li><code>cluster.routing.allocation.balance.shard</code> 节点上分配分片的权重，默认值为 0.45。 数值越大越倾向于在节点层面均衡分片  </li>
<li><code>cluster.routing.allocation.balance.index</code> 每个索引往单个节点上分配分片的权重，默认值为0.55。 数值越大越倾向于在索引层面均衡分片</li>
<li><code>cluster.routing.allocation.balance.threshold</code> 大于阈值则触发均衡操作。默认值为1。 Elasticsearch计算方法是：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(indexBalance (node.numShards(index) - avgShardsPerNode(index)) + shardBalance (node.numShards() - avgShardsPerNode)) &lt;=&gt; weightthreshold</div></pre></td></tr></table></figure>
</li>
</ul>
<p>所以，也可以采取加大<code>cluster.routing.allocation.balance.index</code>的措施，甚至设置<code>cluster.routing.allocation.balance.shard</code> 为0来尽量采用索引内的节点均衡  </p>
<h3 id="reroute-接口"><a href="#reroute-接口" class="headerlink" title="reroute 接口"></a>reroute 接口</h3><p>上述都是从策略层面控制分片的选择，在必要的时候可以通过Elasticsearch的<code>reroute</code>接口，手动完成对分片的分配选择的控制<br>reroute接口支持三种指令：<code>allocate</code>、<code>move</code>、<code>cancel</code>，常用的是<code>allocate</code>和<code>move</code>  </p>
<ul>
<li><code>allocate</code>指令：因为负载过高等原因，有时候个别分片长期处于<code>UNASSIGNED</code>状态，可以手动分配分片到指定节点上。默认情况下只允许手动分配副本分片，所以如果是主分片故障，需要单独加一个<code>allow_primary</code>选项  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/_cluster/reroute -d '&#123;</span></div><div class="line"><span class="string">"commands"</span>: [&#123;</div><div class="line">    <span class="string">"allocate"</span>: &#123;</div><div class="line">        <span class="string">"index"</span>: <span class="string">"192.168.1.24-weixin_log-2017.10.28"</span>, <span class="string">"shard"</span>: 61, <span class="string">"node"</span>: <span class="string">"192.168.1.42"</span>, <span class="string">"allow_primary"</span>: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">    &#125;]</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>注：如果是历史数据的话，需要提前确认哪个节点上保留有这个分片的实际目录，且目录大小最大。然后手动分片到这个节点上，以此减少数据丢失。  </p>
<ul>
<li><code>move</code>指令： 因负载过高，磁盘利用率过高，服务器下线，更换磁盘等原因，可能会需要从节点上移走部分分片<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/_cluster/reroute -d '&#123;</span></div><div class="line"><span class="string">"command"</span>: [&#123;</div><div class="line">    <span class="string">"move"</span>: &#123;</div><div class="line">        <span class="string">"index"</span>: <span class="string">"192.168.1.24-weixin_log-2017.10.28"</span>, <span class="string">"shard"</span>: 0, <span class="string">"from_node"</span>: <span class="string">"192.168.1.43"</span>, <span class="string">"to_node"</span>: <span class="string">"192.168.1.42"</span></div><div class="line">    &#125;</div><div class="line">    &#125;]</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>如果自己手动reroute失败，Elasticsearch返回的响应中会带上失败的原因。从Elasticsearch 5.0开始，新增了一个<code>allocation explain</code>接口，用来解释指定分片的具体失败原因<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET 'http://localhost:9200/_cluster/allocation/explain' -d '&#123;</span></div><div class="line"><span class="string">"index"</span>: <span class="string">"192.168.1.24-weixin_log-2017.10.28"</span>,</div><div class="line"><span class="string">"shard"</span>: 0,</div><div class="line"><span class="string">"primary"</span>: <span class="literal">false</span></div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<p>得到的响应如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"shard"</span>: &#123;</div><div class="line">        <span class="string">"index"</span>: <span class="string">"192.168.1.24-weixin_log-2017.10.28"</span>,</div><div class="line">        <span class="string">"index_uuid"</span>: <span class="string">"KnW0-zELRs6PK8410r38ZA"</span>,</div><div class="line">        <span class="string">"id"</span>: 0,</div><div class="line">        <span class="string">"primary"</span>: <span class="literal">false</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"assigned"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="string">"shard_state_fetch_pending"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="string">"unassigned_info"</span>: &#123;</div><div class="line">        <span class="string">"reason"</span>: <span class="string">"INDEX_CREATED"</span>,</div><div class="line">        <span class="string">"at"</span>: <span class="string">"2017-10-28T20:04:23.620Z"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"allocation_delay_ms"</span>: 0,</div><div class="line">    <span class="string">"remaining_delay_ms"</span>: 0,</div><div class="line">    <span class="string">"nodes"</span>: &#123;</div><div class="line">        <span class="string">"V-Spi0AyRZ6ZvKbaI3691w"</span>: &#123;</div><div class="line">            <span class="string">"node_name"</span>: <span class="string">"H5dfFeA"</span>,</div><div class="line">            <span class="string">"node_attributes"</span>: &#123;</div><div class="line">                <span class="string">"bar"</span>: <span class="string">"baz"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"store"</span>: &#123;</div><div class="line">                <span class="string">"shard_copy"</span>: <span class="string">"NONE"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"final_decision"</span>: <span class="string">"NO"</span>,</div><div class="line">            <span class="string">"final_explanation"</span>: <span class="string">"the shard cannot be assigned because one or more allocation decider returns a 'NO' decision"</span>,</div><div class="line">            <span class="string">"weight"</span>: 0.06666675,</div><div class="line">            <span class="string">"decisions"</span>: [&#123;</div><div class="line">                <span class="string">"decider"</span>: <span class="string">"filter"</span>,</div><div class="line">                <span class="string">"decision"</span>: <span class="string">"NO"</span>,</div><div class="line">                <span class="string">"explanation"</span>: <span class="string">"node does not match index include filters [foo:\"bar\"]"</span></div><div class="line">                &#125;]</div><div class="line">            &#125;,</div><div class="line">            <span class="string">"Qc6VL8c5RWaw1qXZ0Rg57g"</span>: &#123;</div><div class="line">                ...</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>这是一段很长的JSON字符，会把集群里所有节点都列上来，挨个解释为什么不能分配到这个节点上  </p>
<h3 id="节点下线（迁移）"><a href="#节点下线（迁移）" class="headerlink" title="节点下线（迁移）"></a>节点下线（迁移）</h3><p>集群中个别节点出现故障预警，也是在Elasticsearch运维工作中常见的情况。如果已经稳定运行了一段时间的集群，每个节点上都保存有数量不少的分片，这时通过 reroute接口手动转移就太麻烦了，可以采取另一种方式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPUT http://localhost:9200/_cluster/settings -d '&#123;</span></div><div class="line"><span class="string">"transient"</span>: &#123;</div><div class="line">    <span class="string">"cluster.routing.allocation.exclude._ip"</span>: <span class="string">"192.168.1.43"</span></div><div class="line">&#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<p>Elasticsearch就会把这个IP节点上的所有分片，都自动转移到其他的节点上。等转移完成后，这个节点就可以毫无影响的下线了<br>和<code>_ip</code>类似的参数还有<code>_host</code>，<code>_name</code>等。这类参数不仅仅是cluster级别，也可以是index级别  </p>
<h3 id="冷热数据的读写分离"><a href="#冷热数据的读写分离" class="headerlink" title="冷热数据的读写分离"></a>冷热数据的读写分离</h3><p>实施步骤如下：  </p>
<ol>
<li>N台机器做热数据的存储，上面只放当天的数据。这N台数据节点上面的elasticsearch.yml中配置<code>node.tag: host</code></li>
<li>之前的数据放在另外的M台机器上，这M台机器冷数据节点中配置<code>node.tag: stale</code></li>
<li><p>模版中控制对新建索引添加<code>hot</code>标签：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"order"</span>: 0,</div><div class="line">    <span class="string">"template"</span>: <span class="string">"*"</span>,</div><div class="line">    <span class="string">"settings"</span>: &#123;</div><div class="line">        <span class="string">"index.routing.allocation.require.tag"</span>: <span class="string">"hot"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>每天计划任务更新索引的配置，将<code>tag</code>更变为<code>stale</code>，索引会自动迁移到M台冷数据节点  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPUT http://localhost:9200/indexname/_settings -d '</span></div><div class="line">&#123;</div><div class="line">    <span class="string">"index"</span>: &#123;</div><div class="line">        <span class="string">"routing"</span>: &#123;</div><div class="line">            <span class="string">"allocation"</span>: &#123;</div><div class="line">                <span class="string">"require"</span>: &#123;</div><div class="line">                    <span class="string">"tag"</span>: <span class="string">"stale"</span></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>这样，写操作就在N台热数据节点上，大范围的独操作集中在M台冷数据节点上，避免了堵塞影响<br>参考： <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/shard-allocation-filtering.html" target="_blank" rel="external">https://www.elastic.co/guide/en/elasticsearch/reference/master/shard-allocation-filtering.html</a>  </p>
<h3 id="Elasticsearch自动发现的配置"><a href="#Elasticsearch自动发现的配置" class="headerlink" title="Elasticsearch自动发现的配置"></a>Elasticsearch自动发现的配置</h3><p>Elasticsearch是P2P类型（gossip协议）的分布式系统，除了集群状态管理以外，其他所有的请求都可以发送到集群内任意一台节点上，这个节点可以自己找到需求转发给哪些节点，并且直接跟这个节点通讯。<br>在Elasticsearch 5.0以后自动发现方式为单播（unicast）方式，原来的组播（multicast）被彻底删除。<br>单播方式的配置里，提供几台节点的地址里（和可选端口），Elasticsearch将其视作 <code>gossip router</code>角色，借以完成集群的发现。由于这只是Elasticsearch内很小的一个功能，所以，<code>gossip router</code>角色并不需要单独配置，每个Elasticsearch节点都可以担任。所以采用单播方式的集群，各个节点都配置相同的几个节点列表作为<code>router</code>即可。<br>此外，考虑到节点有时候因为高负载，慢GC等原因，可能会有偶尔没有及时相应的<code>ping</code>包，一般建议稍微加大<code>Fault Detection</code>的超时时间。同样基于安全考虑做的变更，还有监听的主机名，现在默认只监听本地lo网卡上的信号。所以正式环境上需要修改配置为监听具体的网卡：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">network.host: <span class="string">"192.168.1.41"</span></div><div class="line">discovery.zen.minimum_master_nodes:3</div><div class="line">discovery.zen.ping.timeout: 100s</div><div class="line">discovery.zen.fd.ping_timeout: 100s</div><div class="line">discovery.zen.ping.multicast.enabled: <span class="literal">false</span></div><div class="line">discovery.zen.ping.unicase.hosts: [<span class="string">"192.168.1.41"</span>,<span class="string">"192.168.1.42"</span>,<span class="string">"192.168.1.43"</span>]</div></pre></td></tr></table></figure></p>
<p>上面的<code>fd</code>是<code>fault detection</code>的缩写  </p>
<ul>
<li><code>discovery.zen.ping.timeout</code> 参数仅在加入或者选举master主节点的时候才起作用</li>
<li><code>discovery.zen.fd.ping_timeout</code> 参数在稳定运行的集群中，master检测所有节点，以及节点检测master是否正常时，长期有用</li>
</ul>
<p>既然是长期使用，自然还有运行间隔和重试配置，可以根据实际情况调整：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">discovery.zen.fd.ping_intervel: 10s</div><div class="line">discovery.zen.fd.ping_retries: 10</div></pre></td></tr></table></figure></p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/11/02/Elasticsearch原理/">http://www.yfshare.vip/2017/11/02/Elasticsearch原理/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Elasticsearch原理&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="Elasticsearch" scheme="http://www.yfshare.vip/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Kibana5使用指南</title>
    <link href="http://www.yfshare.vip/2017/10/30/Kibana5%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://www.yfshare.vip/2017/10/30/Kibana5使用指南/</id>
    <published>2017-10-30T13:35:02.000Z</published>
    <updated>2017-11-02T12:44:39.068Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>ELK由Elasticsearch、Logstash和Kibana三部分组件组成，这里新增了一个FileBeat，它是一个轻量级的日志收集处理工具(Agent)，Filebeat占用资源少，适合于在各个服务器上搜集日志后传输给Logstash，官方也推荐此工具<br><a id="more"></a><br>Filebeat隶属于Beats。目前Beats包含四种工具：  </p>
<ol>
<li>Packetbeat（搜集网络流量数据）  </li>
<li>Topbeat（搜集系统、进程和文件系统级别的 CPU 和内存使用情况等数据）</li>
<li>Filebeat（搜集文件数据）</li>
<li>Winlogbeat（搜集 Windows 事件日志数据）<h3 id="测试环境ELK架构讲解"><a href="#测试环境ELK架构讲解" class="headerlink" title="测试环境ELK架构讲解"></a>测试环境ELK架构讲解</h3>官方ELK架构图：<br><img src="http://note.youdao.com/yws/api/personal/file/DCE29CF684C34FC3BA73809D566B0150?method=download&amp;shareKey=798f64543357202a0efb9a95d35c4e5b" alt="filebeat">  </li>
</ol>
<p>目前测试环境的拓扑图：<br><img src="http://note.youdao.com/yws/api/personal/file/4772759A56704D82A3D1C6056C76613F?method=download&amp;shareKey=3c9825a509086b1a28b8ffd34aa9c6b0" alt="ELK_拓扑图">  </p>
<h3 id="Elasticsearch基本原理"><a href="#Elasticsearch基本原理" class="headerlink" title="Elasticsearch基本原理"></a>Elasticsearch基本原理</h3><p><img src="http://note.youdao.com/yws/api/personal/file/FD45A9D1BDDF4D92BFFBA09E04872591?method=download&amp;shareKey=735c6c6ebf035d8836ec5d827aa7e7fc" alt="利用磁盘缓存实现的准实时检索"><br><img src="http://note.youdao.com/yws/api/personal/file/6F91BABFB8B44FA2878D7FC4DF36EA8C?method=download&amp;shareKey=b5b3bb7b92596d736f0e8eb4b0b99079" alt="translog提供的磁盘同步控制"><br><img src="http://note.youdao.com/yws/api/personal/file/288CB47874D84FE5B4924D1DF06CA3A0?method=download&amp;shareKey=5cef29dfcfb7b1ed2d76c44fbe5da40d" alt="segment merge">  </p>
<p>官方文档<br>Filebeat：<br><a href="https://www.elastic.co/cn/products/beats/filebeat" target="_blank" rel="external">https://www.elastic.co/cn/products/beats/filebeat</a><br><a href="https://www.elastic.co/guide/en/beats/filebeat/5.6/index.html" target="_blank" rel="external">https://www.elastic.co/guide/en/beats/filebeat/5.6/index.html</a>  </p>
<p>Logstash：<br><a href="https://www.elastic.co/cn/products/logstash" target="_blank" rel="external">https://www.elastic.co/cn/products/logstash</a><br><a href="https://www.elastic.co/guide/en/logstash/5.6/index.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/5.6/index.html</a>  </p>
<p>Elasticsearch：<br><a href="https://www.elastic.co/cn/products/elasticsearch" target="_blank" rel="external">https://www.elastic.co/cn/products/elasticsearch</a><br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/index.html" target="_blank" rel="external">https://www.elastic.co/guide/en/elasticsearch/reference/5.6/index.html</a>  </p>
<p>elasticsearch中文社区：<br><a href="https://elasticsearch.cn/" target="_blank" rel="external">https://elasticsearch.cn/</a>  </p>
<h3 id="Kibana使用指南"><a href="#Kibana使用指南" class="headerlink" title="Kibana使用指南"></a>Kibana使用指南</h3><p>Kibana有另一个名字 elasticsearch dashboard，设计参考了 Splunk<br>Kibana主要功能 Discover，Visualize，Dashboard，Timelion，DevTools，Management  </p>
<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-query-string-query.html#query-string-syntax" target="_blank" rel="external">lucene query syntax</a><br><img src="http://note.youdao.com/yws/api/personal/file/45BD110CD9B24ECAACC51EE54637EAB8?method=download&amp;shareKey=dd229f6cfe56bfd10396117cb4790a65" alt="kibana">  </p>
<p><img src="http://note.youdao.com/yws/api/personal/file/58CBFFB81D4941178EDE60CB254E0512?method=download&amp;shareKey=7eec44cd864fb579a5b12694c77bc52c" alt="kibana">  </p>
<p><img src="http://note.youdao.com/yws/api/personal/file/8732A5AA79B64E1F9B1A63D85CD8F330?method=download&amp;shareKey=f7d887ce2e084814367c8555c656b3c1" alt="Kibana">  </p>
<p><img src="http://note.youdao.com/yws/api/personal/file/B80830DE946244E5A0105A62FBA738D9?method=download&amp;shareKey=7b9b3a854c883ca4bc17f286c5c6c743" alt="kibana">  </p>
<h3 id="Elasticsearch查询语法"><a href="#Elasticsearch查询语法" class="headerlink" title="Elasticsearch查询语法"></a>Elasticsearch查询语法</h3><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/common-options.html#date-math" target="_blank" rel="external">Elasticsearch Query DSL查询语法</a><br><img src="http://note.youdao.com/yws/api/personal/file/3E744DB1A632475EA8D5460F76BDD6BC?method=download&amp;shareKey=8ef13860f3e3f2eb1c901e2b017dc74e" alt="kibana">  </p>
<p><img src="http://note.youdao.com/yws/api/personal/file/25D871BBDF604A1189E18F6D922C4014?method=download&amp;shareKey=7f4fcf3f5e29920e64099a8deb137757" alt="Elasticsearch Query DSL"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"query"</span>: &#123;</div><div class="line">    <span class="string">"term"</span>: &#123;</div><div class="line">      <span class="string">"_id"</span>: <span class="string">"AV9orWWLv96dGKcHDVyi"</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://note.youdao.com/yws/api/personal/file/DA5A626EFFE3454F922FAD2B4F0C45BF?method=download&amp;shareKey=48ce91f24595076b45122e9dea483db9" alt="kibana_search">  </p>
<p>querystring 语法<br>上例中<code>?q=</code>后面的就是querystring语法，会在kibana中经常使用  </p>
<ul>
<li><code>全文检索</code>：直接写搜索的单词。如：<code>?q=aaaa</code></li>
<li><code>单字段的全文检索</code>：在搜索单词之前加上字段名和冒号。如：<code>?q=user:jack</code></li>
<li><code>单字段的精确检索</code>：在搜索单词前加上双引号。如：<code>?q=user:&quot;jack&quot;</code></li>
<li><code>多个检索条件的组合</code>：可以使用<code>NOT</code>、<code>AND</code>、<code>OR</code>来组合检索，必须是大写的。如：<code>?q=user:(&quot;jack&quot; OR &quot;bob&quot;) AND NOT mesg:aaaa</code></li>
<li><code>字段是否存在</code>：<code>_exists_:user</code>表示要求user字段存在，<code>_missing_:user</code>表示user字段不存在。如：<code>?q=_exists_:beat.name</code></li>
<li><code>通配符</code>：用<code>?</code>表示单字母，<code>*</code>表示任意个字母。如：<code>?q=DevE?N</code>，<code>?q=DevE?N*</code></li>
<li><code>正则</code>：比通配符更复杂一点点。如：<code>?q=/dub{2}o/</code><br>注：Elasticsearch正则性能不好，尽量不要使用太复杂或不使用。参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-regexp-query.html#regexp-synntax" target="_blank" rel="external">Elasticsearch正则表达式语法</a>  </li>
<li><code>近似搜索</code>：用<code>~</code>表示搜索单词可能有一字母写的不对。如：<code>?q=dubao~</code></li>
<li><code>范围搜索</code>：对数值和时间。如：<code>?q=@timestamp:&gt;150928968615</code>，<code>?q=@timestamp:[&quot;now-1m&quot; TO &quot;now&quot;]</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -XGET http://localhost:9200/192.168.1.21-account_errorlog-2017.10.29/_search?pretty=<span class="literal">true</span>?q=<span class="string">'com.alibaba.dubbo.monitor.MonitorService'</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -XGET http://localhost:9200/192.168.1.21-account_errorlog-2017.10.29/_search?pretty=<span class="literal">true</span>?q=beat.hostname=<span class="string">'DevEVN-21'</span></div></pre></td></tr></table></figure>
<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-queries.html" target="_blank" rel="external">Elasticsearch其他查询语法</a><br><a href="http://www.yfshare.vip/2017/10/30/Elasticsearch%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95/#全文搜索">Elasticsearch全文搜索</a>  </p>
<p><img src="http://note.youdao.com/yws/api/personal/file/F9660B5ED9F2481B85888ACCF2FC11B4?method=download&amp;shareKey=328b06bb6a52b854733eb636b0938a73" alt="Kibana">  </p>
<p><img src="http://note.youdao.com/yws/api/personal/file/E39A9C72B26B4883BFE71058C40D3EF4?method=download&amp;shareKey=aaf776329e429927fe221afb5b37ecd4" alt="Kibana">  </p>
<h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#nginx日志格式</span></div><div class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></div><div class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></div><div class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</div><div class="line"></div><div class="line"><span class="comment">#nginx access日志</span></div><div class="line">192.168.1.153 - - [18/Oct/2017:21:48:00 +0800] <span class="string">"GET /ErrorPages/404.html HTTP/1.0"</span> 404 571 <span class="string">"https://devqian.julend.com/static/pageHtml/bindCardCallback.html?view=zhimaCredit&amp;params=XHk1tuyGnXS1wGSpis2PiC9UKCizLIiGIm0eJ%2Fz1lXc8JdGVXxB2Ftg9hFKZjFfwh3w%2FM6UIEpxQ11TTqXf31xNx9N%2FzGMc00rpvf6YpKEJPQFFCL4X9eLQdLJl5KaaGiK8AdNZS38dJDKEzFJP0o1523nCOhjJEtgS0394oLIB2siIqYF7RTVgBaU1xE72m3vmZcvqvgVZUH8ozt8tftXh4Wq5paf647mA%2FZZJOaXabeFEwuwa7dhtVXTT8CBdnOOiDC5WmwBCC%2FnIqKmfTI1gmFvQUobDA9RY4UcMdMY9RixLkhSdQ8k5LtpD2NVuJDLEscZAdfROhyYeEnZ7Ptg%3D%3D&amp;sign=ABeWMdLqNeFUhDYKUJsJfzLolxA%2Fo64Wl8mmgX36yqM5VWHMvB7VcpZJ3AA7WsH%2BTFe6EARuABMe2HupY6DbzuITufa9aPZX9BHbN6dLPMre0n8aHZnr59h%2FC6Us%2FAW11tu2n6l%2F1dSyCo951diQ55en%2BO%2FffRJ1ldFUwzhzNCQ%3D"</span> <span class="string">"Mozilla/5.0 (Linux; Android 7.1.1; OPPO R11t Build/NMF26X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/55.0.2883.91 Mobile Safari/537.36"</span> <span class="string">"121.238.20.93"</span></div><div class="line"></div><div class="line"><span class="comment">#logstash grok分析nginx日志格式</span></div><div class="line">grok &#123;</div><div class="line">   match =&gt; [<span class="string">"message"</span>,<span class="string">"%&#123;IPV4:remote_addr&#125; [\-] %&#123;USERNAME:remote_user&#125; \[%&#123;DATA:time_local&#125;\] \"(?&lt;request&gt;[^\"]*)\" (?&lt;status&gt;\d+) (?&lt;body_bytes_sent&gt;\d+) \"(?&lt;http_referer&gt;[^\"]*)\" \"(?&lt;http_user_agent&gt;[^\"]*)\" \"%&#123;IPV4:http_x_forwarded_for&#125;"</span>]</div><div class="line">&#125;</div><div class="line"></div><div class="line">[root@ELK ~]<span class="comment"># /usr/share/logstash/bin/logstash --path.settings /etc/logstash/ -f /etc/logstash/conf.d/geoip.conf</span></div><div class="line">Sending Logstash<span class="string">'s logs to /var/log/logstash which is now configured via log4j2.properties</span></div><div class="line">&#123;</div><div class="line">           "geoip" =&gt; &#123;&#125;,</div><div class="line">              "ua" =&gt; "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36",</div><div class="line">            "type" =&gt; "Nginx",</div><div class="line">          "clinet" =&gt; "192.168.31.105",</div><div class="line">            "tags" =&gt; [</div><div class="line">        [0] "_geoip_lookup_failure"</div><div class="line">    ],</div><div class="line">            "path" =&gt; "/var/log/nginx/access.log",</div><div class="line">      "@timestamp" =&gt; 2016-12-15T08:13:19.000Z,</div><div class="line">            "size" =&gt; 0,</div><div class="line">          "domain" =&gt; "192.168.31.100",</div><div class="line">        "@version" =&gt; "1",</div><div class="line">            "host" =&gt; "192.168.31.100",</div><div class="line">    "responsetime" =&gt; 0.0,</div><div class="line">          "status" =&gt; "304"</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">2017-10-24_15:42:00.408 [DubboMonitorSendTimer-thread-3] ERROR [com.alibaba.dubbo.common.logger.slf4j.Slf4jLogger]  [DUBBO] Unexpected error occur at send statistic, cause:</div><div class="line"> Failed to invoke the method collect <span class="keyword">in</span> the service com.alibaba.dubbo.monitor.MonitorService. No provider available <span class="keyword">for</span> the service com.alibaba.dubbo.monitor.MonitorService from registry 192.168.1.21:2181 on the consumer 192.168.1.21 using the dubbo version 2.5.3. Please check <span class="keyword">if</span> the providers have been started and registered., dubbo version: 2.5.3, current host: 192.168.1.21com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method collect <span class="keyword">in</span> the service com.alibaba.dubbo.monitor.MonitorService. No provider available <span class="keyword">for</span> the service com.a</div><div class="line">libaba.dubbo.monitor.MonitorService from registry 192.168.1.21:2181 on the consumer 192.168.1.21 using the dubbo version 2.5.3. Please check <span class="keyword">if</span> the providers have been started and registered.	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.checkInvokers(AbstractClusterInvoker.java:246) ~[dubbo-2.5.3.jar:2.5.3]</div><div class="line">	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:55) ~[dubbo-2.5.3.jar:2.5.3]</div><div class="line">	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:227) ~[dubbo-2.5.3.jar:2.5.3]</div><div class="line">	at com.alibaba.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:72) ~[dubbo-2.5.3.jar:2.5.3]</div><div class="line">	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52) ~[dubbo-2.5.3.jar:2.5.3]</div><div class="line">	at com.alibaba.dubbo.common.bytecode.proxy8.collect(proxy8.java) ~[na:2.5.3]</div><div class="line">	at com.alibaba.dubbo.monitor.dubbo.DubboMonitor.send(DubboMonitor.java:113) ~[dubbo-2.5.3.jar:2.5.3]</div><div class="line">	at com.alibaba.dubbo.monitor.dubbo.DubboMonitor<span class="variable">$1</span>.run(DubboMonitor.java:70) ~[dubbo-2.5.3.jar:2.5.3]</div><div class="line">	at java.util.concurrent.Executors<span class="variable">$RunnableAdapter</span>.call(Executors.java:471) [na:1.7.0_80]</div><div class="line">	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304) [na:1.7.0_80]</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.access<span class="variable">$301</span>(ScheduledThreadPoolExecutor.java:178) [na:1.7.0_80]</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.run(ScheduledThreadPoolExecutor.java:293) [na:1.7.0_80]</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_80]</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:615) [na:1.7.0_80]</div><div class="line">	at java.lang.Thread.run(Thread.java:745) [na:1.7.0_80]</div><div class="line">2017-10-24_15:43:00.413 [DubboMonitorSendTimer-thread-3] INFO  [com.alibaba.dubbo.common.logger.slf4j.Slf4jLogger]  [DUBBO] Send statistics to monitor zookeeper://192.168.1</div><div class="line">.21:2181/com.alibaba.dubbo.monitor.MonitorService?dubbo=2.5.3&amp;interface=com.alibaba.dubbo.monitor.MonitorService&amp;pid=11958&amp;timestamp=1508762187622, dubbo version: 2.5.3, current host: 192.168.1.21</div></pre></td></tr></table></figure>
<ul>
<li><p>multiline</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">  beats &#123;</div><div class="line">    port =&gt; 5044</div><div class="line">    codec =&gt; multiline &#123;</div><div class="line">         pattern =&gt; <span class="string">"^%&#123;YEAR&#125;[/-]%&#123;MONTHNUM&#125;[/-]%&#123;MONTHDAY&#125;[/_]%&#123;TIME&#125; "</span></div><div class="line">         negate =&gt; <span class="literal">true</span></div><div class="line">         what =&gt; previous</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Log4J<br>需要配置 Java 应用的 <code>Log4J</code> 设置，启动一个内置的 <code>SocketAppender</code>。修改应用的 log4j.xml 配置文件，添加如下配置段  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;appender name=<span class="string">"LOGSTASH"</span> class=<span class="string">"org.apache.log4j.net.SocketAppender"</span>&gt;</div><div class="line">    &lt;param name=<span class="string">"RemoteHost"</span> value=<span class="string">"logstash_hostname"</span> /&gt;</div><div class="line">    &lt;param name=<span class="string">"ReconnectionDelay"</span> value=<span class="string">"60000"</span> /&gt;</div><div class="line">    &lt;param name=<span class="string">"LocationInfo"</span> value=<span class="string">"true"</span> /&gt;</div><div class="line">    &lt;param name=<span class="string">"Threshold"</span> value=<span class="string">"DEBUG"</span> /&gt;</div><div class="line">&lt;/appender&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>然后把这个新定义的 appender 对象加入到 root logger 里，可以跟其他已有 logger 共存<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;root&gt;</div><div class="line">    &lt;level value=<span class="string">"INFO"</span>/&gt;</div><div class="line">    &lt;appender-ref ref=<span class="string">"OTHERPLACE"</span>/&gt;</div><div class="line">    &lt;appender-ref ref=<span class="string">"LOGSTASH"</span>/&gt;</div><div class="line">&lt;/root&gt;</div></pre></td></tr></table></figure></p>
<p>log4j.properties 配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">log</span>4j.rootLogger=DEBUG, logstash</div><div class="line"></div><div class="line"><span class="comment">###SocketAppender###</span></div><div class="line"><span class="built_in">log</span>4j.appender.logstash=org.apache.log4j.net.SocketAppender</div><div class="line"><span class="built_in">log</span>4j.appender.logstash.Port=4560</div><div class="line"><span class="built_in">log</span>4j.appender.logstash.RemoteHost=logstash_hostname</div><div class="line"><span class="built_in">log</span>4j.appender.logstash.ReconnectionDelay=60000</div><div class="line"><span class="built_in">log</span>4j.appender.logstash.LocationInfo=<span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>Log4J 会持续尝试连接你配置的 <code>logstash_hostname</code> 这个地址，建立连接后，即开始发送日志数据  </p>
<p>Logstash，Java 应用端的配置完成以后，开始设置 Logstash 的接收端，配置如下所示，其中 4560 端口是 Log4J SocketAppender 的默认对端端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">  <span class="built_in">log</span>4j &#123;</div><div class="line">    <span class="built_in">type</span> =&gt; <span class="string">"log4j-json"</span></div><div class="line">    port =&gt; 4560</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>JSON Event layout<br>如果无法采用 socketappender ，必须使用文件方式的，其实 Log4J 有一个 layout 特性，用来控制日志输出的格式。和 Nginx 日志自己拼接 JSON 输出类似，也可以通过 layout 功能，记录成 JSON 格式。</li>
</ul>
<p>参考：<a href="https://github.com/logstash/log4j-jsonevent-layout" target="_blank" rel="external">https://github.com/logstash/log4j-jsonevent-layout</a>  </p>
<p>logstash官方提供的扩展包，可以通过mvnrepository.com搜索下载<br><a href="http://central.maven.org/maven2/net/logstash/log4j/jsonevent-layout/1.7/jsonevent-layout-1.7.jar" target="_blank" rel="external">http://central.maven.org/maven2/net/logstash/log4j/jsonevent-layout/1.7/jsonevent-layout-1.7.jar</a>  </p>
<p>或者直接编辑自己项目的pom.xml添加依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;net.logstash.log4j&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;jsonevent-layout&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.7&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>
<p>然后修改项目的log4j.properties文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">log</span>4j.rootCategory=WARN,RollingLog</div><div class="line"><span class="built_in">log</span>4j.appender.RollingLog=org.apache.log4j.DailyRollingFileAppender</div><div class="line"><span class="built_in">log</span>4j.appender.RollingLog.Threshold=TRACE</div><div class="line"><span class="built_in">log</span>4j.appender.RollingLog.File=api.log</div><div class="line"><span class="built_in">log</span>4j.appender.RollingLog.DatePattern=.yyyy-MM-dd</div><div class="line"><span class="built_in">log</span>4j.appender.RollingLog.layout=net.logstash.log4j.JSONEventLayoutV1</div></pre></td></tr></table></figure></p>
<p>如果是log4j.xml文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;appender name=<span class="string">"Console"</span> class=<span class="string">"org.apace.log4j.ConsoleAppender"</span>&gt;</div><div class="line">    &lt;param name=<span class="string">"Threshould"</span> value=<span class="string">"TRACE"</span> /&gt;</div><div class="line">    &lt;layout class=<span class="string">"net.logstash.log4j.JSONEventLayoutV1"</span> /&gt;</div><div class="line">&lt;/appender&gt;</div></pre></td></tr></table></figure></p>
<p>生成的文件就是Logstash标准的JSON格式，logstash使用下面配置读取<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">    file &#123;</div><div class="line">            codec =&gt; json</div><div class="line">            path =&gt; [<span class="string">"/path/to/log4j.log"</span>]</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>生成的Logstash事件如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"mdc"</span>: &#123;&#125;,</div><div class="line">    <span class="string">"line_number"</span>: <span class="string">"29"</span>,</div><div class="line">    <span class="string">"class"</span>:<span class="string">"org.eclipse,jetty.examples.logging.EchoFormServlet"</span>,</div><div class="line">    <span class="string">"@version"</span>:1,</div><div class="line">    <span class="string">"source_host"</span>:<span class="string">"jvstratusmbp.local"</span>,</div><div class="line">    <span class="string">"thread_name"</span>:<span class="string">"qtp513694835-14"</span>,</div><div class="line">    <span class="string">"message"</span>:<span class="string">"Got request from 0:0:0:0:0:0:0:1%0 using Mozilla\/5.0 (Macintosh;Inter Mac OS X 10_9_1) AppleWebit\/537.36 (KHTML, like Gecko) Chrome \/32.0.1700.77 Safari\/537.36"</span>,</div><div class="line">    <span class="string">"@timestamp"</span>:<span class="string">"2014-01-27T19:52:35.738z"</span>,</div><div class="line">    <span class="string">"level"</span>:<span class="string">"INFO"</span>,</div><div class="line">    <span class="string">"file"</span>:<span class="string">"EchoFormServlet.java"</span>,</div><div class="line">    <span class="string">"method"</span>:<span class="string">"doPost"</span>,</div><div class="line">    <span class="string">"logger_name"</span>:<span class="string">"org.eclipse.jetty.example.logging.EchoFormServlet"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果使用的不是Log4J而是logback项目来记录JAVA日志，Logstash官方也有类似的扩展包，修改pom.xml<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;net.logstash.logback&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;logstash-logback-encoder&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;4.4&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/10/30/Kibana5使用指南/">http://www.yfshare.vip/2017/10/30/Kibana5使用指南/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ELK由Elasticsearch、Logstash和Kibana三部分组件组成，这里新增了一个FileBeat，它是一个轻量级的日志收集处理工具(Agent)，Filebeat占用资源少，适合于在各个服务器上搜集日志后传输给Logstash，官方也推荐此工具&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="Elasticsearch" scheme="http://www.yfshare.vip/tags/Elasticsearch/"/>
    
      <category term="Logstash" scheme="http://www.yfshare.vip/tags/Logstash/"/>
    
      <category term="Kibana" scheme="http://www.yfshare.vip/tags/Kibana/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch查询语法</title>
    <link href="http://www.yfshare.vip/2017/10/30/Elasticsearch%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95/"/>
    <id>http://www.yfshare.vip/2017/10/30/Elasticsearch查询语法/</id>
    <published>2017-10-29T16:34:30.000Z</published>
    <updated>2017-11-02T12:44:27.208Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Elasticsearch在很多情况下被当作一个文本型的NOSQL数据库，也有增删查改操作<br><a id="more"></a></p>
<h4 id="数据写入"><a href="#数据写入" class="headerlink" title="数据写入"></a>数据写入</h4><p>Elasticsearch的一大特点是，全是<code>RESTful</code>接口处理JSON请求<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/logstash-2017.10.29/testlog -d '&#123;</span></div><div class="line">    <span class="string">"date"</span>: <span class="string">"1509271325780"</span></div><div class="line">    <span class="string">"user"</span>: <span class="string">"jack"</span></div><div class="line">    <span class="string">"mesg"</span>: <span class="string">"first message into Elasticsearch"</span></div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<h4 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h4><p>在数据写入时，会返回该数据的<code>_id</code>，这是后续用来获取数据的关键：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET http://localhost:9200/logstash-2017.10.29/testlog/AV9nlDQhv96dGKcHC2zo</span></div><div class="line">&#123;<span class="string">"_index"</span>: <span class="string">"logstash-2017.10.29"</span>,<span class="string">"_type"</span>: <span class="string">"testlog"</span>, <span class="string">"_id"</span>: <span class="string">"AV9nlDQhv96dGKcHC2zo"</span>, <span class="string">"_version"</span>: 1, <span class="string">"found"</span>: <span class="literal">true</span>, <span class="string">"_source"</span>: &#123;</div><div class="line">    <span class="string">"date"</span>: <span class="string">"1509271325780"</span>,</div><div class="line">    <span class="string">"user"</span>: <span class="string">"jack"</span>,</div><div class="line">    <span class="string">"mesg"</span>: <span class="string">"first message into Elasticsearch"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>也可以使用下面语法来获取源数据部分<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -XGET http://localhost:9200/logstash-2017.10.29/testlog/AV9nlDQhv96dGKcHC2zo/_source</div></pre></td></tr></table></figure></p>
<p>或者使用下面语法来指明获取字段<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -XGET http://localhost:9200/logstash-2017.10.29/testlog/AV9nlDQhv96dGKcHC2zo?fields=user,mesg</div></pre></td></tr></table></figure></p>
<h4 id="数据删除"><a href="#数据删除" class="headerlink" title="数据删除"></a>数据删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#删除单条数据</span></div><div class="line"><span class="comment"># curl -XDELETE http://localhost:9200/logstash-2017.10.29/testlog/AV9nlDQhv96dGKcHC2zo</span></div><div class="line"></div><div class="line"><span class="comment">#删除整个type或者整个索引</span></div><div class="line"><span class="comment"># curl -XGET http://localhost:9200/logstash-2017.10.2*</span></div></pre></td></tr></table></figure>
<h4 id="数据更新"><a href="#数据更新" class="headerlink" title="数据更新"></a>数据更新</h4><p>分为两种情况：  </p>
<ol>
<li>全量提交</li>
<li>指明<code>_id</code>再发送一次写入请求<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#全部提交</span></div><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/logstash-2017.10.29/testlog/AV9nlDQhv96dGKcHC2zo -d '&#123;</span></div><div class="line">    <span class="string">"date"</span>: <span class="string">"1509271325780"</span>,</div><div class="line">    <span class="string">"user"</span>: <span class="string">"jack"</span>,</div><div class="line">    <span class="string">"mesg"</span>: <span class="string">"first message into Elasticsearch but version 2"</span></div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#局部提交</span></div><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/logstash-2017.10.29/testlog/AV9nlDQhv96dGKcHC2zo -d '&#123;</span></div><div class="line">    <span class="string">"doc"</span>: &#123;</div><div class="line">        <span class="string">"user"</span>: <span class="string">"jack wang"</span></div><div class="line">    &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/logstash-2017.10.29/testlog/AV9nlDQhv96dGKcHC2zo/_update -d '&#123;</span></div><div class="line">    <span class="string">"scripts"</span>: <span class="string">"ctx._source.user = \"someone\""</span></div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<h4 id="全文搜索"><a href="#全文搜索" class="headerlink" title="全文搜索"></a>全文搜索</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET http://localhost:9200/logstash-2017.10.29/testlog/_search?pretty=true?q='first'</span></div><div class="line"></div><div class="line"><span class="comment"># curl -XGET http://localhost:9200/logstash-2017.10.29/testlog/_search?pretty=true?q=user:"jack"</span></div></pre></td></tr></table></figure>
<h5 id="querystring-语法"><a href="#querystring-语法" class="headerlink" title="querystring 语法"></a>querystring 语法</h5><p>上例中<code>?q=</code>后面的就是querystring语法，会在kibana中经常使用  </p>
<ul>
<li><code>全文检索</code>：直接写搜索的单词。如：<code>?q=aaaa</code></li>
<li><code>单字段的全文检索</code>：在搜索单词之前加上字段名和冒号。如：<code>?q=user:jack</code></li>
<li><code>单字段的精确检索</code>：在搜索单词前加上双引号。如：<code>?q=user:&quot;jack&quot;</code></li>
<li><code>多个检索条件的组合</code>：可以使用<code>NOT</code>、<code>AND</code>、<code>OR</code>来组合检索，必须是大写的。如：<code>?q=user:(&quot;jack&quot; OR &quot;bob&quot;) AND NOT mesg:aaaa</code></li>
<li><code>字段是否存在</code>：<code>_exists_:user</code>表示要求user字段存在，<code>_missing_:user</code>表示user字段不存在。如：<code>?q=_exists_:beat.name</code></li>
<li><code>通配符</code>：用<code>?</code>表示单字母，<code>*</code>表示任意个字母。如：<code>?q=DevE?N</code>，<code>?q=DevE?N*</code></li>
<li><code>正则</code>：比通配符更复杂一点点。如：<code>?q=/dub{2}o/</code><br>注：Elasticsearch正则性能不好，尽量不要使用太复杂或不使用。参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-regexp-query.html#regexp-synntax" target="_blank" rel="external">Elasticsearch正则表达式语法</a>  </li>
<li><code>近似搜索</code>：用<code>~</code>表示搜索单词可能有一字母写的不对。如：<code>?q=dubao~</code></li>
<li><code>范围搜索</code>：对数值和时间。如：<code>?q=@timestamp:&gt;150928968615</code>，<code>?q=@timestamp:[&quot;now-1m&quot; TO &quot;now&quot;]</code></li>
</ul>
<h5 id="DSL语法"><a href="#DSL语法" class="headerlink" title="DSL语法"></a>DSL语法</h5><p>Elasticsearch也支持其他查询语法，具体见：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-queries.html" target="_blank" rel="external">Elasticsearch其他查询语法</a>  </p>
<ul>
<li><code>term query</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XGET http://localhost:9200/_search -d '</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"query"</span>: &#123;</div><div class="line">    <span class="string">"term"</span>: &#123;</div><div class="line">      <span class="string">"_id"</span>: <span class="string">"AV9orWWLv96dGKcHDVyi"</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="聚合请求"><a href="#聚合请求" class="headerlink" title="聚合请求"></a>聚合请求</h5><p>在检索范围确定后，Elasticsearch还执行对结果集做聚合查询，返回更直接的聚合统计结果。<br><code>aggression</code>分为<code>bucket</code>和<code>metric</code>，分别用作词元划分和数值计算。而bucket aggression还支持在自身结果集的基础上叠加新的aggression。<br>实现一个时序的百分比统计<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST 'http://localhost:9200/logstash-2017.10.29/_search?size=0&amp;pretty' -d '&#123;</span></div><div class="line"><span class="string">"aggs"</span>: &#123;</div><div class="line">    <span class="string">"percentile_over_time"</span>: &#123;</div><div class="line">        <span class="string">"date_histogram"</span>: &#123;</div><div class="line">            <span class="string">"field"</span>: <span class="string">"@timestamp"</span>,</div><div class="line">            <span class="string">"interval"</span>: <span class="string">"1m"</span></div><div class="line">        &#125;,</div><div class="line">        <span class="string">"aggs"</span>: &#123;</div><div class="line">            <span class="string">"percentile_one_time"</span>: &#123;</div><div class="line">                <span class="string">"percentiles"</span>: &#123;</div><div class="line">                    <span class="string">"field"</span>: <span class="string">"requesttime"</span></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&#125;<span class="string">'</span></div></pre></td></tr></table></figure></p>
<h5 id="pipeline聚合"><a href="#pipeline聚合" class="headerlink" title="pipeline聚合"></a>pipeline聚合</h5><p>Elasticsearch 2.x 新增pipeline aggression类型，再已有aggression返回的数组数据之后，再对这组数值做一次运算。在Kibana 5.0的timelion中有用到<br>常见的pipeline聚合场景，就是对时序数据求移动平均值<br>示例：<br>对响应时间设置如下：周期为7，移动窗口为30，alpa、beta、gamma参数均为0.5，holt-winters季节性预测2个未来值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"aggs"</span>: &#123;</div><div class="line">        <span class="string">"my_date_histo"</span>: &#123;</div><div class="line">            <span class="string">"date_histogram"</span>: &#123;</div><div class="line">                <span class="string">"field"</span>: <span class="string">"@timestamp"</span>,</div><div class="line">                <span class="string">"interval"</span>: <span class="string">"1h"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"aggs"</span>: &#123;</div><div class="line">                <span class="string">"avgtime"</span>: &#123;</div><div class="line">                    <span class="string">"avg"</span>: &#123; <span class="string">"field"</span>: <span class="string">"requesttime"</span> &#125;</div><div class="line">                &#125;,</div><div class="line">                <span class="string">"the_movavg"</span>: &#123;</div><div class="line">                    <span class="string">"moving_avg"</span>: &#123;</div><div class="line">                        <span class="string">"buckets_path"</span>: <span class="string">"avgtime"</span>,</div><div class="line">                        <span class="string">"window"</span>: 30,</div><div class="line">                        <span class="string">"model"</span>: <span class="string">"holt_winters"</span>,</div><div class="line">                        <span class="string">"predict"</span>: 2,</div><div class="line">                        <span class="string">"settings"</span>: &#123;</div><div class="line">                            <span class="string">"type"</span>: <span class="string">"mult"</span>,</div><div class="line">                            <span class="string">"alpha"</span>: 0.5,</div><div class="line">                            <span class="string">"beat"</span>: 0.5,</div><div class="line">                            <span class="string">"gamma"</span>: 0.5,</div><div class="line">                            <span class="string">"period"</span>: 7,</div><div class="line">                            <span class="string">"pad"</span>: <span class="literal">true</span></div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="buckets-path语法"><a href="#buckets-path语法" class="headerlink" title="buckets_path语法"></a>buckets_path语法</h5><p>aggression是有堆叠层级关系的，所以pipeline aggression在引用 metric aggression时会涉及到层级的问题。在上例中，the_movavg和avgtime是同一级，所以buckets_path直接就写avgtime即可。但如果把the_movavg上提一层，跟my_date_histo同级<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"buckets_path"</span>: <span class="string">"my_date_histo &gt; avgtime"</span></div></pre></td></tr></table></figure></p>
<p>如果用的是返回的数值有多个值的聚合，比如<code>?percentiles</code>或者<code>?extended_stats</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"buckets_path"</span>: <span class="string">"percentile_over_time &gt; percentile_one_time.95"</span></div></pre></td></tr></table></figure></p>
<p>目前Elasticsearch支持的聚合请求列表，参考：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/search-aggregations.html" target="_blank" rel="external">https://www.elastic.co/guide/en/elasticsearch/reference/5.6/search-aggregations.html</a><br>参考阅读：Holt Winters预测算法，见：<a href="https://en.wikipedia.org/wiki/Holt-Winters" target="_blank" rel="external">https://en.wikipedia.org/wiki/Holt-Winters</a>  </p>
<h5 id="搜索请求参数"><a href="#搜索请求参数" class="headerlink" title="搜索请求参数"></a>搜索请求参数</h5><p>搜索请求参数如下：  </p>
<ul>
<li><code>from</code>: 从索引的第几条数据开始返回，默认是0  </li>
<li><code>size</code>: 返回多少条数据，默认是10<br><em>Elasticsearch集群实际是需要给 coordinate node 返回 shards number x (from + size)条数据，然后在单机上进行排序，最后给客户端返回大小为 size的数据。所以请慎用 from和size参数</em><br><em>此外，Elasticsearch 2.x 还增加了一个索引级别的动态控制配置项：index.max_result_window，默认为10000，即from + size大于10000，Elasticsearch会直接拒绝这次请求不进行具体搜索，以保护节点</em><br><em>Elasticsearch 2.x 还优化了，当设置 “size”:0 时，自动改变 search_type为 count。跳过过程的 fetch 阶段</em>  </li>
<li><code>timeout</code>：coordinate node 等待超时时间。当达到阀值后，coordinate node 会直接把当前收到的数据返回个客户端，不再等待 data node后续的返回结果了。<br>注：这个参数只是为了配合客户端程序，并不能取消data node上搜索任务还在运行和占用资源  </li>
<li><code>terminate_after</code>：各data node上，扫描单个分片时找到多少记录后，就认为足够了。这个参数可以切实保护 data node 上搜索任务不会长期运行和占用资源。也就是意味着搜索范围没有覆盖全部索引，是一个抽样数据。准确率不好判断。  </li>
<li><code>request_cache</code>：各data node上，在分片级别对请求的响应（仅限于hits.total数值、 aggression 和 suggestion的结果集）做的缓存。注意，这个缓存的键值要求很严格，请求的JSON必须一字不易，缓存才能命中<br>另外，request_cache 参数不能写在请求的JSON里，只能以URL参数的形式存在，示例如下：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># curl -XPOST http://localhost:9200/_search?request_cache=true -d '</span></div><div class="line">&#123;</div><div class="line">    <span class="string">"size"</span>: 0,</div><div class="line">    <span class="string">"timeout"</span>: <span class="string">"120s"</span>,</div><div class="line">    <span class="string">"terminate_after"</span>: 1000000,</div><div class="line">    <span class="string">"query"</span>: &#123; <span class="string">"match_all"</span>: &#123;&#125; &#125;,</div><div class="line">    <span class="string">"aggs"</span>: &#123;<span class="string">"terms"</span>: &#123; <span class="string">"terms"</span> : &#123; <span class="string">"field"</span> : <span class="string">"keyname"</span> &#125; &#125; &#125;</div><div class="line">&#125;</div><div class="line"><span class="string">'</span></div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/10/30/Elasticsearch查询语法/">http://www.yfshare.vip/2017/10/30/Elasticsearch查询语法/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Elasticsearch在很多情况下被当作一个文本型的NOSQL数据库，也有增删查改操作&lt;br&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.yfshare.vip/categories/ELK/"/>
    
    
      <category term="Elasticsearch" scheme="http://www.yfshare.vip/tags/Elasticsearch/"/>
    
      <category term="查询语法" scheme="http://www.yfshare.vip/tags/%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Python 读取Mysql生成EXCEL（XLSX）</title>
    <link href="http://www.yfshare.vip/2017/10/16/Python-%E8%AF%BB%E5%8F%96Mysql%E7%94%9F%E6%88%90EXCEL%EF%BC%88XLSX%EF%BC%89/"/>
    <id>http://www.yfshare.vip/2017/10/16/Python-读取Mysql生成EXCEL（XLSX）/</id>
    <published>2017-10-16T15:17:50.000Z</published>
    <updated>2017-10-16T15:21:45.307Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>以前做报表从Mysql数据里面提取数据很简单，几条简单的SHELL脚本就可以实现该功能，因为是自己使用，所以对于格式无所谓，以前使用的都是<code>.csv</code>格式，因为其是以<code>逗号</code>区分的，方便脚本处理。这次不一样了，虽然这次接到需求也是从Mysql中导出数据，但是！！导出文件的格式必须是<code>.XLSX</code>这是微软EXCEL软件自有的格式，包含特殊的文件头，所以之前的方法失效了，失效了… 折腾了好久，也请教了别人，终于，终于解决了这个需求。<br><a id="more"></a><br>环境：<br>　　　Centos 7.2.1511<br>　　　Python 2.7.5 -&gt; 3.5</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># python -V</span></div><div class="line">Python 2.7.5</div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#安装easy_install命令</span></div><div class="line">[root@localhost ~]<span class="comment"># wget https://bootstrap.pypa.io/ez_setup.py -O - | python</span></div><div class="line"></div><div class="line"><span class="comment">#安装pip命令(python包管理软件)</span></div><div class="line">[root@localhost ~]<span class="comment"># wget https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c9</span></div><div class="line">[root@localhost ~]<span class="comment"># tar -zxf pip-9.0.1.tar.gz </span></div><div class="line">[root@localhost ~]<span class="comment"># cd pip-9.0.1</span></div><div class="line">[root@localhost pip-9.0.1]<span class="comment"># python setup.py install</span></div><div class="line"></div><div class="line"><span class="comment">#安装python module</span></div><div class="line">[root@localhost ~]<span class="comment"># python select3.py </span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"select3.py"</span>, line 3, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    from sqlalchemy import create_engine</div><div class="line">ImportError: No module named sqlalchemy</div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#安装sqlalchemy模块</span></div><div class="line">[root@localhost ~]<span class="comment"># pip install sqlalchemy</span></div><div class="line">Collecting pymysql</div><div class="line">  Downloading PyMySQL-0.7.11-py2.py3-none-any.whl (78kB)</div><div class="line">    100% |████████████████████████████████| 81kB 48kB/s </div><div class="line">Installing collected packages: pymysql</div><div class="line">Successfully installed pymysql-0.7.11</div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#重复执行python select3.py 安装缺失的模块</span></div><div class="line">[root@localhost ~]<span class="comment"># pip install pymysql</span></div><div class="line">[root@localhost ~]<span class="comment"># pip install pandas</span></div><div class="line"></div><div class="line"><span class="comment"># Python 2.7不支持中文，报错如下，需要升级到 Python ，测试 Python 3.5.4 支持</span></div><div class="line">[root@localhost ~]<span class="comment"># python select3.py </span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"select3.py"</span>, line 10, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    sql.encode(<span class="string">'gb18030'</span>)</div><div class="line">UnicodeDecodeError: <span class="string">'ascii'</span> codec can<span class="string">'t decode byte 0xe6 in position 20: ordinal not in range(128)</span></div><div class="line">[root@localhost ~]#</div></pre></td></tr></table></figure>
<p>升级 Python 2.7.5 至 Python 3.5<br><strong>不要动系统自带的Python，否则系统的某些功能都无法正常使用</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># wget https://www.python.org/ftp/python/3.5.4/Python-3.5.4.tgz</span></div><div class="line">[root@localhost ~]<span class="comment"># yum install openssl-devel -y</span></div><div class="line">[root@localhost ~]<span class="comment"># tar -zxf Python-3.5.4.tgz</span></div><div class="line">[root@localhost ~]<span class="comment"># mkdir -p /usr/local/Python-3.5.4</span></div><div class="line">[root@localhost ~]<span class="comment"># cd Python-3.5.4</span></div><div class="line">[root@localhost Python-3.5.4]<span class="comment"># ./configure --prefix=/usr/local/Python-3.5.4/</span></div><div class="line">[root@localhost Python-3.5.4]<span class="comment"># make &amp;&amp; make install</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/python3.5 -V</span></div><div class="line">Python 3.5.4</div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment"># 现在系统同时存在两个版本的 Python，因此脚本需要的模块需要重新安装，因为Python 3.5.2之后自带 pip3 和 setuptools，因此需要使用 pip3 安装所需要的模块</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/python3.5 select3.py </span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"select3.py"</span>, line 3, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    from sqlalchemy import create_engine</div><div class="line">ImportError: No module named <span class="string">'sqlalchemy'</span></div><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#安装所需要的 Python 模块</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/pip3.5 install sqlalchemy</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/pip3.5 install pymysql</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/pip3.5 install pandas     #这个很慢</span></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/pip3.5 install openpyxl</span></div><div class="line"></div><div class="line">[root@localhost ~]<span class="comment"># cat /etc/profile.d/Python.sh </span></div><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line">Python3_5_home=<span class="string">'/usr/local/Python-3.5.4'</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;Python3_5_home&#125;</span>/bin:<span class="variable">$PATH</span></div><div class="line">[root@localhost ~]<span class="comment"># source /etc/profile.d/Python.sh</span></div><div class="line"></div><div class="line">[root@localhost ~]<span class="comment"># /usr/local/Python-3.5.4/bin/python3.5 select3.py</span></div><div class="line">[root@localhost ~]<span class="comment"># ll | grep output.xlsx </span></div><div class="line">-rw-r--r--   1 root root      4854 Oct 15 06:37 output.xlsx</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p><img src="http://note.youdao.com/yws/api/personal/file/7B8F09CFC0CF45BCAD07916AA8A1CAFB?method=download&amp;shareKey=974173e2da4dc8ec9df2e29c1973427e" alt="Py_mysql_to_excel">  </p>
<p>如果报这个错，好像是 <code>查询SQL</code> 时超时了，在同级目录下会生成 <code>__pycache__</code>文件夹，脚本换个目录（不要在含有<code>__pycache__</code>这个目录的目录中执行 py脚本），然后删掉其父目录，再执行 py 脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pandas/compat/__init__.py"</span>, line 47, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import __builtin__ as builtins</div><div class="line">ImportError: No module named <span class="string">'__builtin__'</span></div><div class="line"></div><div class="line">During handling of the above exception, another exception occurred:</div><div class="line"></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"select.py </span></div><div class="line"></div><div class="line">", line 4, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import pymysql</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pymysql/__init__.py"</span>, line 92, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    from . import connections as _orig_conn</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pymysql/connections.py </span></div><div class="line"></div><div class="line">", line 13, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import socket</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/socket.py </span></div><div class="line"></div><div class="line">", line 52, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import os, sys, io, selectors</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/selectors.py </span></div><div class="line"></div><div class="line">", line 11, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import select</div><div class="line">  File <span class="string">"/data/soros/job/report/jinrongban_data_back/test/select.py </span></div><div class="line"></div><div class="line">", line 5, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import pandas as pd</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pandas/__init__.py"</span>, line 23, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    from pandas.compat.numpy import *</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/site-packages/pandas/compat/__init__.py"</span>, line 60, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    import http.client as httplib</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/http/client.py </span></div><div class="line"></div><div class="line">", line 739, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    class HTTPConnection:</div><div class="line">  File <span class="string">"/usr/local/Python-3.5.4/lib/python3.5/http/client.py </span></div><div class="line"></div><div class="line">", line 749, <span class="keyword">in</span> HTTPConnection</div><div class="line">    def __init__(self, host, port=None, timeout=socket._GLOBAL_DEFAULT_TIMEOUT,</div><div class="line">AttributeError: module <span class="string">'socket'</span> has no attribute <span class="string">'_GLOBAL_DEFAULT_TIMEOUT'</span></div></pre></td></tr></table></figure></p>
<p>Python脚本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat select3.py</span></div><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment">#-*- coding: utf8 -*-</span></div><div class="line">from sqlalchemy import create_engine</div><div class="line">import pymysql</div><div class="line">import pandas as pd</div><div class="line">from pandas import DataFrame,Series</div><div class="line"></div><div class="line">engine=create_engine(<span class="string">'mysql+pymysql://username:password@192.168.1.1/database_name?charset=gbk,pool_timeout=3000'</span>)</div><div class="line">sql=<span class="string">"select count(*) as '总数' from database.table1;"</span></div><div class="line">sql.encode(<span class="string">'gb18030'</span>)</div><div class="line">df=pd.read_sql(sql,engine)</div><div class="line">writer = pd.ExcelWriter(<span class="string">'/root/output.xlsx'</span>)</div><div class="line">df.to_excel(writer,<span class="string">'Sheet1'</span>,index=False)</div><div class="line">writer.save()</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>附件：<br><a href="http://note.youdao.com/yws/api/personal/file/E1F6B7761791434088E5695A6FD9F129?method=download&amp;shareKey=91d60ea9e7ec086373e91948ff2c6038" target="_blank" rel="external">Python-3.5.4.tar.gz</a><br><a href="http://note.youdao.com/yws/api/personal/file/B4252F91B6C44921BDFB59666FBB099F?method=download&amp;shareKey=3217d852ff44cf5c33a44c442eacf32c" target="_blank" rel="external">select3.py</a><br><a href="http://note.youdao.com/yws/api/personal/file/A971448108714F66B09900242EAD747D?method=download&amp;shareKey=5a644f1f069d121d8b1f356013aeb84e" target="_blank" rel="external">numpy-1.13.3-cp35-cp35m-manylinux1_x86_64.whl</a>  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/10/16/Python-读取Mysql生成EXCEL（XLSX）/">http://www.yfshare.vip/2017/10/16/Python-读取Mysql生成EXCEL（XLSX）/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前做报表从Mysql数据里面提取数据很简单，几条简单的SHELL脚本就可以实现该功能，因为是自己使用，所以对于格式无所谓，以前使用的都是&lt;code&gt;.csv&lt;/code&gt;格式，因为其是以&lt;code&gt;逗号&lt;/code&gt;区分的，方便脚本处理。这次不一样了，虽然这次接到需求也是从Mysql中导出数据，但是！！导出文件的格式必须是&lt;code&gt;.XLSX&lt;/code&gt;这是微软EXCEL软件自有的格式，包含特殊的文件头，所以之前的方法失效了，失效了… 折腾了好久，也请教了别人，终于，终于解决了这个需求。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.yfshare.vip/categories/Python/"/>
    
    
      <category term="Mysql" scheme="http://www.yfshare.vip/tags/Mysql/"/>
    
      <category term="Python" scheme="http://www.yfshare.vip/tags/Python/"/>
    
      <category term="Excel" scheme="http://www.yfshare.vip/tags/Excel/"/>
    
      <category term="Xlsx" scheme="http://www.yfshare.vip/tags/Xlsx/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix监控redis</title>
    <link href="http://www.yfshare.vip/2017/09/10/Zabbix%E7%9B%91%E6%8E%A7redis/"/>
    <id>http://www.yfshare.vip/2017/09/10/Zabbix监控redis/</id>
    <published>2017-09-10T12:55:10.000Z</published>
    <updated>2017-09-10T12:57:51.573Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>Zabbix监控Redis<br><a id="more"></a><br>环境：<br>　　　Centos 7.3<br>　　　Zabbix version : 3.0.2<br>　　　Redis version : 3.2.5  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#监控脚本</span></div><div class="line">[root@localhost ~]<span class="comment"># cd /etc/zabbix/scripts/</span></div><div class="line">[root@localhost scripts]<span class="comment"># ls</span></div><div class="line">check_redis.sh</div><div class="line">[root@localhost scripts]<span class="comment"># cat check_redis.sh </span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">PORT=<span class="string">'6379'</span></div><div class="line">STATUS_redis=`/bin/redis-cli -h <span class="string">'192.168.1.1'</span> -p <span class="variable">$PORT</span> <span class="_">-a</span> redis_password ping`</div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$STATUS_redis</span>"</span> == <span class="string">'PONG'</span> ];<span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">'1'</span></div><div class="line"><span class="keyword">else</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">'0'</span></div><div class="line"><span class="keyword">fi</span></div><div class="line">[root@localhost scripts]<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#zabbix agent</span></div><div class="line">[root@localhost ~]<span class="comment"># cd /etc/zabbix/zabbix_agentd.d/</span></div><div class="line">[root@localhost zabbix_agentd.d]<span class="comment"># cat userparameter_redis.conf </span></div><div class="line">UserParameter=redis_status[*],/bin/redis-cli -h <span class="string">'192.168.1.1'</span> -p <span class="variable">$1</span> <span class="_">-a</span> redis_password info | grep -w <span class="variable">$2</span> | awk -F<span class="string">':'</span> <span class="string">'&#123;print $NF&#125;'</span></div><div class="line">UserParameter=redis_ping,sh /etc/zabbix/scripts/check_redis.sh</div><div class="line">[root@localhost zabbix_agentd.d]<span class="comment">#</span></div><div class="line"></div><div class="line">[root@localhost ~]<span class="comment"># systemctl restart zabbix-agent</span></div><div class="line">[root@localhost ~]<span class="comment"># zabbix_get -s localhost -k redis_ping</span></div><div class="line">1</div><div class="line">[root@localhost ~]<span class="comment"># zabbix_get -s localhost -k redis_status[6379,used_memory]</span></div><div class="line">1210708664</div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>把修改后的模版链接到主机上<br><img src="http://note.youdao.com/yws/api/personal/file/CC389D2BC7B64E31AC375564D51DFFDD?method=download&amp;shareKey=f62b62d5785e6b5d59091beb1a84e087" alt="Zabbix Monitor Redis"><br><img src="http://note.youdao.com/yws/api/personal/file/4B422DF4096E4BB29C95C36C94BB17A2?method=download&amp;shareKey=ed5f2e64d8d7999e4daf559e6c48c10f" alt="Zabbix Monitor Redis"><br><img src="http://note.youdao.com/yws/api/personal/file/70AC5B37AF304881A771259522ACF1AE?method=download&amp;shareKey=24338b2339b17eddff0fa60d721d07f9" alt="Zabbix Monitor Redis"><br><img src="http://note.youdao.com/yws/api/personal/file/F043F5ABCE964C9A88B7DC1D4BE4E600?method=download&amp;shareKey=78a2dd918ea6d15bbbfc7a003fd8fc1c" alt="Zabbix Monitor Redis"><br><img src="http://note.youdao.com/yws/api/personal/file/965860E7F3C343109324312F17CF0C42?method=download&amp;shareKey=58fe3b21783cc6c81cdeccbff4ffe9c8" alt="Zabbix Monitor Redis"><br><img src="http://note.youdao.com/yws/api/personal/file/6D2C578CB4C1406AB0C7201AAAF18CE8?method=download&amp;shareKey=ce1f49d596164110225afdf819ae1ca3" alt="Zabbix Monitor Redis"><br><img src="http://note.youdao.com/yws/api/personal/file/A210C26E59984F99936F36C525E225A3?method=download&amp;shareKey=a87e00f9930183e621c0300a0745a9ef" alt="Zabbix Monitor Redis">  </p>
<p>参考：<a href="http://blog.hackroad.com/operations-engineer/linux_server/11019.html" target="_blank" rel="external">http://blog.hackroad.com/operations-engineer/linux_server/11019.html</a><br><a href="http://www.cnblogs.com/gnuhpc/p/4609592.html" target="_blank" rel="external">http://www.cnblogs.com/gnuhpc/p/4609592.html</a>  </p>
<p>附件：<br><a href="http://note.youdao.com/yws/api/personal/file/E9122E61EE1E48E78C30C36C458A83FC?method=download&amp;shareKey=09aa40c7a459918803a8f76566c9865c" target="_blank" rel="external">Zabbix监控redis模版6379</a><br>注：这个redis监控脚本需要根据实际情况修改  </p>
<hr>
<p>本作品采用<a href="https://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://www.yfshare.vip">Jack Wang Blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。<br><img src="http://note.youdao.com/yws/api/personal/file/FE3C6F68961F4541AF284E5F346FC3CA?method=download&amp;shareKey=c5e4c3ca81daa6e908d5630f8c6ec242" alt="打赏"><br>本文出自”Jack Wang Blog”：<a href="http://www.yfshare.vip/2017/09/10/Zabbix监控redis/">http://www.yfshare.vip/2017/09/10/Zabbix监控redis/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Zabbix监控Redis&lt;br&gt;
    
    </summary>
    
      <category term="Zabbix" scheme="http://www.yfshare.vip/categories/Zabbix/"/>
    
    
      <category term="zabbix" scheme="http://www.yfshare.vip/tags/zabbix/"/>
    
      <category term="redis" scheme="http://www.yfshare.vip/tags/redis/"/>
    
  </entry>
  
</feed>
